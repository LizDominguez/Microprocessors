
lab6f.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000744  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  000007b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00802000  00802000  000007b8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007b8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000828  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000049f2  00000000  00000000  000008c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003cbe  00000000  00000000  000052b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008ab  00000000  00000000  00008f70  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000264  00000000  00000000  0000981c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00003452  00000000  00000000  00009a80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004e7  00000000  00000000  0000ced2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  0000d3b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
   8:	0c 94 9d 02 	jmp	0x53a	; 0x53a <__vector_2>
   c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  10:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  14:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  18:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  1c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  20:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  24:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  28:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  2c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  30:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  34:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  38:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  3c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  40:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  44:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  48:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  4c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  50:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  54:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  58:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  5c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  60:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  64:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  68:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  6c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  70:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  74:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  78:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  7c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  80:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  84:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  88:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  8c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  90:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  94:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  98:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  9c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  bc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  f8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
  fc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 100:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 104:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 108:	0c 94 df 02 	jmp	0x5be	; 0x5be <__vector_66>
 10c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 110:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 114:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 118:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 11c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 120:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 124:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 128:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 12c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 130:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 134:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 138:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 13c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 140:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 144:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 148:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 14c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 150:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 154:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 158:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 15c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 160:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 164:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 168:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 16c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 170:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 174:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 178:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 17c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 180:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 184:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 188:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 18c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 190:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 194:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 198:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 19c:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1a8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1ac:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1b8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1bc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1c8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1cc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1d8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1dc:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1e8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1ec:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f0:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f4:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>
 1f8:	0c 94 16 01 	jmp	0x22c	; 0x22c <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_clear_bss>:
 214:	20 e2       	ldi	r18, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	01 c0       	rjmp	.+2      	; 0x21e <.do_clear_bss_start>

0000021c <.do_clear_bss_loop>:
 21c:	1d 92       	st	X+, r1

0000021e <.do_clear_bss_start>:
 21e:	a2 30       	cpi	r26, 0x02	; 2
 220:	b2 07       	cpc	r27, r18
 222:	e1 f7       	brne	.-8      	; 0x21c <.do_clear_bss_loop>
 224:	0e 94 21 03 	call	0x642	; 0x642 <main>
 228:	0c 94 a0 03 	jmp	0x740	; 0x740 <_exit>

0000022c <__bad_interrupt>:
 22c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000230 <CLK_init>:

void delay_50us(void)
{
	volatile uint32_t ticks;				//Volatile prevents compiler optimization
	for(ticks = 0; ticks <= 2000; ticks++);	//increment 2e6 times -> ~ 1 sec
}
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	cd b7       	in	r28, 0x3d	; 61
 236:	de b7       	in	r29, 0x3e	; 62
 238:	80 e5       	ldi	r24, 0x50	; 80
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	22 e0       	ldi	r18, 0x02	; 2
 23e:	fc 01       	movw	r30, r24
 240:	20 83       	st	Z, r18
 242:	00 00       	nop
 244:	80 e5       	ldi	r24, 0x50	; 80
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	fc 01       	movw	r30, r24
 24a:	81 81       	ldd	r24, Z+1	; 0x01
 24c:	88 2f       	mov	r24, r24
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	82 70       	andi	r24, 0x02	; 2
 252:	99 27       	eor	r25, r25
 254:	89 2b       	or	r24, r25
 256:	b1 f3       	breq	.-20     	; 0x244 <CLK_init+0x14>
 258:	84 e3       	ldi	r24, 0x34	; 52
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	28 ed       	ldi	r18, 0xD8	; 216
 25e:	fc 01       	movw	r30, r24
 260:	20 83       	st	Z, r18
 262:	80 e4       	ldi	r24, 0x40	; 64
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	21 e0       	ldi	r18, 0x01	; 1
 268:	fc 01       	movw	r30, r24
 26a:	20 83       	st	Z, r18
 26c:	df 91       	pop	r29
 26e:	cf 91       	pop	r28
 270:	08 95       	ret

00000272 <SPI_init>:
 272:	cf 93       	push	r28
 274:	df 93       	push	r29
 276:	cd b7       	in	r28, 0x3d	; 61
 278:	de b7       	in	r29, 0x3e	; 62
 27a:	80 e0       	ldi	r24, 0x00	; 0
 27c:	96 e0       	ldi	r25, 0x06	; 6
 27e:	28 ef       	ldi	r18, 0xF8	; 248
 280:	fc 01       	movw	r30, r24
 282:	20 83       	st	Z, r18
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	96 e0       	ldi	r25, 0x06	; 6
 288:	fc 01       	movw	r30, r24
 28a:	14 82       	std	Z+4, r1	; 0x04
 28c:	80 ea       	ldi	r24, 0xA0	; 160
 28e:	96 e0       	ldi	r25, 0x06	; 6
 290:	2f eb       	ldi	r18, 0xBF	; 191
 292:	fc 01       	movw	r30, r24
 294:	20 83       	st	Z, r18
 296:	80 ea       	ldi	r24, 0xA0	; 160
 298:	96 e0       	ldi	r25, 0x06	; 6
 29a:	28 e1       	ldi	r18, 0x18	; 24
 29c:	fc 01       	movw	r30, r24
 29e:	24 83       	std	Z+4, r18	; 0x04
 2a0:	80 ec       	ldi	r24, 0xC0	; 192
 2a2:	9b e0       	ldi	r25, 0x0B	; 11
 2a4:	24 e5       	ldi	r18, 0x54	; 84
 2a6:	fc 01       	movw	r30, r24
 2a8:	20 83       	st	Z, r18
 2aa:	df 91       	pop	r29
 2ac:	cf 91       	pop	r28
 2ae:	08 95       	ret

000002b0 <USART_init>:
 2b0:	cf 93       	push	r28
 2b2:	df 93       	push	r29
 2b4:	cd b7       	in	r28, 0x3d	; 61
 2b6:	de b7       	in	r29, 0x3e	; 62
 2b8:	80 e6       	ldi	r24, 0x60	; 96
 2ba:	96 e0       	ldi	r25, 0x06	; 6
 2bc:	28 ef       	ldi	r18, 0xF8	; 248
 2be:	fc 01       	movw	r30, r24
 2c0:	21 83       	std	Z+1, r18	; 0x01
 2c2:	80 e6       	ldi	r24, 0x60	; 96
 2c4:	96 e0       	ldi	r25, 0x06	; 6
 2c6:	28 ef       	ldi	r18, 0xF8	; 248
 2c8:	fc 01       	movw	r30, r24
 2ca:	25 83       	std	Z+5, r18	; 0x05
 2cc:	80 e6       	ldi	r24, 0x60	; 96
 2ce:	96 e0       	ldi	r25, 0x06	; 6
 2d0:	24 e0       	ldi	r18, 0x04	; 4
 2d2:	fc 01       	movw	r30, r24
 2d4:	22 83       	std	Z+2, r18	; 0x02
 2d6:	80 ec       	ldi	r24, 0xC0	; 192
 2d8:	97 e0       	ldi	r25, 0x07	; 7
 2da:	2a e0       	ldi	r18, 0x0A	; 10
 2dc:	fc 01       	movw	r30, r24
 2de:	21 83       	std	Z+1, r18	; 0x01
 2e0:	80 ec       	ldi	r24, 0xC0	; 192
 2e2:	97 e0       	ldi	r25, 0x07	; 7
 2e4:	2a e0       	ldi	r18, 0x0A	; 10
 2e6:	fc 01       	movw	r30, r24
 2e8:	26 83       	std	Z+6, r18	; 0x06
 2ea:	80 ea       	ldi	r24, 0xA0	; 160
 2ec:	99 e0       	ldi	r25, 0x09	; 9
 2ee:	28 e0       	ldi	r18, 0x08	; 8
 2f0:	fc 01       	movw	r30, r24
 2f2:	26 83       	std	Z+6, r18	; 0x06
 2f4:	80 ea       	ldi	r24, 0xA0	; 160
 2f6:	99 e0       	ldi	r25, 0x09	; 9
 2f8:	20 ed       	ldi	r18, 0xD0	; 208
 2fa:	fc 01       	movw	r30, r24
 2fc:	27 83       	std	Z+7, r18	; 0x07
 2fe:	80 ea       	ldi	r24, 0xA0	; 160
 300:	99 e0       	ldi	r25, 0x09	; 9
 302:	28 e1       	ldi	r18, 0x18	; 24
 304:	fc 01       	movw	r30, r24
 306:	24 83       	std	Z+4, r18	; 0x04
 308:	80 ea       	ldi	r24, 0xA0	; 160
 30a:	99 e0       	ldi	r25, 0x09	; 9
 30c:	2b e0       	ldi	r18, 0x0B	; 11
 30e:	fc 01       	movw	r30, r24
 310:	25 83       	std	Z+5, r18	; 0x05
 312:	df 91       	pop	r29
 314:	cf 91       	pop	r28
 316:	08 95       	ret

00000318 <spiWrite>:
 318:	cf 93       	push	r28
 31a:	df 93       	push	r29
 31c:	1f 92       	push	r1
 31e:	cd b7       	in	r28, 0x3d	; 61
 320:	de b7       	in	r29, 0x3e	; 62
 322:	89 83       	std	Y+1, r24	; 0x01
 324:	80 ec       	ldi	r24, 0xC0	; 192
 326:	9b e0       	ldi	r25, 0x0B	; 11
 328:	29 81       	ldd	r18, Y+1	; 0x01
 32a:	fc 01       	movw	r30, r24
 32c:	23 83       	std	Z+3, r18	; 0x03
 32e:	00 00       	nop
 330:	80 ec       	ldi	r24, 0xC0	; 192
 332:	9b e0       	ldi	r25, 0x0B	; 11
 334:	fc 01       	movw	r30, r24
 336:	82 81       	ldd	r24, Z+2	; 0x02
 338:	88 23       	and	r24, r24
 33a:	d4 f7       	brge	.-12     	; 0x330 <spiWrite+0x18>
 33c:	80 ec       	ldi	r24, 0xC0	; 192
 33e:	9b e0       	ldi	r25, 0x0B	; 11
 340:	fc 01       	movw	r30, r24
 342:	83 81       	ldd	r24, Z+3	; 0x03
 344:	0f 90       	pop	r0
 346:	df 91       	pop	r29
 348:	cf 91       	pop	r28
 34a:	08 95       	ret

0000034c <accRead>:
 34c:	cf 93       	push	r28
 34e:	df 93       	push	r29
 350:	1f 92       	push	r1
 352:	1f 92       	push	r1
 354:	cd b7       	in	r28, 0x3d	; 61
 356:	de b7       	in	r29, 0x3e	; 62
 358:	8a 83       	std	Y+2, r24	; 0x02
 35a:	80 ea       	ldi	r24, 0xA0	; 160
 35c:	96 e0       	ldi	r25, 0x06	; 6
 35e:	24 e0       	ldi	r18, 0x04	; 4
 360:	fc 01       	movw	r30, r24
 362:	25 83       	std	Z+5, r18	; 0x05
 364:	80 ea       	ldi	r24, 0xA0	; 160
 366:	96 e0       	ldi	r25, 0x06	; 6
 368:	28 e0       	ldi	r18, 0x08	; 8
 36a:	fc 01       	movw	r30, r24
 36c:	26 83       	std	Z+6, r18	; 0x06
 36e:	8a 81       	ldd	r24, Y+2	; 0x02
 370:	83 77       	andi	r24, 0x73	; 115
 372:	80 68       	ori	r24, 0x80	; 128
 374:	0e 94 8c 01 	call	0x318	; 0x318 <spiWrite>
 378:	89 83       	std	Y+1, r24	; 0x01
 37a:	80 ea       	ldi	r24, 0xA0	; 160
 37c:	96 e0       	ldi	r25, 0x06	; 6
 37e:	28 e0       	ldi	r18, 0x08	; 8
 380:	fc 01       	movw	r30, r24
 382:	25 83       	std	Z+5, r18	; 0x05
 384:	89 81       	ldd	r24, Y+1	; 0x01
 386:	0f 90       	pop	r0
 388:	0f 90       	pop	r0
 38a:	df 91       	pop	r29
 38c:	cf 91       	pop	r28
 38e:	08 95       	ret

00000390 <accWrite>:
 390:	cf 93       	push	r28
 392:	df 93       	push	r29
 394:	00 d0       	rcall	.+0      	; 0x396 <accWrite+0x6>
 396:	cd b7       	in	r28, 0x3d	; 61
 398:	de b7       	in	r29, 0x3e	; 62
 39a:	8a 83       	std	Y+2, r24	; 0x02
 39c:	6b 83       	std	Y+3, r22	; 0x03
 39e:	80 ea       	ldi	r24, 0xA0	; 160
 3a0:	96 e0       	ldi	r25, 0x06	; 6
 3a2:	24 e0       	ldi	r18, 0x04	; 4
 3a4:	fc 01       	movw	r30, r24
 3a6:	25 83       	std	Z+5, r18	; 0x05
 3a8:	80 ea       	ldi	r24, 0xA0	; 160
 3aa:	96 e0       	ldi	r25, 0x06	; 6
 3ac:	28 e0       	ldi	r18, 0x08	; 8
 3ae:	fc 01       	movw	r30, r24
 3b0:	26 83       	std	Z+6, r18	; 0x06
 3b2:	8a 81       	ldd	r24, Y+2	; 0x02
 3b4:	0e 94 8c 01 	call	0x318	; 0x318 <spiWrite>
 3b8:	89 83       	std	Y+1, r24	; 0x01
 3ba:	8b 81       	ldd	r24, Y+3	; 0x03
 3bc:	0e 94 8c 01 	call	0x318	; 0x318 <spiWrite>
 3c0:	89 83       	std	Y+1, r24	; 0x01
 3c2:	80 ea       	ldi	r24, 0xA0	; 160
 3c4:	96 e0       	ldi	r25, 0x06	; 6
 3c6:	28 e0       	ldi	r18, 0x08	; 8
 3c8:	fc 01       	movw	r30, r24
 3ca:	25 83       	std	Z+5, r18	; 0x05
 3cc:	23 96       	adiw	r28, 0x03	; 3
 3ce:	cd bf       	out	0x3d, r28	; 61
 3d0:	de bf       	out	0x3e, r29	; 62
 3d2:	df 91       	pop	r29
 3d4:	cf 91       	pop	r28
 3d6:	08 95       	ret

000003d8 <gyroRead>:
 3d8:	cf 93       	push	r28
 3da:	df 93       	push	r29
 3dc:	1f 92       	push	r1
 3de:	1f 92       	push	r1
 3e0:	cd b7       	in	r28, 0x3d	; 61
 3e2:	de b7       	in	r29, 0x3e	; 62
 3e4:	8a 83       	std	Y+2, r24	; 0x02
 3e6:	80 ea       	ldi	r24, 0xA0	; 160
 3e8:	96 e0       	ldi	r25, 0x06	; 6
 3ea:	20 e1       	ldi	r18, 0x10	; 16
 3ec:	fc 01       	movw	r30, r24
 3ee:	26 83       	std	Z+6, r18	; 0x06
 3f0:	8a 81       	ldd	r24, Y+2	; 0x02
 3f2:	83 77       	andi	r24, 0x73	; 115
 3f4:	80 68       	ori	r24, 0x80	; 128
 3f6:	0e 94 8c 01 	call	0x318	; 0x318 <spiWrite>
 3fa:	89 83       	std	Y+1, r24	; 0x01
 3fc:	80 ea       	ldi	r24, 0xA0	; 160
 3fe:	96 e0       	ldi	r25, 0x06	; 6
 400:	20 e1       	ldi	r18, 0x10	; 16
 402:	fc 01       	movw	r30, r24
 404:	25 83       	std	Z+5, r18	; 0x05
 406:	89 81       	ldd	r24, Y+1	; 0x01
 408:	0f 90       	pop	r0
 40a:	0f 90       	pop	r0
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	08 95       	ret

00000412 <gyroWrite>:
 412:	cf 93       	push	r28
 414:	df 93       	push	r29
 416:	00 d0       	rcall	.+0      	; 0x418 <gyroWrite+0x6>
 418:	1f 92       	push	r1
 41a:	cd b7       	in	r28, 0x3d	; 61
 41c:	de b7       	in	r29, 0x3e	; 62
 41e:	8b 83       	std	Y+3, r24	; 0x03
 420:	6c 83       	std	Y+4, r22	; 0x04
 422:	80 ea       	ldi	r24, 0xA0	; 160
 424:	96 e0       	ldi	r25, 0x06	; 6
 426:	20 e1       	ldi	r18, 0x10	; 16
 428:	fc 01       	movw	r30, r24
 42a:	26 83       	std	Z+6, r18	; 0x06
 42c:	8b 81       	ldd	r24, Y+3	; 0x03
 42e:	0e 94 8c 01 	call	0x318	; 0x318 <spiWrite>
 432:	8a 83       	std	Y+2, r24	; 0x02
 434:	8c 81       	ldd	r24, Y+4	; 0x04
 436:	0e 94 8c 01 	call	0x318	; 0x318 <spiWrite>
 43a:	8a 83       	std	Y+2, r24	; 0x02
 43c:	80 ea       	ldi	r24, 0xA0	; 160
 43e:	96 e0       	ldi	r25, 0x06	; 6
 440:	20 e1       	ldi	r18, 0x10	; 16
 442:	fc 01       	movw	r30, r24
 444:	25 83       	std	Z+5, r18	; 0x05
 446:	24 96       	adiw	r28, 0x04	; 4
 448:	cd bf       	out	0x3d, r28	; 61
 44a:	de bf       	out	0x3e, r29	; 62
 44c:	df 91       	pop	r29
 44e:	cf 91       	pop	r28
 450:	08 95       	ret

00000452 <accel_init>:
 452:	cf 93       	push	r28
 454:	df 93       	push	r29
 456:	cd b7       	in	r28, 0x3d	; 61
 458:	de b7       	in	r29, 0x3e	; 62
 45a:	80 e4       	ldi	r24, 0x40	; 64
 45c:	96 e0       	ldi	r25, 0x06	; 6
 45e:	fc 01       	movw	r30, r24
 460:	10 82       	st	Z, r1
 462:	80 e4       	ldi	r24, 0x40	; 64
 464:	96 e0       	ldi	r25, 0x06	; 6
 466:	21 e0       	ldi	r18, 0x01	; 1
 468:	fc 01       	movw	r30, r24
 46a:	21 87       	std	Z+9, r18	; 0x09
 46c:	80 e4       	ldi	r24, 0x40	; 64
 46e:	96 e0       	ldi	r25, 0x06	; 6
 470:	20 e8       	ldi	r18, 0x80	; 128
 472:	fc 01       	movw	r30, r24
 474:	22 87       	std	Z+10, r18	; 0x0a
 476:	80 e4       	ldi	r24, 0x40	; 64
 478:	96 e0       	ldi	r25, 0x06	; 6
 47a:	22 e0       	ldi	r18, 0x02	; 2
 47c:	fc 01       	movw	r30, r24
 47e:	27 8b       	std	Z+23, r18	; 0x17
 480:	61 e0       	ldi	r22, 0x01	; 1
 482:	83 e2       	ldi	r24, 0x23	; 35
 484:	0e 94 c8 01 	call	0x390	; 0x390 <accWrite>
 488:	69 ec       	ldi	r22, 0xC9	; 201
 48a:	83 e2       	ldi	r24, 0x23	; 35
 48c:	0e 94 c8 01 	call	0x390	; 0x390 <accWrite>
 490:	67 e9       	ldi	r22, 0x97	; 151
 492:	80 e2       	ldi	r24, 0x20	; 32
 494:	0e 94 c8 01 	call	0x390	; 0x390 <accWrite>
 498:	df 91       	pop	r29
 49a:	cf 91       	pop	r28
 49c:	08 95       	ret

0000049e <gyro_init>:
 49e:	cf 93       	push	r28
 4a0:	df 93       	push	r29
 4a2:	cd b7       	in	r28, 0x3d	; 61
 4a4:	de b7       	in	r29, 0x3e	; 62
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	96 e0       	ldi	r25, 0x06	; 6
 4aa:	28 e0       	ldi	r18, 0x08	; 8
 4ac:	fc 01       	movw	r30, r24
 4ae:	24 83       	std	Z+4, r18	; 0x04
 4b0:	80 e0       	ldi	r24, 0x00	; 0
 4b2:	96 e0       	ldi	r25, 0x06	; 6
 4b4:	21 e0       	ldi	r18, 0x01	; 1
 4b6:	fc 01       	movw	r30, r24
 4b8:	21 87       	std	Z+9, r18	; 0x09
 4ba:	80 e0       	ldi	r24, 0x00	; 0
 4bc:	96 e0       	ldi	r25, 0x06	; 6
 4be:	22 e0       	ldi	r18, 0x02	; 2
 4c0:	fc 01       	movw	r30, r24
 4c2:	22 87       	std	Z+10, r18	; 0x0a
 4c4:	80 e0       	ldi	r24, 0x00	; 0
 4c6:	96 e0       	ldi	r25, 0x06	; 6
 4c8:	20 e0       	ldi	r18, 0x00	; 0
 4ca:	36 e0       	ldi	r19, 0x06	; 6
 4cc:	f9 01       	movw	r30, r18
 4ce:	21 81       	ldd	r18, Z+1	; 0x01
 4d0:	2d 7f       	andi	r18, 0xFD	; 253
 4d2:	fc 01       	movw	r30, r24
 4d4:	21 83       	std	Z+1, r18	; 0x01
 4d6:	80 e0       	ldi	r24, 0x00	; 0
 4d8:	96 e0       	ldi	r25, 0x06	; 6
 4da:	21 e0       	ldi	r18, 0x01	; 1
 4dc:	fc 01       	movw	r30, r24
 4de:	27 8b       	std	Z+23, r18	; 0x17
 4e0:	61 e0       	ldi	r22, 0x01	; 1
 4e2:	80 e2       	ldi	r24, 0x20	; 32
 4e4:	0e 94 09 02 	call	0x412	; 0x412 <gyroWrite>
 4e8:	6f ec       	ldi	r22, 0xCF	; 207
 4ea:	80 e2       	ldi	r24, 0x20	; 32
 4ec:	0e 94 09 02 	call	0x412	; 0x412 <gyroWrite>
 4f0:	68 e0       	ldi	r22, 0x08	; 8
 4f2:	82 e2       	ldi	r24, 0x22	; 34
 4f4:	0e 94 09 02 	call	0x412	; 0x412 <gyroWrite>
 4f8:	60 e3       	ldi	r22, 0x30	; 48
 4fa:	83 e2       	ldi	r24, 0x23	; 35
 4fc:	0e 94 09 02 	call	0x412	; 0x412 <gyroWrite>
 500:	df 91       	pop	r29
 502:	cf 91       	pop	r28
 504:	08 95       	ret

00000506 <send_char>:
 506:	cf 93       	push	r28
 508:	df 93       	push	r29
 50a:	1f 92       	push	r1
 50c:	cd b7       	in	r28, 0x3d	; 61
 50e:	de b7       	in	r29, 0x3e	; 62
 510:	89 83       	std	Y+1, r24	; 0x01
 512:	00 00       	nop
 514:	80 ea       	ldi	r24, 0xA0	; 160
 516:	99 e0       	ldi	r25, 0x09	; 9
 518:	fc 01       	movw	r30, r24
 51a:	81 81       	ldd	r24, Z+1	; 0x01
 51c:	88 2f       	mov	r24, r24
 51e:	90 e0       	ldi	r25, 0x00	; 0
 520:	80 72       	andi	r24, 0x20	; 32
 522:	99 27       	eor	r25, r25
 524:	89 2b       	or	r24, r25
 526:	b1 f3       	breq	.-20     	; 0x514 <send_char+0xe>
 528:	80 ea       	ldi	r24, 0xA0	; 160
 52a:	99 e0       	ldi	r25, 0x09	; 9
 52c:	29 81       	ldd	r18, Y+1	; 0x01
 52e:	fc 01       	movw	r30, r24
 530:	20 83       	st	Z, r18
 532:	0f 90       	pop	r0
 534:	df 91       	pop	r29
 536:	cf 91       	pop	r28
 538:	08 95       	ret

0000053a <__vector_2>:
 53a:	1f 92       	push	r1
 53c:	0f 92       	push	r0
 53e:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 542:	0f 92       	push	r0
 544:	11 24       	eor	r1, r1
 546:	00 90 38 00 	lds	r0, 0x0038	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 54a:	0f 92       	push	r0
 54c:	10 92 38 00 	sts	0x0038, r1	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 550:	00 90 3a 00 	lds	r0, 0x003A	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 554:	0f 92       	push	r0
 556:	10 92 3a 00 	sts	0x003A, r1	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 55a:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 55e:	0f 92       	push	r0
 560:	10 92 3b 00 	sts	0x003B, r1	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 564:	2f 93       	push	r18
 566:	3f 93       	push	r19
 568:	8f 93       	push	r24
 56a:	9f 93       	push	r25
 56c:	ef 93       	push	r30
 56e:	ff 93       	push	r31
 570:	cf 93       	push	r28
 572:	df 93       	push	r29
 574:	cd b7       	in	r28, 0x3d	; 61
 576:	de b7       	in	r29, 0x3e	; 62
 578:	81 e0       	ldi	r24, 0x01	; 1
 57a:	80 93 00 20 	sts	0x2000, r24	; 0x802000 <_edata>
 57e:	80 e4       	ldi	r24, 0x40	; 64
 580:	96 e0       	ldi	r25, 0x06	; 6
 582:	20 e4       	ldi	r18, 0x40	; 64
 584:	36 e0       	ldi	r19, 0x06	; 6
 586:	f9 01       	movw	r30, r18
 588:	24 85       	ldd	r18, Z+12	; 0x0c
 58a:	21 60       	ori	r18, 0x01	; 1
 58c:	fc 01       	movw	r30, r24
 58e:	24 87       	std	Z+12, r18	; 0x0c
 590:	df 91       	pop	r29
 592:	cf 91       	pop	r28
 594:	ff 91       	pop	r31
 596:	ef 91       	pop	r30
 598:	9f 91       	pop	r25
 59a:	8f 91       	pop	r24
 59c:	3f 91       	pop	r19
 59e:	2f 91       	pop	r18
 5a0:	0f 90       	pop	r0
 5a2:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 5a6:	0f 90       	pop	r0
 5a8:	00 92 3a 00 	sts	0x003A, r0	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 5ac:	0f 90       	pop	r0
 5ae:	00 92 38 00 	sts	0x0038, r0	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 5b2:	0f 90       	pop	r0
 5b4:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 5b8:	0f 90       	pop	r0
 5ba:	1f 90       	pop	r1
 5bc:	18 95       	reti

000005be <__vector_66>:
 5be:	1f 92       	push	r1
 5c0:	0f 92       	push	r0
 5c2:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 5c6:	0f 92       	push	r0
 5c8:	11 24       	eor	r1, r1
 5ca:	00 90 38 00 	lds	r0, 0x0038	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 5ce:	0f 92       	push	r0
 5d0:	10 92 38 00 	sts	0x0038, r1	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 5d4:	00 90 3a 00 	lds	r0, 0x003A	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 5d8:	0f 92       	push	r0
 5da:	10 92 3a 00 	sts	0x003A, r1	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 5de:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 5e2:	0f 92       	push	r0
 5e4:	10 92 3b 00 	sts	0x003B, r1	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 5e8:	2f 93       	push	r18
 5ea:	3f 93       	push	r19
 5ec:	8f 93       	push	r24
 5ee:	9f 93       	push	r25
 5f0:	ef 93       	push	r30
 5f2:	ff 93       	push	r31
 5f4:	cf 93       	push	r28
 5f6:	df 93       	push	r29
 5f8:	cd b7       	in	r28, 0x3d	; 61
 5fa:	de b7       	in	r29, 0x3e	; 62
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	80 93 01 20 	sts	0x2001, r24	; 0x802001 <gyroDataReady>
 602:	80 e0       	ldi	r24, 0x00	; 0
 604:	96 e0       	ldi	r25, 0x06	; 6
 606:	20 e0       	ldi	r18, 0x00	; 0
 608:	36 e0       	ldi	r19, 0x06	; 6
 60a:	f9 01       	movw	r30, r18
 60c:	24 85       	ldd	r18, Z+12	; 0x0c
 60e:	21 60       	ori	r18, 0x01	; 1
 610:	fc 01       	movw	r30, r24
 612:	24 87       	std	Z+12, r18	; 0x0c
 614:	df 91       	pop	r29
 616:	cf 91       	pop	r28
 618:	ff 91       	pop	r31
 61a:	ef 91       	pop	r30
 61c:	9f 91       	pop	r25
 61e:	8f 91       	pop	r24
 620:	3f 91       	pop	r19
 622:	2f 91       	pop	r18
 624:	0f 90       	pop	r0
 626:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
 62a:	0f 90       	pop	r0
 62c:	00 92 3a 00 	sts	0x003A, r0	; 0x80003a <__TEXT_REGION_LENGTH__+0x70003a>
 630:	0f 90       	pop	r0
 632:	00 92 38 00 	sts	0x0038, r0	; 0x800038 <__TEXT_REGION_LENGTH__+0x700038>
 636:	0f 90       	pop	r0
 638:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
 63c:	0f 90       	pop	r0
 63e:	1f 90       	pop	r1
 640:	18 95       	reti

00000642 <main>:

int main(void)
{
 642:	cf 93       	push	r28
 644:	df 93       	push	r29
 646:	cd b7       	in	r28, 0x3d	; 61
 648:	de b7       	in	r29, 0x3e	; 62
 64a:	2c 97       	sbiw	r28, 0x0c	; 12
 64c:	cd bf       	out	0x3d, r28	; 61
 64e:	de bf       	out	0x3e, r29	; 62
	CLK_init();
 650:	0e 94 18 01 	call	0x230	; 0x230 <CLK_init>
    SPI_init();
 654:	0e 94 39 01 	call	0x272	; 0x272 <SPI_init>
	USART_init();
 658:	0e 94 58 01 	call	0x2b0	; 0x2b0 <USART_init>
	accel_init();
 65c:	0e 94 29 02 	call	0x452	; 0x452 <accel_init>
	gyro_init();
 660:	0e 94 4f 02 	call	0x49e	; 0x49e <gyro_init>
	PMIC.CTRL = 0x01;			//low level interrupts	 
 664:	80 ea       	ldi	r24, 0xA0	; 160
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	21 e0       	ldi	r18, 0x01	; 1
 66a:	fc 01       	movw	r30, r24
 66c:	22 83       	std	Z+2, r18	; 0x02
	sei();
 66e:	78 94       	sei
	volatile uint8_t ACCEL_X_H, ACCEL_X_L, ACCEL_Y_H, ACCEL_Y_L, ACCEL_Z_H, ACCEL_Z_L;
	volatile uint8_t GYRO_X_H, GYRO_X_L, GYRO_Y_H, GYRO_Y_L, GYRO_Z_H, GYRO_Z_L;
	
    while(1){
		
		if(accelDataReady == 0x01){
 670:	80 91 00 20 	lds	r24, 0x2000	; 0x802000 <_edata>
 674:	81 30       	cpi	r24, 0x01	; 1
 676:	d9 f4       	brne	.+54     	; 0x6ae <main+0x6c>
			ACCEL_X_H = accRead(OUT_X_H_A);
 678:	89 e2       	ldi	r24, 0x29	; 41
 67a:	0e 94 a6 01 	call	0x34c	; 0x34c <accRead>
 67e:	89 83       	std	Y+1, r24	; 0x01
			ACCEL_X_L = accRead(OUT_X_L_A);
 680:	88 e2       	ldi	r24, 0x28	; 40
 682:	0e 94 a6 01 	call	0x34c	; 0x34c <accRead>
 686:	8a 83       	std	Y+2, r24	; 0x02
			ACCEL_Y_H = accRead(OUT_Y_H_A);
 688:	8b e2       	ldi	r24, 0x2B	; 43
 68a:	0e 94 a6 01 	call	0x34c	; 0x34c <accRead>
 68e:	8b 83       	std	Y+3, r24	; 0x03
			ACCEL_Y_L = accRead(OUT_Y_L_A);
 690:	8a e2       	ldi	r24, 0x2A	; 42
 692:	0e 94 a6 01 	call	0x34c	; 0x34c <accRead>
 696:	8c 83       	std	Y+4, r24	; 0x04
			ACCEL_Z_H = accRead(OUT_Z_H_A);
 698:	8d e2       	ldi	r24, 0x2D	; 45
 69a:	0e 94 a6 01 	call	0x34c	; 0x34c <accRead>
 69e:	8d 83       	std	Y+5, r24	; 0x05
			ACCEL_Z_L = accRead(OUT_Z_L_A);
 6a0:	8c e2       	ldi	r24, 0x2C	; 44
 6a2:	0e 94 a6 01 	call	0x34c	; 0x34c <accRead>
 6a6:	8e 83       	std	Y+6, r24	; 0x06
			
			accelDataReady = 0x00;
 6a8:	10 92 00 20 	sts	0x2000, r1	; 0x802000 <_edata>
 6ac:	1e c0       	rjmp	.+60     	; 0x6ea <main+0xa8>
			
		}
		
		else if(gyroDataReady == 0x01){
 6ae:	80 91 01 20 	lds	r24, 0x2001	; 0x802001 <gyroDataReady>
 6b2:	81 30       	cpi	r24, 0x01	; 1
 6b4:	d1 f4       	brne	.+52     	; 0x6ea <main+0xa8>
			GYRO_X_H = gyroRead(OUT_X_H_G);
 6b6:	89 e2       	ldi	r24, 0x29	; 41
 6b8:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <gyroRead>
 6bc:	8f 83       	std	Y+7, r24	; 0x07
			GYRO_X_L = gyroRead(OUT_X_L_G);
 6be:	88 e2       	ldi	r24, 0x28	; 40
 6c0:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <gyroRead>
 6c4:	88 87       	std	Y+8, r24	; 0x08
			GYRO_Y_H = gyroRead(OUT_Y_H_G);
 6c6:	8b e2       	ldi	r24, 0x2B	; 43
 6c8:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <gyroRead>
 6cc:	89 87       	std	Y+9, r24	; 0x09
			GYRO_Y_L = gyroRead(OUT_Y_L_G);
 6ce:	8a e2       	ldi	r24, 0x2A	; 42
 6d0:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <gyroRead>
 6d4:	8a 87       	std	Y+10, r24	; 0x0a
			GYRO_Z_H = gyroRead(OUT_Z_H_G);
 6d6:	8d e2       	ldi	r24, 0x2D	; 45
 6d8:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <gyroRead>
 6dc:	8b 87       	std	Y+11, r24	; 0x0b
			GYRO_Z_L = gyroRead(OUT_Z_L_G);
 6de:	8c e2       	ldi	r24, 0x2C	; 44
 6e0:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <gyroRead>
 6e4:	8c 87       	std	Y+12, r24	; 0x0c
			
			gyroDataReady = 0x00;
 6e6:	10 92 01 20 	sts	0x2001, r1	; 0x802001 <gyroDataReady>
		}
		
		send_char(0x03);
 6ea:	83 e0       	ldi	r24, 0x03	; 3
 6ec:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(ACCEL_X_L);
 6f0:	8a 81       	ldd	r24, Y+2	; 0x02
 6f2:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(ACCEL_X_H);
 6f6:	89 81       	ldd	r24, Y+1	; 0x01
 6f8:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(ACCEL_Y_L);
 6fc:	8c 81       	ldd	r24, Y+4	; 0x04
 6fe:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(ACCEL_Y_H);
 702:	8b 81       	ldd	r24, Y+3	; 0x03
 704:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(ACCEL_Z_L);
 708:	8e 81       	ldd	r24, Y+6	; 0x06
 70a:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(ACCEL_Z_H);
 70e:	8d 81       	ldd	r24, Y+5	; 0x05
 710:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(GYRO_X_L);
 714:	88 85       	ldd	r24, Y+8	; 0x08
 716:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(GYRO_X_H);
 71a:	8f 81       	ldd	r24, Y+7	; 0x07
 71c:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(GYRO_Y_L);
 720:	8a 85       	ldd	r24, Y+10	; 0x0a
 722:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(GYRO_Y_H);
 726:	89 85       	ldd	r24, Y+9	; 0x09
 728:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(GYRO_Z_L);
 72c:	8c 85       	ldd	r24, Y+12	; 0x0c
 72e:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(GYRO_Z_H);
 732:	8b 85       	ldd	r24, Y+11	; 0x0b
 734:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
		send_char(0xFC);
 738:	8c ef       	ldi	r24, 0xFC	; 252
 73a:	0e 94 83 02 	call	0x506	; 0x506 <send_char>
	
	}
 73e:	98 cf       	rjmp	.-208    	; 0x670 <main+0x2e>

00000740 <_exit>:
 740:	f8 94       	cli

00000742 <__stop_program>:
 742:	ff cf       	rjmp	.-2      	; 0x742 <__stop_program>
