
Lab5e.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a92  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000144  00802000  00000a92  00000b06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000c4a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c7c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  00000cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00004dfd  00000000  00000000  00000d5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003e43  00000000  00000000  00005b59  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000089d  00000000  00000000  0000999c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000190  00000000  00000000  0000a23c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000320d  00000000  00000000  0000a3cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000340  00000000  00000000  0000d5d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  0000d919  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
   c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  10:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  14:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  18:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  1c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  20:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  24:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  28:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  2c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  30:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  34:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  38:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  3c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  40:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  44:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  48:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  4c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  50:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  54:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  58:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  5c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  60:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  64:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  68:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  6c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  70:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  74:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  78:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  7c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  80:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  84:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  88:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  8c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  90:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  94:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  98:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  9c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
  fc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 100:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 104:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 108:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 10c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 110:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 114:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 118:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 11c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 120:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 124:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 128:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 12c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 130:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 134:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 138:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 13c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 140:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 144:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 148:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 14c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 150:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 154:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 158:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 15c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 160:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 164:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 168:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 16c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 170:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 174:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 178:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 17c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 180:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 184:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 188:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 18c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 190:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 194:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 198:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 19c:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1a8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ac:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1b8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1bc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1c8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1cc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1d8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1dc:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1e8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1ec:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f0:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f4:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>
 1f8:	0c 94 1c 01 	jmp	0x238	; 0x238 <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
 214:	11 e2       	ldi	r17, 0x21	; 33
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	e2 e9       	ldi	r30, 0x92	; 146
 21c:	fa e0       	ldi	r31, 0x0A	; 10
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	0b bf       	out	0x3b, r16	; 59
 222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
 224:	07 90       	elpm	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	a4 34       	cpi	r26, 0x44	; 68
 22a:	b1 07       	cpc	r27, r17
 22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
 22e:	1b be       	out	0x3b, r1	; 59
 230:	0e 94 d5 02 	call	0x5aa	; 0x5aa <main>
 234:	0c 94 47 05 	jmp	0xa8e	; 0xa8e <_exit>

00000238 <__bad_interrupt>:
 238:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000023c <CLK_init>:

void delay_3s(void)
{
	volatile uint32_t ticks;				//Volatile prevents compiler optimization
	for(ticks = 0; ticks <= 200000; ticks++);	//increment 2e6 times -> ~ 1 sec
}
 23c:	82 e0       	ldi	r24, 0x02	; 2
 23e:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
 242:	e0 e5       	ldi	r30, 0x50	; 80
 244:	f0 e0       	ldi	r31, 0x00	; 0
 246:	81 81       	ldd	r24, Z+1	; 0x01
 248:	81 ff       	sbrs	r24, 1
 24a:	fd cf       	rjmp	.-6      	; 0x246 <CLK_init+0xa>
 24c:	88 ed       	ldi	r24, 0xD8	; 216
 24e:	84 bf       	out	0x34, r24	; 52
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 256:	08 95       	ret

00000258 <ADC_init>:
 258:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
 25c:	e0 e0       	ldi	r30, 0x00	; 0
 25e:	f2 e0       	ldi	r31, 0x02	; 2
 260:	89 e0       	ldi	r24, 0x09	; 9
 262:	80 83       	st	Z, r24
 264:	8c e1       	ldi	r24, 0x1C	; 28
 266:	81 83       	std	Z+1, r24	; 0x01
 268:	80 e3       	ldi	r24, 0x30	; 48
 26a:	82 83       	std	Z+2, r24	; 0x02
 26c:	80 e4       	ldi	r24, 0x40	; 64
 26e:	83 83       	std	Z+3, r24	; 0x03
 270:	83 e8       	ldi	r24, 0x83	; 131
 272:	80 a3       	std	Z+32, r24	; 0x20
 274:	9a e0       	ldi	r25, 0x0A	; 10
 276:	91 a3       	std	Z+33, r25	; 0x21
 278:	80 a7       	std	Z+40, r24	; 0x28
 27a:	81 e2       	ldi	r24, 0x21	; 33
 27c:	81 a7       	std	Z+41, r24	; 0x29
 27e:	08 95       	ret

00000280 <USART_init>:
 280:	e0 ea       	ldi	r30, 0xA0	; 160
 282:	f9 e0       	ldi	r31, 0x09	; 9
 284:	89 e8       	ldi	r24, 0x89	; 137
 286:	86 83       	std	Z+6, r24	; 0x06
 288:	80 ef       	ldi	r24, 0xF0	; 240
 28a:	87 83       	std	Z+7, r24	; 0x07
 28c:	88 e1       	ldi	r24, 0x18	; 24
 28e:	84 83       	std	Z+4, r24	; 0x04
 290:	8b e0       	ldi	r24, 0x0B	; 11
 292:	85 83       	std	Z+5, r24	; 0x05
 294:	08 95       	ret

00000296 <IO_init>:
 296:	e0 e6       	ldi	r30, 0x60	; 96
 298:	f6 e0       	ldi	r31, 0x06	; 6
 29a:	88 ef       	ldi	r24, 0xF8	; 248
 29c:	81 83       	std	Z+1, r24	; 0x01
 29e:	85 83       	std	Z+5, r24	; 0x05
 2a0:	84 e0       	ldi	r24, 0x04	; 4
 2a2:	82 83       	std	Z+2, r24	; 0x02
 2a4:	e0 ec       	ldi	r30, 0xC0	; 192
 2a6:	f7 e0       	ldi	r31, 0x07	; 7
 2a8:	8a e0       	ldi	r24, 0x0A	; 10
 2aa:	81 83       	std	Z+1, r24	; 0x01
 2ac:	86 83       	std	Z+6, r24	; 0x06
 2ae:	08 95       	ret

000002b0 <EBI_init>:
 2b0:	e0 ee       	ldi	r30, 0xE0	; 224
 2b2:	f6 e0       	ldi	r31, 0x06	; 6
 2b4:	87 e1       	ldi	r24, 0x17	; 23
 2b6:	80 83       	st	Z, r24
 2b8:	83 e1       	ldi	r24, 0x13	; 19
 2ba:	84 83       	std	Z+4, r24	; 0x04
 2bc:	8f ef       	ldi	r24, 0xFF	; 255
 2be:	80 93 20 07 	sts	0x0720, r24	; 0x800720 <__TEXT_REGION_LENGTH__+0x700720>
 2c2:	e0 e4       	ldi	r30, 0x40	; 64
 2c4:	f4 e0       	ldi	r31, 0x04	; 4
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	80 83       	st	Z, r24
 2ca:	13 8a       	std	Z+19, r1	; 0x13
 2cc:	80 e8       	ldi	r24, 0x80	; 128
 2ce:	82 8b       	std	Z+18, r24	; 0x12
 2d0:	85 e1       	ldi	r24, 0x15	; 21
 2d2:	80 8b       	std	Z+16, r24	; 0x10
 2d4:	08 95       	ret

000002d6 <read_photoresistor>:
 2d6:	e0 e0       	ldi	r30, 0x00	; 0
 2d8:	f2 e0       	ldi	r31, 0x02	; 2
 2da:	80 a1       	ldd	r24, Z+32	; 0x20
 2dc:	80 68       	ori	r24, 0x80	; 128
 2de:	80 a3       	std	Z+32, r24	; 0x20
 2e0:	83 a1       	ldd	r24, Z+35	; 0x23
 2e2:	80 ff       	sbrs	r24, 0
 2e4:	fd cf       	rjmp	.-6      	; 0x2e0 <read_photoresistor+0xa>
 2e6:	e0 e0       	ldi	r30, 0x00	; 0
 2e8:	f2 e0       	ldi	r31, 0x02	; 2
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	86 83       	std	Z+6, r24	; 0x06
 2ee:	84 a1       	ldd	r24, Z+36	; 0x24
 2f0:	95 a1       	ldd	r25, Z+37	; 0x25
 2f2:	08 95       	ret

000002f4 <read_DAD>:
 2f4:	e0 e0       	ldi	r30, 0x00	; 0
 2f6:	f2 e0       	ldi	r31, 0x02	; 2
 2f8:	80 a5       	ldd	r24, Z+40	; 0x28
 2fa:	80 68       	ori	r24, 0x80	; 128
 2fc:	80 a7       	std	Z+40, r24	; 0x28
 2fe:	83 a5       	ldd	r24, Z+43	; 0x2b
 300:	80 ff       	sbrs	r24, 0
 302:	fd cf       	rjmp	.-6      	; 0x2fe <read_DAD+0xa>
 304:	e0 e0       	ldi	r30, 0x00	; 0
 306:	f2 e0       	ldi	r31, 0x02	; 2
 308:	82 e0       	ldi	r24, 0x02	; 2
 30a:	86 83       	std	Z+6, r24	; 0x06
 30c:	84 a5       	ldd	r24, Z+44	; 0x2c
 30e:	95 a5       	ldd	r25, Z+45	; 0x2d
 310:	08 95       	ret

00000312 <send_char>:
 312:	e0 ea       	ldi	r30, 0xA0	; 160
 314:	f9 e0       	ldi	r31, 0x09	; 9
 316:	91 81       	ldd	r25, Z+1	; 0x01
 318:	95 ff       	sbrs	r25, 5
 31a:	fd cf       	rjmp	.-6      	; 0x316 <send_char+0x4>
 31c:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
 320:	08 95       	ret

00000322 <send_string>:
 322:	cf 93       	push	r28
 324:	df 93       	push	r29
 326:	ec 01       	movw	r28, r24
 328:	88 81       	ld	r24, Y
 32a:	88 23       	and	r24, r24
 32c:	31 f0       	breq	.+12     	; 0x33a <send_string+0x18>
 32e:	21 96       	adiw	r28, 0x01	; 1
 330:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
 334:	89 91       	ld	r24, Y+
 336:	81 11       	cpse	r24, r1
 338:	fb cf       	rjmp	.-10     	; 0x330 <send_string+0xe>
 33a:	df 91       	pop	r29
 33c:	cf 91       	pop	r28
 33e:	08 95       	ret

00000340 <receive_char>:
 340:	e0 ea       	ldi	r30, 0xA0	; 160
 342:	f9 e0       	ldi	r31, 0x09	; 9
 344:	81 81       	ldd	r24, Z+1	; 0x01
 346:	88 23       	and	r24, r24
 348:	ec f7       	brge	.-6      	; 0x344 <receive_char+0x4>
 34a:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
 34e:	08 95       	ret

00000350 <SRAM_read>:
 350:	80 91 00 80 	lds	r24, 0x8000	; 0x808000 <__data_end+0x5ebc>
 354:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
 358:	08 95       	ret

0000035a <delay_50us>:



void delay_50us(void)
{
 35a:	cf 93       	push	r28
 35c:	df 93       	push	r29
 35e:	00 d0       	rcall	.+0      	; 0x360 <delay_50us+0x6>
 360:	1f 92       	push	r1
 362:	cd b7       	in	r28, 0x3d	; 61
 364:	de b7       	in	r29, 0x3e	; 62
	volatile uint32_t ticks;				//Volatile prevents compiler optimization
	for(ticks = 0; ticks <= 200; ticks++);	//increment 2e6 times -> ~ 1 sec
 366:	19 82       	std	Y+1, r1	; 0x01
 368:	1a 82       	std	Y+2, r1	; 0x02
 36a:	1b 82       	std	Y+3, r1	; 0x03
 36c:	1c 82       	std	Y+4, r1	; 0x04
 36e:	89 81       	ldd	r24, Y+1	; 0x01
 370:	9a 81       	ldd	r25, Y+2	; 0x02
 372:	ab 81       	ldd	r26, Y+3	; 0x03
 374:	bc 81       	ldd	r27, Y+4	; 0x04
 376:	89 3c       	cpi	r24, 0xC9	; 201
 378:	91 05       	cpc	r25, r1
 37a:	a1 05       	cpc	r26, r1
 37c:	b1 05       	cpc	r27, r1
 37e:	a0 f4       	brcc	.+40     	; 0x3a8 <delay_50us+0x4e>
 380:	89 81       	ldd	r24, Y+1	; 0x01
 382:	9a 81       	ldd	r25, Y+2	; 0x02
 384:	ab 81       	ldd	r26, Y+3	; 0x03
 386:	bc 81       	ldd	r27, Y+4	; 0x04
 388:	01 96       	adiw	r24, 0x01	; 1
 38a:	a1 1d       	adc	r26, r1
 38c:	b1 1d       	adc	r27, r1
 38e:	89 83       	std	Y+1, r24	; 0x01
 390:	9a 83       	std	Y+2, r25	; 0x02
 392:	ab 83       	std	Y+3, r26	; 0x03
 394:	bc 83       	std	Y+4, r27	; 0x04
 396:	89 81       	ldd	r24, Y+1	; 0x01
 398:	9a 81       	ldd	r25, Y+2	; 0x02
 39a:	ab 81       	ldd	r26, Y+3	; 0x03
 39c:	bc 81       	ldd	r27, Y+4	; 0x04
 39e:	89 3c       	cpi	r24, 0xC9	; 201
 3a0:	91 05       	cpc	r25, r1
 3a2:	a1 05       	cpc	r26, r1
 3a4:	b1 05       	cpc	r27, r1
 3a6:	60 f3       	brcs	.-40     	; 0x380 <delay_50us+0x26>
}
 3a8:	24 96       	adiw	r28, 0x04	; 4
 3aa:	cd bf       	out	0x3d, r28	; 61
 3ac:	de bf       	out	0x3e, r29	; 62
 3ae:	df 91       	pop	r29
 3b0:	cf 91       	pop	r28
 3b2:	08 95       	ret

000003b4 <send_Values>:


void send_Values(int16_t adcVal) {
 3b4:	cf 92       	push	r12
 3b6:	df 92       	push	r13
 3b8:	ef 92       	push	r14
 3ba:	ff 92       	push	r15
 3bc:	0f 93       	push	r16
 3be:	1f 93       	push	r17
 3c0:	cf 93       	push	r28
 3c2:	df 93       	push	r29
 3c4:	cd b7       	in	r28, 0x3d	; 61
 3c6:	de b7       	in	r29, 0x3e	; 62
 3c8:	27 97       	sbiw	r28, 0x07	; 7
 3ca:	cd bf       	out	0x3d, r28	; 61
 3cc:	de bf       	out	0x3e, r29	; 62
 3ce:	8c 01       	movw	r16, r24
	
	volatile int intVal = 0;
 3d0:	19 82       	std	Y+1, r1	; 0x01
 3d2:	1a 82       	std	Y+2, r1	; 0x02
	volatile float voltVal = 0;
 3d4:	1b 82       	std	Y+3, r1	; 0x03
 3d6:	1c 82       	std	Y+4, r1	; 0x04
 3d8:	1d 82       	std	Y+5, r1	; 0x05
 3da:	1e 82       	std	Y+6, r1	; 0x06


	//voltVal = (1/50)*adcVal + .0098
	voltVal = (int8_t)(adcVal << 4);
 3dc:	68 2f       	mov	r22, r24
 3de:	62 95       	swap	r22
 3e0:	60 7f       	andi	r22, 0xF0	; 240
 3e2:	06 2e       	mov	r0, r22
 3e4:	00 0c       	add	r0, r0
 3e6:	77 0b       	sbc	r23, r23
 3e8:	88 0b       	sbc	r24, r24
 3ea:	99 0b       	sbc	r25, r25
 3ec:	0e 94 25 04 	call	0x84a	; 0x84a <__floatsisf>
 3f0:	6b 83       	std	Y+3, r22	; 0x03
 3f2:	7c 83       	std	Y+4, r23	; 0x04
 3f4:	8d 83       	std	Y+5, r24	; 0x05
 3f6:	9e 83       	std	Y+6, r25	; 0x06
	voltVal /= 50;
 3f8:	6b 81       	ldd	r22, Y+3	; 0x03
 3fa:	7c 81       	ldd	r23, Y+4	; 0x04
 3fc:	8d 81       	ldd	r24, Y+5	; 0x05
 3fe:	9e 81       	ldd	r25, Y+6	; 0x06
 400:	20 e0       	ldi	r18, 0x00	; 0
 402:	30 e0       	ldi	r19, 0x00	; 0
 404:	48 e4       	ldi	r20, 0x48	; 72
 406:	52 e4       	ldi	r21, 0x42	; 66
 408:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__divsf3>
 40c:	6b 83       	std	Y+3, r22	; 0x03
 40e:	7c 83       	std	Y+4, r23	; 0x04
 410:	8d 83       	std	Y+5, r24	; 0x05
 412:	9e 83       	std	Y+6, r25	; 0x06
	voltVal += .0098;
 414:	6b 81       	ldd	r22, Y+3	; 0x03
 416:	7c 81       	ldd	r23, Y+4	; 0x04
 418:	8d 81       	ldd	r24, Y+5	; 0x05
 41a:	9e 81       	ldd	r25, Y+6	; 0x06
 41c:	2e e2       	ldi	r18, 0x2E	; 46
 41e:	30 e9       	ldi	r19, 0x90	; 144
 420:	40 e2       	ldi	r20, 0x20	; 32
 422:	5c e3       	ldi	r21, 0x3C	; 60
 424:	0e 94 0f 03 	call	0x61e	; 0x61e <__addsf3>
 428:	6b 83       	std	Y+3, r22	; 0x03
 42a:	7c 83       	std	Y+4, r23	; 0x04
 42c:	8d 83       	std	Y+5, r24	; 0x05
 42e:	9e 83       	std	Y+6, r25	; 0x06

	if (voltVal >= 0) {
 430:	6b 81       	ldd	r22, Y+3	; 0x03
 432:	7c 81       	ldd	r23, Y+4	; 0x04
 434:	8d 81       	ldd	r24, Y+5	; 0x05
 436:	9e 81       	ldd	r25, Y+6	; 0x06
 438:	20 e0       	ldi	r18, 0x00	; 0
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	a9 01       	movw	r20, r18
 43e:	0e 94 b1 04 	call	0x962	; 0x962 <__gesf2>
 442:	88 23       	and	r24, r24
 444:	24 f0       	brlt	.+8      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
		send_char((char)0x2B);				//+/-
 446:	8b e2       	ldi	r24, 0x2B	; 43
 448:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
 44c:	03 c0       	rjmp	.+6      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
	}
	
	else  {
		send_char((char)0x2D);
 44e:	8d e2       	ldi	r24, 0x2D	; 45
 450:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	}
	
	intVal = (int)voltVal;					//1st iteration
 454:	6b 81       	ldd	r22, Y+3	; 0x03
 456:	7c 81       	ldd	r23, Y+4	; 0x04
 458:	8d 81       	ldd	r24, Y+5	; 0x05
 45a:	9e 81       	ldd	r25, Y+6	; 0x06
 45c:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixsfsi>
 460:	69 83       	std	Y+1, r22	; 0x01
 462:	7a 83       	std	Y+2, r23	; 0x02
	send_char((char)(intVal + '0'));
 464:	89 81       	ldd	r24, Y+1	; 0x01
 466:	9a 81       	ldd	r25, Y+2	; 0x02
 468:	80 5d       	subi	r24, 0xD0	; 208
 46a:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	send_char((char)0x2E);					//.
 46e:	8e e2       	ldi	r24, 0x2E	; 46
 470:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	
	voltVal = 10*(voltVal - intVal);		//2nd iteration
 474:	cb 80       	ldd	r12, Y+3	; 0x03
 476:	dc 80       	ldd	r13, Y+4	; 0x04
 478:	ed 80       	ldd	r14, Y+5	; 0x05
 47a:	fe 80       	ldd	r15, Y+6	; 0x06
 47c:	89 81       	ldd	r24, Y+1	; 0x01
 47e:	9a 81       	ldd	r25, Y+2	; 0x02
 480:	bc 01       	movw	r22, r24
 482:	99 0f       	add	r25, r25
 484:	88 0b       	sbc	r24, r24
 486:	99 0b       	sbc	r25, r25
 488:	0e 94 25 04 	call	0x84a	; 0x84a <__floatsisf>
 48c:	9b 01       	movw	r18, r22
 48e:	ac 01       	movw	r20, r24
 490:	c7 01       	movw	r24, r14
 492:	b6 01       	movw	r22, r12
 494:	0e 94 0e 03 	call	0x61c	; 0x61c <__subsf3>
 498:	20 e0       	ldi	r18, 0x00	; 0
 49a:	30 e0       	ldi	r19, 0x00	; 0
 49c:	40 e2       	ldi	r20, 0x20	; 32
 49e:	51 e4       	ldi	r21, 0x41	; 65
 4a0:	0e 94 b6 04 	call	0x96c	; 0x96c <__mulsf3>
 4a4:	6b 83       	std	Y+3, r22	; 0x03
 4a6:	7c 83       	std	Y+4, r23	; 0x04
 4a8:	8d 83       	std	Y+5, r24	; 0x05
 4aa:	9e 83       	std	Y+6, r25	; 0x06
	intVal = (int)voltVal;
 4ac:	6b 81       	ldd	r22, Y+3	; 0x03
 4ae:	7c 81       	ldd	r23, Y+4	; 0x04
 4b0:	8d 81       	ldd	r24, Y+5	; 0x05
 4b2:	9e 81       	ldd	r25, Y+6	; 0x06
 4b4:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixsfsi>
 4b8:	69 83       	std	Y+1, r22	; 0x01
 4ba:	7a 83       	std	Y+2, r23	; 0x02
	send_char((char)(intVal + '0'));
 4bc:	89 81       	ldd	r24, Y+1	; 0x01
 4be:	9a 81       	ldd	r25, Y+2	; 0x02
 4c0:	80 5d       	subi	r24, 0xD0	; 208
 4c2:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	
	voltVal = 10*(voltVal - intVal);		//3rd iteration
 4c6:	cb 80       	ldd	r12, Y+3	; 0x03
 4c8:	dc 80       	ldd	r13, Y+4	; 0x04
 4ca:	ed 80       	ldd	r14, Y+5	; 0x05
 4cc:	fe 80       	ldd	r15, Y+6	; 0x06
 4ce:	89 81       	ldd	r24, Y+1	; 0x01
 4d0:	9a 81       	ldd	r25, Y+2	; 0x02
 4d2:	bc 01       	movw	r22, r24
 4d4:	99 0f       	add	r25, r25
 4d6:	88 0b       	sbc	r24, r24
 4d8:	99 0b       	sbc	r25, r25
 4da:	0e 94 25 04 	call	0x84a	; 0x84a <__floatsisf>
 4de:	9b 01       	movw	r18, r22
 4e0:	ac 01       	movw	r20, r24
 4e2:	c7 01       	movw	r24, r14
 4e4:	b6 01       	movw	r22, r12
 4e6:	0e 94 0e 03 	call	0x61c	; 0x61c <__subsf3>
 4ea:	20 e0       	ldi	r18, 0x00	; 0
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	40 e2       	ldi	r20, 0x20	; 32
 4f0:	51 e4       	ldi	r21, 0x41	; 65
 4f2:	0e 94 b6 04 	call	0x96c	; 0x96c <__mulsf3>
 4f6:	6b 83       	std	Y+3, r22	; 0x03
 4f8:	7c 83       	std	Y+4, r23	; 0x04
 4fa:	8d 83       	std	Y+5, r24	; 0x05
 4fc:	9e 83       	std	Y+6, r25	; 0x06
	intVal = (int)voltVal;
 4fe:	6b 81       	ldd	r22, Y+3	; 0x03
 500:	7c 81       	ldd	r23, Y+4	; 0x04
 502:	8d 81       	ldd	r24, Y+5	; 0x05
 504:	9e 81       	ldd	r25, Y+6	; 0x06
 506:	0e 94 ed 03 	call	0x7da	; 0x7da <__fixsfsi>
 50a:	69 83       	std	Y+1, r22	; 0x01
 50c:	7a 83       	std	Y+2, r23	; 0x02
	send_char((char)(intVal + '0'));
 50e:	89 81       	ldd	r24, Y+1	; 0x01
 510:	9a 81       	ldd	r25, Y+2	; 0x02
 512:	80 5d       	subi	r24, 0xD0	; 208
 514:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	send_char((char)0x20);					//space
 518:	80 e2       	ldi	r24, 0x20	; 32
 51a:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	
	//hex Values
	volatile int8_t hexVal = 0;
 51e:	1f 82       	std	Y+7, r1	; 0x07
	hexVal = (adcVal >> 1);
 520:	c8 01       	movw	r24, r16
 522:	95 95       	asr	r25
 524:	87 95       	ror	r24
 526:	8f 83       	std	Y+7, r24	; 0x07
	
	send_char((char)0x28);							//(
 528:	88 e2       	ldi	r24, 0x28	; 40
 52a:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	send_char((char)0x30);							//0
 52e:	80 e3       	ldi	r24, 0x30	; 48
 530:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	send_char((char)0x78);							//x;
 534:	88 e7       	ldi	r24, 0x78	; 120
 536:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	send_char((char)(hexVal + '0'));				//firs byte
 53a:	8f 81       	ldd	r24, Y+7	; 0x07
 53c:	80 5d       	subi	r24, 0xD0	; 208
 53e:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	send_char((char)((adcVal & 0x0F) + '0'));		//second byte
 542:	80 2f       	mov	r24, r16
 544:	8f 70       	andi	r24, 0x0F	; 15
 546:	80 5d       	subi	r24, 0xD0	; 208
 548:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	send_char((char)0x29);							//)
 54c:	89 e2       	ldi	r24, 0x29	; 41
 54e:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	send_char((char)0x20);							//space
 552:	80 e2       	ldi	r24, 0x20	; 32
 554:	0e 94 89 01 	call	0x312	; 0x312 <send_char>
	
	
}
 558:	27 96       	adiw	r28, 0x07	; 7
 55a:	cd bf       	out	0x3d, r28	; 61
 55c:	de bf       	out	0x3e, r29	; 62
 55e:	df 91       	pop	r29
 560:	cf 91       	pop	r28
 562:	1f 91       	pop	r17
 564:	0f 91       	pop	r16
 566:	ff 90       	pop	r15
 568:	ef 90       	pop	r14
 56a:	df 90       	pop	r13
 56c:	cf 90       	pop	r12
 56e:	08 95       	ret

00000570 <determine_function>:

void determine_function(char op) {
	
	uint16_t adcVal = 0x00;
	
	switch(op) {
 570:	82 36       	cpi	r24, 0x62	; 98
 572:	71 f0       	breq	.+28     	; 0x590 <determine_function+0x20>
 574:	18 f4       	brcc	.+6      	; 0x57c <determine_function+0xc>
 576:	81 36       	cpi	r24, 0x61	; 97
 578:	31 f0       	breq	.+12     	; 0x586 <determine_function+0x16>
 57a:	08 95       	ret
 57c:	85 36       	cpi	r24, 0x65	; 101
 57e:	69 f0       	breq	.+26     	; 0x59a <determine_function+0x2a>
 580:	86 36       	cpi	r24, 0x66	; 102
 582:	81 f0       	breq	.+32     	; 0x5a4 <determine_function+0x34>
 584:	08 95       	ret

		case 'a':
		adcVal = read_photoresistor();
 586:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <read_photoresistor>
		send_Values(adcVal);
 58a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <send_Values>
		break; 
 58e:	08 95       	ret
		
		case 'b':
		adcVal = read_DAD();
 590:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <read_DAD>
		send_Values(adcVal);
 594:	0e 94 da 01 	call	0x3b4	; 0x3b4 <send_Values>
		break; 
 598:	08 95       	ret
		case 'd':
		//timer_off();
		break;
		
		case 'e':
		adcVal = read_photoresistor();
 59a:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <read_photoresistor>


void SRAM_write(uint16_t CdS) {
	
	uint8_t volatile *ptr_8 = (uint16_t)0x8000;        // memory location 0x8000	
	*ptr_8 = CdS;    //write 0x37 into 0x8000	
 59e:	80 93 00 80 	sts	0x8000, r24	; 0x808000 <__data_end+0x5ebc>
 5a2:	08 95       	ret
		adcVal = read_photoresistor();
		SRAM_write(adcVal);
		break;
		
		case 'f':
		SRAM_read();
 5a4:	0e 94 a8 01 	call	0x350	; 0x350 <SRAM_read>
 5a8:	08 95       	ret

000005aa <main>:
	
}


int main(void)
{
 5aa:	cf 93       	push	r28
 5ac:	df 93       	push	r29
 5ae:	1f 92       	push	r1
 5b0:	1f 92       	push	r1
 5b2:	cd b7       	in	r28, 0x3d	; 61
 5b4:	de b7       	in	r29, 0x3e	; 62
   
	CLK_init();
 5b6:	0e 94 1e 01 	call	0x23c	; 0x23c <CLK_init>
    ADC_init();	 
 5ba:	0e 94 2c 01 	call	0x258	; 0x258 <ADC_init>
	EBI_init();       
 5be:	0e 94 58 01 	call	0x2b0	; 0x2b0 <EBI_init>
	USART_init();
 5c2:	0e 94 40 01 	call	0x280	; 0x280 <USART_init>
	IO_init();
 5c6:	0e 94 4b 01 	call	0x296	; 0x296 <IO_init>
	
	sei();						//global interrupt enable
 5ca:	78 94       	sei

	
    while(1){
		
		//display menu
		for(volatile int i = 0; i < sizeof(Menu); i++){
 5cc:	19 82       	std	Y+1, r1	; 0x01
 5ce:	1a 82       	std	Y+2, r1	; 0x02
 5d0:	89 81       	ldd	r24, Y+1	; 0x01
 5d2:	9a 81       	ldd	r25, Y+2	; 0x02
 5d4:	0c 97       	sbiw	r24, 0x0c	; 12
 5d6:	c8 f4       	brcc	.+50     	; 0x60a <main+0x60>
			send_string(Menu[i]);
 5d8:	e9 81       	ldd	r30, Y+1	; 0x01
 5da:	fa 81       	ldd	r31, Y+2	; 0x02
 5dc:	ee 0f       	add	r30, r30
 5de:	ff 1f       	adc	r31, r31
 5e0:	e0 50       	subi	r30, 0x00	; 0
 5e2:	f0 4e       	sbci	r31, 0xE0	; 224
 5e4:	80 81       	ld	r24, Z
 5e6:	91 81       	ldd	r25, Z+1	; 0x01
 5e8:	0e 94 91 01 	call	0x322	; 0x322 <send_string>
			send_string("\n");
 5ec:	8c e0       	ldi	r24, 0x0C	; 12
 5ee:	90 e2       	ldi	r25, 0x20	; 32
 5f0:	0e 94 91 01 	call	0x322	; 0x322 <send_string>
			delay_50us();
 5f4:	0e 94 ad 01 	call	0x35a	; 0x35a <delay_50us>

	
    while(1){
		
		//display menu
		for(volatile int i = 0; i < sizeof(Menu); i++){
 5f8:	89 81       	ldd	r24, Y+1	; 0x01
 5fa:	9a 81       	ldd	r25, Y+2	; 0x02
 5fc:	01 96       	adiw	r24, 0x01	; 1
 5fe:	89 83       	std	Y+1, r24	; 0x01
 600:	9a 83       	std	Y+2, r25	; 0x02
 602:	89 81       	ldd	r24, Y+1	; 0x01
 604:	9a 81       	ldd	r25, Y+2	; 0x02
 606:	0c 97       	sbiw	r24, 0x0c	; 12
 608:	38 f3       	brcs	.-50     	; 0x5d8 <main+0x2e>
			send_string(Menu[i]);
			send_string("\n");
			delay_50us();
		}
		
		send_string("\n");
 60a:	8c e0       	ldi	r24, 0x0C	; 12
 60c:	90 e2       	ldi	r25, 0x20	; 32
 60e:	0e 94 91 01 	call	0x322	; 0x322 <send_string>
		
		option = receive_char();
 612:	0e 94 a0 01 	call	0x340	; 0x340 <receive_char>
		determine_function(option);	
 616:	0e 94 b8 02 	call	0x570	; 0x570 <determine_function>
	
	}
 61a:	d8 cf       	rjmp	.-80     	; 0x5cc <main+0x22>

0000061c <__subsf3>:
 61c:	50 58       	subi	r21, 0x80	; 128

0000061e <__addsf3>:
 61e:	bb 27       	eor	r27, r27
 620:	aa 27       	eor	r26, r26
 622:	0e 94 26 03 	call	0x64c	; 0x64c <__addsf3x>
 626:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_round>
 62a:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__fp_pscA>
 62e:	38 f0       	brcs	.+14     	; 0x63e <__addsf3+0x20>
 630:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__fp_pscB>
 634:	20 f0       	brcs	.+8      	; 0x63e <__addsf3+0x20>
 636:	39 f4       	brne	.+14     	; 0x646 <__addsf3+0x28>
 638:	9f 3f       	cpi	r25, 0xFF	; 255
 63a:	19 f4       	brne	.+6      	; 0x642 <__addsf3+0x24>
 63c:	26 f4       	brtc	.+8      	; 0x646 <__addsf3+0x28>
 63e:	0c 94 66 04 	jmp	0x8cc	; 0x8cc <__fp_nan>
 642:	0e f4       	brtc	.+2      	; 0x646 <__addsf3+0x28>
 644:	e0 95       	com	r30
 646:	e7 fb       	bst	r30, 7
 648:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_inf>

0000064c <__addsf3x>:
 64c:	e9 2f       	mov	r30, r25
 64e:	0e 94 88 04 	call	0x910	; 0x910 <__fp_split3>
 652:	58 f3       	brcs	.-42     	; 0x62a <__addsf3+0xc>
 654:	ba 17       	cp	r27, r26
 656:	62 07       	cpc	r22, r18
 658:	73 07       	cpc	r23, r19
 65a:	84 07       	cpc	r24, r20
 65c:	95 07       	cpc	r25, r21
 65e:	20 f0       	brcs	.+8      	; 0x668 <__addsf3x+0x1c>
 660:	79 f4       	brne	.+30     	; 0x680 <__addsf3x+0x34>
 662:	a6 f5       	brtc	.+104    	; 0x6cc <__addsf3x+0x80>
 664:	0c 94 aa 04 	jmp	0x954	; 0x954 <__fp_zero>
 668:	0e f4       	brtc	.+2      	; 0x66c <__addsf3x+0x20>
 66a:	e0 95       	com	r30
 66c:	0b 2e       	mov	r0, r27
 66e:	ba 2f       	mov	r27, r26
 670:	a0 2d       	mov	r26, r0
 672:	0b 01       	movw	r0, r22
 674:	b9 01       	movw	r22, r18
 676:	90 01       	movw	r18, r0
 678:	0c 01       	movw	r0, r24
 67a:	ca 01       	movw	r24, r20
 67c:	a0 01       	movw	r20, r0
 67e:	11 24       	eor	r1, r1
 680:	ff 27       	eor	r31, r31
 682:	59 1b       	sub	r21, r25
 684:	99 f0       	breq	.+38     	; 0x6ac <__addsf3x+0x60>
 686:	59 3f       	cpi	r21, 0xF9	; 249
 688:	50 f4       	brcc	.+20     	; 0x69e <__addsf3x+0x52>
 68a:	50 3e       	cpi	r21, 0xE0	; 224
 68c:	68 f1       	brcs	.+90     	; 0x6e8 <__addsf3x+0x9c>
 68e:	1a 16       	cp	r1, r26
 690:	f0 40       	sbci	r31, 0x00	; 0
 692:	a2 2f       	mov	r26, r18
 694:	23 2f       	mov	r18, r19
 696:	34 2f       	mov	r19, r20
 698:	44 27       	eor	r20, r20
 69a:	58 5f       	subi	r21, 0xF8	; 248
 69c:	f3 cf       	rjmp	.-26     	; 0x684 <__addsf3x+0x38>
 69e:	46 95       	lsr	r20
 6a0:	37 95       	ror	r19
 6a2:	27 95       	ror	r18
 6a4:	a7 95       	ror	r26
 6a6:	f0 40       	sbci	r31, 0x00	; 0
 6a8:	53 95       	inc	r21
 6aa:	c9 f7       	brne	.-14     	; 0x69e <__addsf3x+0x52>
 6ac:	7e f4       	brtc	.+30     	; 0x6cc <__addsf3x+0x80>
 6ae:	1f 16       	cp	r1, r31
 6b0:	ba 0b       	sbc	r27, r26
 6b2:	62 0b       	sbc	r22, r18
 6b4:	73 0b       	sbc	r23, r19
 6b6:	84 0b       	sbc	r24, r20
 6b8:	ba f0       	brmi	.+46     	; 0x6e8 <__addsf3x+0x9c>
 6ba:	91 50       	subi	r25, 0x01	; 1
 6bc:	a1 f0       	breq	.+40     	; 0x6e6 <__addsf3x+0x9a>
 6be:	ff 0f       	add	r31, r31
 6c0:	bb 1f       	adc	r27, r27
 6c2:	66 1f       	adc	r22, r22
 6c4:	77 1f       	adc	r23, r23
 6c6:	88 1f       	adc	r24, r24
 6c8:	c2 f7       	brpl	.-16     	; 0x6ba <__addsf3x+0x6e>
 6ca:	0e c0       	rjmp	.+28     	; 0x6e8 <__addsf3x+0x9c>
 6cc:	ba 0f       	add	r27, r26
 6ce:	62 1f       	adc	r22, r18
 6d0:	73 1f       	adc	r23, r19
 6d2:	84 1f       	adc	r24, r20
 6d4:	48 f4       	brcc	.+18     	; 0x6e8 <__addsf3x+0x9c>
 6d6:	87 95       	ror	r24
 6d8:	77 95       	ror	r23
 6da:	67 95       	ror	r22
 6dc:	b7 95       	ror	r27
 6de:	f7 95       	ror	r31
 6e0:	9e 3f       	cpi	r25, 0xFE	; 254
 6e2:	08 f0       	brcs	.+2      	; 0x6e6 <__addsf3x+0x9a>
 6e4:	b0 cf       	rjmp	.-160    	; 0x646 <__addsf3+0x28>
 6e6:	93 95       	inc	r25
 6e8:	88 0f       	add	r24, r24
 6ea:	08 f0       	brcs	.+2      	; 0x6ee <__addsf3x+0xa2>
 6ec:	99 27       	eor	r25, r25
 6ee:	ee 0f       	add	r30, r30
 6f0:	97 95       	ror	r25
 6f2:	87 95       	ror	r24
 6f4:	08 95       	ret

000006f6 <__divsf3>:
 6f6:	0e 94 8f 03 	call	0x71e	; 0x71e <__divsf3x>
 6fa:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_round>
 6fe:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__fp_pscB>
 702:	58 f0       	brcs	.+22     	; 0x71a <__divsf3+0x24>
 704:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__fp_pscA>
 708:	40 f0       	brcs	.+16     	; 0x71a <__divsf3+0x24>
 70a:	29 f4       	brne	.+10     	; 0x716 <__divsf3+0x20>
 70c:	5f 3f       	cpi	r21, 0xFF	; 255
 70e:	29 f0       	breq	.+10     	; 0x71a <__divsf3+0x24>
 710:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_inf>
 714:	51 11       	cpse	r21, r1
 716:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_szero>
 71a:	0c 94 66 04 	jmp	0x8cc	; 0x8cc <__fp_nan>

0000071e <__divsf3x>:
 71e:	0e 94 88 04 	call	0x910	; 0x910 <__fp_split3>
 722:	68 f3       	brcs	.-38     	; 0x6fe <__divsf3+0x8>

00000724 <__divsf3_pse>:
 724:	99 23       	and	r25, r25
 726:	b1 f3       	breq	.-20     	; 0x714 <__divsf3+0x1e>
 728:	55 23       	and	r21, r21
 72a:	91 f3       	breq	.-28     	; 0x710 <__divsf3+0x1a>
 72c:	95 1b       	sub	r25, r21
 72e:	55 0b       	sbc	r21, r21
 730:	bb 27       	eor	r27, r27
 732:	aa 27       	eor	r26, r26
 734:	62 17       	cp	r22, r18
 736:	73 07       	cpc	r23, r19
 738:	84 07       	cpc	r24, r20
 73a:	38 f0       	brcs	.+14     	; 0x74a <__divsf3_pse+0x26>
 73c:	9f 5f       	subi	r25, 0xFF	; 255
 73e:	5f 4f       	sbci	r21, 0xFF	; 255
 740:	22 0f       	add	r18, r18
 742:	33 1f       	adc	r19, r19
 744:	44 1f       	adc	r20, r20
 746:	aa 1f       	adc	r26, r26
 748:	a9 f3       	breq	.-22     	; 0x734 <__divsf3_pse+0x10>
 74a:	35 d0       	rcall	.+106    	; 0x7b6 <__divsf3_pse+0x92>
 74c:	0e 2e       	mov	r0, r30
 74e:	3a f0       	brmi	.+14     	; 0x75e <__divsf3_pse+0x3a>
 750:	e0 e8       	ldi	r30, 0x80	; 128
 752:	32 d0       	rcall	.+100    	; 0x7b8 <__divsf3_pse+0x94>
 754:	91 50       	subi	r25, 0x01	; 1
 756:	50 40       	sbci	r21, 0x00	; 0
 758:	e6 95       	lsr	r30
 75a:	00 1c       	adc	r0, r0
 75c:	ca f7       	brpl	.-14     	; 0x750 <__divsf3_pse+0x2c>
 75e:	2b d0       	rcall	.+86     	; 0x7b6 <__divsf3_pse+0x92>
 760:	fe 2f       	mov	r31, r30
 762:	29 d0       	rcall	.+82     	; 0x7b6 <__divsf3_pse+0x92>
 764:	66 0f       	add	r22, r22
 766:	77 1f       	adc	r23, r23
 768:	88 1f       	adc	r24, r24
 76a:	bb 1f       	adc	r27, r27
 76c:	26 17       	cp	r18, r22
 76e:	37 07       	cpc	r19, r23
 770:	48 07       	cpc	r20, r24
 772:	ab 07       	cpc	r26, r27
 774:	b0 e8       	ldi	r27, 0x80	; 128
 776:	09 f0       	breq	.+2      	; 0x77a <__divsf3_pse+0x56>
 778:	bb 0b       	sbc	r27, r27
 77a:	80 2d       	mov	r24, r0
 77c:	bf 01       	movw	r22, r30
 77e:	ff 27       	eor	r31, r31
 780:	93 58       	subi	r25, 0x83	; 131
 782:	5f 4f       	sbci	r21, 0xFF	; 255
 784:	3a f0       	brmi	.+14     	; 0x794 <__divsf3_pse+0x70>
 786:	9e 3f       	cpi	r25, 0xFE	; 254
 788:	51 05       	cpc	r21, r1
 78a:	78 f0       	brcs	.+30     	; 0x7aa <__divsf3_pse+0x86>
 78c:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_inf>
 790:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_szero>
 794:	5f 3f       	cpi	r21, 0xFF	; 255
 796:	e4 f3       	brlt	.-8      	; 0x790 <__divsf3_pse+0x6c>
 798:	98 3e       	cpi	r25, 0xE8	; 232
 79a:	d4 f3       	brlt	.-12     	; 0x790 <__divsf3_pse+0x6c>
 79c:	86 95       	lsr	r24
 79e:	77 95       	ror	r23
 7a0:	67 95       	ror	r22
 7a2:	b7 95       	ror	r27
 7a4:	f7 95       	ror	r31
 7a6:	9f 5f       	subi	r25, 0xFF	; 255
 7a8:	c9 f7       	brne	.-14     	; 0x79c <__divsf3_pse+0x78>
 7aa:	88 0f       	add	r24, r24
 7ac:	91 1d       	adc	r25, r1
 7ae:	96 95       	lsr	r25
 7b0:	87 95       	ror	r24
 7b2:	97 f9       	bld	r25, 7
 7b4:	08 95       	ret
 7b6:	e1 e0       	ldi	r30, 0x01	; 1
 7b8:	66 0f       	add	r22, r22
 7ba:	77 1f       	adc	r23, r23
 7bc:	88 1f       	adc	r24, r24
 7be:	bb 1f       	adc	r27, r27
 7c0:	62 17       	cp	r22, r18
 7c2:	73 07       	cpc	r23, r19
 7c4:	84 07       	cpc	r24, r20
 7c6:	ba 07       	cpc	r27, r26
 7c8:	20 f0       	brcs	.+8      	; 0x7d2 <__divsf3_pse+0xae>
 7ca:	62 1b       	sub	r22, r18
 7cc:	73 0b       	sbc	r23, r19
 7ce:	84 0b       	sbc	r24, r20
 7d0:	ba 0b       	sbc	r27, r26
 7d2:	ee 1f       	adc	r30, r30
 7d4:	88 f7       	brcc	.-30     	; 0x7b8 <__divsf3_pse+0x94>
 7d6:	e0 95       	com	r30
 7d8:	08 95       	ret

000007da <__fixsfsi>:
 7da:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__fixunssfsi>
 7de:	68 94       	set
 7e0:	b1 11       	cpse	r27, r1
 7e2:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_szero>
 7e6:	08 95       	ret

000007e8 <__fixunssfsi>:
 7e8:	0e 94 90 04 	call	0x920	; 0x920 <__fp_splitA>
 7ec:	88 f0       	brcs	.+34     	; 0x810 <__fixunssfsi+0x28>
 7ee:	9f 57       	subi	r25, 0x7F	; 127
 7f0:	98 f0       	brcs	.+38     	; 0x818 <__fixunssfsi+0x30>
 7f2:	b9 2f       	mov	r27, r25
 7f4:	99 27       	eor	r25, r25
 7f6:	b7 51       	subi	r27, 0x17	; 23
 7f8:	b0 f0       	brcs	.+44     	; 0x826 <__fixunssfsi+0x3e>
 7fa:	e1 f0       	breq	.+56     	; 0x834 <__fixunssfsi+0x4c>
 7fc:	66 0f       	add	r22, r22
 7fe:	77 1f       	adc	r23, r23
 800:	88 1f       	adc	r24, r24
 802:	99 1f       	adc	r25, r25
 804:	1a f0       	brmi	.+6      	; 0x80c <__fixunssfsi+0x24>
 806:	ba 95       	dec	r27
 808:	c9 f7       	brne	.-14     	; 0x7fc <__fixunssfsi+0x14>
 80a:	14 c0       	rjmp	.+40     	; 0x834 <__fixunssfsi+0x4c>
 80c:	b1 30       	cpi	r27, 0x01	; 1
 80e:	91 f0       	breq	.+36     	; 0x834 <__fixunssfsi+0x4c>
 810:	0e 94 aa 04 	call	0x954	; 0x954 <__fp_zero>
 814:	b1 e0       	ldi	r27, 0x01	; 1
 816:	08 95       	ret
 818:	0c 94 aa 04 	jmp	0x954	; 0x954 <__fp_zero>
 81c:	67 2f       	mov	r22, r23
 81e:	78 2f       	mov	r23, r24
 820:	88 27       	eor	r24, r24
 822:	b8 5f       	subi	r27, 0xF8	; 248
 824:	39 f0       	breq	.+14     	; 0x834 <__fixunssfsi+0x4c>
 826:	b9 3f       	cpi	r27, 0xF9	; 249
 828:	cc f3       	brlt	.-14     	; 0x81c <__fixunssfsi+0x34>
 82a:	86 95       	lsr	r24
 82c:	77 95       	ror	r23
 82e:	67 95       	ror	r22
 830:	b3 95       	inc	r27
 832:	d9 f7       	brne	.-10     	; 0x82a <__fixunssfsi+0x42>
 834:	3e f4       	brtc	.+14     	; 0x844 <__fixunssfsi+0x5c>
 836:	90 95       	com	r25
 838:	80 95       	com	r24
 83a:	70 95       	com	r23
 83c:	61 95       	neg	r22
 83e:	7f 4f       	sbci	r23, 0xFF	; 255
 840:	8f 4f       	sbci	r24, 0xFF	; 255
 842:	9f 4f       	sbci	r25, 0xFF	; 255
 844:	08 95       	ret

00000846 <__floatunsisf>:
 846:	e8 94       	clt
 848:	09 c0       	rjmp	.+18     	; 0x85c <__floatsisf+0x12>

0000084a <__floatsisf>:
 84a:	97 fb       	bst	r25, 7
 84c:	3e f4       	brtc	.+14     	; 0x85c <__floatsisf+0x12>
 84e:	90 95       	com	r25
 850:	80 95       	com	r24
 852:	70 95       	com	r23
 854:	61 95       	neg	r22
 856:	7f 4f       	sbci	r23, 0xFF	; 255
 858:	8f 4f       	sbci	r24, 0xFF	; 255
 85a:	9f 4f       	sbci	r25, 0xFF	; 255
 85c:	99 23       	and	r25, r25
 85e:	a9 f0       	breq	.+42     	; 0x88a <__floatsisf+0x40>
 860:	f9 2f       	mov	r31, r25
 862:	96 e9       	ldi	r25, 0x96	; 150
 864:	bb 27       	eor	r27, r27
 866:	93 95       	inc	r25
 868:	f6 95       	lsr	r31
 86a:	87 95       	ror	r24
 86c:	77 95       	ror	r23
 86e:	67 95       	ror	r22
 870:	b7 95       	ror	r27
 872:	f1 11       	cpse	r31, r1
 874:	f8 cf       	rjmp	.-16     	; 0x866 <__floatsisf+0x1c>
 876:	fa f4       	brpl	.+62     	; 0x8b6 <__floatsisf+0x6c>
 878:	bb 0f       	add	r27, r27
 87a:	11 f4       	brne	.+4      	; 0x880 <__floatsisf+0x36>
 87c:	60 ff       	sbrs	r22, 0
 87e:	1b c0       	rjmp	.+54     	; 0x8b6 <__floatsisf+0x6c>
 880:	6f 5f       	subi	r22, 0xFF	; 255
 882:	7f 4f       	sbci	r23, 0xFF	; 255
 884:	8f 4f       	sbci	r24, 0xFF	; 255
 886:	9f 4f       	sbci	r25, 0xFF	; 255
 888:	16 c0       	rjmp	.+44     	; 0x8b6 <__floatsisf+0x6c>
 88a:	88 23       	and	r24, r24
 88c:	11 f0       	breq	.+4      	; 0x892 <__floatsisf+0x48>
 88e:	96 e9       	ldi	r25, 0x96	; 150
 890:	11 c0       	rjmp	.+34     	; 0x8b4 <__floatsisf+0x6a>
 892:	77 23       	and	r23, r23
 894:	21 f0       	breq	.+8      	; 0x89e <__floatsisf+0x54>
 896:	9e e8       	ldi	r25, 0x8E	; 142
 898:	87 2f       	mov	r24, r23
 89a:	76 2f       	mov	r23, r22
 89c:	05 c0       	rjmp	.+10     	; 0x8a8 <__floatsisf+0x5e>
 89e:	66 23       	and	r22, r22
 8a0:	71 f0       	breq	.+28     	; 0x8be <__floatsisf+0x74>
 8a2:	96 e8       	ldi	r25, 0x86	; 134
 8a4:	86 2f       	mov	r24, r22
 8a6:	70 e0       	ldi	r23, 0x00	; 0
 8a8:	60 e0       	ldi	r22, 0x00	; 0
 8aa:	2a f0       	brmi	.+10     	; 0x8b6 <__floatsisf+0x6c>
 8ac:	9a 95       	dec	r25
 8ae:	66 0f       	add	r22, r22
 8b0:	77 1f       	adc	r23, r23
 8b2:	88 1f       	adc	r24, r24
 8b4:	da f7       	brpl	.-10     	; 0x8ac <__floatsisf+0x62>
 8b6:	88 0f       	add	r24, r24
 8b8:	96 95       	lsr	r25
 8ba:	87 95       	ror	r24
 8bc:	97 f9       	bld	r25, 7
 8be:	08 95       	ret

000008c0 <__fp_inf>:
 8c0:	97 f9       	bld	r25, 7
 8c2:	9f 67       	ori	r25, 0x7F	; 127
 8c4:	80 e8       	ldi	r24, 0x80	; 128
 8c6:	70 e0       	ldi	r23, 0x00	; 0
 8c8:	60 e0       	ldi	r22, 0x00	; 0
 8ca:	08 95       	ret

000008cc <__fp_nan>:
 8cc:	9f ef       	ldi	r25, 0xFF	; 255
 8ce:	80 ec       	ldi	r24, 0xC0	; 192
 8d0:	08 95       	ret

000008d2 <__fp_pscA>:
 8d2:	00 24       	eor	r0, r0
 8d4:	0a 94       	dec	r0
 8d6:	16 16       	cp	r1, r22
 8d8:	17 06       	cpc	r1, r23
 8da:	18 06       	cpc	r1, r24
 8dc:	09 06       	cpc	r0, r25
 8de:	08 95       	ret

000008e0 <__fp_pscB>:
 8e0:	00 24       	eor	r0, r0
 8e2:	0a 94       	dec	r0
 8e4:	12 16       	cp	r1, r18
 8e6:	13 06       	cpc	r1, r19
 8e8:	14 06       	cpc	r1, r20
 8ea:	05 06       	cpc	r0, r21
 8ec:	08 95       	ret

000008ee <__fp_round>:
 8ee:	09 2e       	mov	r0, r25
 8f0:	03 94       	inc	r0
 8f2:	00 0c       	add	r0, r0
 8f4:	11 f4       	brne	.+4      	; 0x8fa <__fp_round+0xc>
 8f6:	88 23       	and	r24, r24
 8f8:	52 f0       	brmi	.+20     	; 0x90e <__fp_round+0x20>
 8fa:	bb 0f       	add	r27, r27
 8fc:	40 f4       	brcc	.+16     	; 0x90e <__fp_round+0x20>
 8fe:	bf 2b       	or	r27, r31
 900:	11 f4       	brne	.+4      	; 0x906 <__fp_round+0x18>
 902:	60 ff       	sbrs	r22, 0
 904:	04 c0       	rjmp	.+8      	; 0x90e <__fp_round+0x20>
 906:	6f 5f       	subi	r22, 0xFF	; 255
 908:	7f 4f       	sbci	r23, 0xFF	; 255
 90a:	8f 4f       	sbci	r24, 0xFF	; 255
 90c:	9f 4f       	sbci	r25, 0xFF	; 255
 90e:	08 95       	ret

00000910 <__fp_split3>:
 910:	57 fd       	sbrc	r21, 7
 912:	90 58       	subi	r25, 0x80	; 128
 914:	44 0f       	add	r20, r20
 916:	55 1f       	adc	r21, r21
 918:	59 f0       	breq	.+22     	; 0x930 <__fp_splitA+0x10>
 91a:	5f 3f       	cpi	r21, 0xFF	; 255
 91c:	71 f0       	breq	.+28     	; 0x93a <__fp_splitA+0x1a>
 91e:	47 95       	ror	r20

00000920 <__fp_splitA>:
 920:	88 0f       	add	r24, r24
 922:	97 fb       	bst	r25, 7
 924:	99 1f       	adc	r25, r25
 926:	61 f0       	breq	.+24     	; 0x940 <__fp_splitA+0x20>
 928:	9f 3f       	cpi	r25, 0xFF	; 255
 92a:	79 f0       	breq	.+30     	; 0x94a <__fp_splitA+0x2a>
 92c:	87 95       	ror	r24
 92e:	08 95       	ret
 930:	12 16       	cp	r1, r18
 932:	13 06       	cpc	r1, r19
 934:	14 06       	cpc	r1, r20
 936:	55 1f       	adc	r21, r21
 938:	f2 cf       	rjmp	.-28     	; 0x91e <__fp_split3+0xe>
 93a:	46 95       	lsr	r20
 93c:	f1 df       	rcall	.-30     	; 0x920 <__fp_splitA>
 93e:	08 c0       	rjmp	.+16     	; 0x950 <__fp_splitA+0x30>
 940:	16 16       	cp	r1, r22
 942:	17 06       	cpc	r1, r23
 944:	18 06       	cpc	r1, r24
 946:	99 1f       	adc	r25, r25
 948:	f1 cf       	rjmp	.-30     	; 0x92c <__fp_splitA+0xc>
 94a:	86 95       	lsr	r24
 94c:	71 05       	cpc	r23, r1
 94e:	61 05       	cpc	r22, r1
 950:	08 94       	sec
 952:	08 95       	ret

00000954 <__fp_zero>:
 954:	e8 94       	clt

00000956 <__fp_szero>:
 956:	bb 27       	eor	r27, r27
 958:	66 27       	eor	r22, r22
 95a:	77 27       	eor	r23, r23
 95c:	cb 01       	movw	r24, r22
 95e:	97 f9       	bld	r25, 7
 960:	08 95       	ret

00000962 <__gesf2>:
 962:	0e 94 23 05 	call	0xa46	; 0xa46 <__fp_cmp>
 966:	08 f4       	brcc	.+2      	; 0x96a <__gesf2+0x8>
 968:	8f ef       	ldi	r24, 0xFF	; 255
 96a:	08 95       	ret

0000096c <__mulsf3>:
 96c:	0e 94 c9 04 	call	0x992	; 0x992 <__mulsf3x>
 970:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_round>
 974:	0e 94 69 04 	call	0x8d2	; 0x8d2 <__fp_pscA>
 978:	38 f0       	brcs	.+14     	; 0x988 <__mulsf3+0x1c>
 97a:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__fp_pscB>
 97e:	20 f0       	brcs	.+8      	; 0x988 <__mulsf3+0x1c>
 980:	95 23       	and	r25, r21
 982:	11 f0       	breq	.+4      	; 0x988 <__mulsf3+0x1c>
 984:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_inf>
 988:	0c 94 66 04 	jmp	0x8cc	; 0x8cc <__fp_nan>
 98c:	11 24       	eor	r1, r1
 98e:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_szero>

00000992 <__mulsf3x>:
 992:	0e 94 88 04 	call	0x910	; 0x910 <__fp_split3>
 996:	70 f3       	brcs	.-36     	; 0x974 <__mulsf3+0x8>

00000998 <__mulsf3_pse>:
 998:	95 9f       	mul	r25, r21
 99a:	c1 f3       	breq	.-16     	; 0x98c <__mulsf3+0x20>
 99c:	95 0f       	add	r25, r21
 99e:	50 e0       	ldi	r21, 0x00	; 0
 9a0:	55 1f       	adc	r21, r21
 9a2:	62 9f       	mul	r22, r18
 9a4:	f0 01       	movw	r30, r0
 9a6:	72 9f       	mul	r23, r18
 9a8:	bb 27       	eor	r27, r27
 9aa:	f0 0d       	add	r31, r0
 9ac:	b1 1d       	adc	r27, r1
 9ae:	63 9f       	mul	r22, r19
 9b0:	aa 27       	eor	r26, r26
 9b2:	f0 0d       	add	r31, r0
 9b4:	b1 1d       	adc	r27, r1
 9b6:	aa 1f       	adc	r26, r26
 9b8:	64 9f       	mul	r22, r20
 9ba:	66 27       	eor	r22, r22
 9bc:	b0 0d       	add	r27, r0
 9be:	a1 1d       	adc	r26, r1
 9c0:	66 1f       	adc	r22, r22
 9c2:	82 9f       	mul	r24, r18
 9c4:	22 27       	eor	r18, r18
 9c6:	b0 0d       	add	r27, r0
 9c8:	a1 1d       	adc	r26, r1
 9ca:	62 1f       	adc	r22, r18
 9cc:	73 9f       	mul	r23, r19
 9ce:	b0 0d       	add	r27, r0
 9d0:	a1 1d       	adc	r26, r1
 9d2:	62 1f       	adc	r22, r18
 9d4:	83 9f       	mul	r24, r19
 9d6:	a0 0d       	add	r26, r0
 9d8:	61 1d       	adc	r22, r1
 9da:	22 1f       	adc	r18, r18
 9dc:	74 9f       	mul	r23, r20
 9de:	33 27       	eor	r19, r19
 9e0:	a0 0d       	add	r26, r0
 9e2:	61 1d       	adc	r22, r1
 9e4:	23 1f       	adc	r18, r19
 9e6:	84 9f       	mul	r24, r20
 9e8:	60 0d       	add	r22, r0
 9ea:	21 1d       	adc	r18, r1
 9ec:	82 2f       	mov	r24, r18
 9ee:	76 2f       	mov	r23, r22
 9f0:	6a 2f       	mov	r22, r26
 9f2:	11 24       	eor	r1, r1
 9f4:	9f 57       	subi	r25, 0x7F	; 127
 9f6:	50 40       	sbci	r21, 0x00	; 0
 9f8:	9a f0       	brmi	.+38     	; 0xa20 <__mulsf3_pse+0x88>
 9fa:	f1 f0       	breq	.+60     	; 0xa38 <__mulsf3_pse+0xa0>
 9fc:	88 23       	and	r24, r24
 9fe:	4a f0       	brmi	.+18     	; 0xa12 <__mulsf3_pse+0x7a>
 a00:	ee 0f       	add	r30, r30
 a02:	ff 1f       	adc	r31, r31
 a04:	bb 1f       	adc	r27, r27
 a06:	66 1f       	adc	r22, r22
 a08:	77 1f       	adc	r23, r23
 a0a:	88 1f       	adc	r24, r24
 a0c:	91 50       	subi	r25, 0x01	; 1
 a0e:	50 40       	sbci	r21, 0x00	; 0
 a10:	a9 f7       	brne	.-22     	; 0x9fc <__mulsf3_pse+0x64>
 a12:	9e 3f       	cpi	r25, 0xFE	; 254
 a14:	51 05       	cpc	r21, r1
 a16:	80 f0       	brcs	.+32     	; 0xa38 <__mulsf3_pse+0xa0>
 a18:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__fp_inf>
 a1c:	0c 94 ab 04 	jmp	0x956	; 0x956 <__fp_szero>
 a20:	5f 3f       	cpi	r21, 0xFF	; 255
 a22:	e4 f3       	brlt	.-8      	; 0xa1c <__mulsf3_pse+0x84>
 a24:	98 3e       	cpi	r25, 0xE8	; 232
 a26:	d4 f3       	brlt	.-12     	; 0xa1c <__mulsf3_pse+0x84>
 a28:	86 95       	lsr	r24
 a2a:	77 95       	ror	r23
 a2c:	67 95       	ror	r22
 a2e:	b7 95       	ror	r27
 a30:	f7 95       	ror	r31
 a32:	e7 95       	ror	r30
 a34:	9f 5f       	subi	r25, 0xFF	; 255
 a36:	c1 f7       	brne	.-16     	; 0xa28 <__mulsf3_pse+0x90>
 a38:	fe 2b       	or	r31, r30
 a3a:	88 0f       	add	r24, r24
 a3c:	91 1d       	adc	r25, r1
 a3e:	96 95       	lsr	r25
 a40:	87 95       	ror	r24
 a42:	97 f9       	bld	r25, 7
 a44:	08 95       	ret

00000a46 <__fp_cmp>:
 a46:	99 0f       	add	r25, r25
 a48:	00 08       	sbc	r0, r0
 a4a:	55 0f       	add	r21, r21
 a4c:	aa 0b       	sbc	r26, r26
 a4e:	e0 e8       	ldi	r30, 0x80	; 128
 a50:	fe ef       	ldi	r31, 0xFE	; 254
 a52:	16 16       	cp	r1, r22
 a54:	17 06       	cpc	r1, r23
 a56:	e8 07       	cpc	r30, r24
 a58:	f9 07       	cpc	r31, r25
 a5a:	c0 f0       	brcs	.+48     	; 0xa8c <__fp_cmp+0x46>
 a5c:	12 16       	cp	r1, r18
 a5e:	13 06       	cpc	r1, r19
 a60:	e4 07       	cpc	r30, r20
 a62:	f5 07       	cpc	r31, r21
 a64:	98 f0       	brcs	.+38     	; 0xa8c <__fp_cmp+0x46>
 a66:	62 1b       	sub	r22, r18
 a68:	73 0b       	sbc	r23, r19
 a6a:	84 0b       	sbc	r24, r20
 a6c:	95 0b       	sbc	r25, r21
 a6e:	39 f4       	brne	.+14     	; 0xa7e <__fp_cmp+0x38>
 a70:	0a 26       	eor	r0, r26
 a72:	61 f0       	breq	.+24     	; 0xa8c <__fp_cmp+0x46>
 a74:	23 2b       	or	r18, r19
 a76:	24 2b       	or	r18, r20
 a78:	25 2b       	or	r18, r21
 a7a:	21 f4       	brne	.+8      	; 0xa84 <__fp_cmp+0x3e>
 a7c:	08 95       	ret
 a7e:	0a 26       	eor	r0, r26
 a80:	09 f4       	brne	.+2      	; 0xa84 <__fp_cmp+0x3e>
 a82:	a1 40       	sbci	r26, 0x01	; 1
 a84:	a6 95       	lsr	r26
 a86:	8f ef       	ldi	r24, 0xFF	; 255
 a88:	81 1d       	adc	r24, r1
 a8a:	81 1d       	adc	r24, r1
 a8c:	08 95       	ret

00000a8e <_exit>:
 a8e:	f8 94       	cli

00000a90 <__stop_program>:
 a90:	ff cf       	rjmp	.-2      	; 0xa90 <__stop_program>
