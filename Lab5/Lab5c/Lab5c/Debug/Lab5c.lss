
Lab5c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008f8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  0000094c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000094c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000097c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  000009bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00004892  00000000  00000000  00000a24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003d0e  00000000  00000000  000052b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000071f  00000000  00000000  00008fc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  000096e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002e46  00000000  00000000  000097d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000127  00000000  00000000  0000c61e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  0000c745  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
   8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
   c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  10:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  14:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  18:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  1c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  20:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  24:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  28:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  2c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  30:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  34:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  38:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  3c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  40:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  44:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  48:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  4c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  50:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  54:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  58:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  5c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  60:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  64:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  68:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  6c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  70:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  74:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  78:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  7c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  80:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  84:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  88:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  8c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  90:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  94:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  98:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  9c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  a0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  a4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  a8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  ac:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  b0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  b4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  b8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  bc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  c0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  c4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  c8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  cc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  d0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  d4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  d8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  dc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  e0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  e4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  e8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  ec:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  f0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  f4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  f8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  fc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 100:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 104:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 108:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 10c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 110:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 114:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 118:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 11c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 120:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 124:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 128:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 12c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 130:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 134:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 138:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 13c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 140:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 144:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 148:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 14c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 150:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 154:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 158:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 15c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 160:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 164:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 168:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 16c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 170:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 174:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 178:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 17c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 180:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 184:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 188:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 18c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 190:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 194:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 198:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 19c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1a0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1a4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1a8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1ac:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1b0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1b4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1b8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1bc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1c0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1c4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1c8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1cc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1d0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1d4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1d8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1dc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1e0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1e4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1e8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1ec:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1f0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1f4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1f8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59
 214:	0e 94 5d 02 	call	0x4ba	; 0x4ba <main>
 218:	0c 94 7a 04 	jmp	0x8f4	; 0x8f4 <_exit>

0000021c <__bad_interrupt>:
 21c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000220 <CLK_init>:
{
	while(*text)
	{
		send_char(*text++);
	}
}
 220:	82 e0       	ldi	r24, 0x02	; 2
 222:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
 226:	e0 e5       	ldi	r30, 0x50	; 80
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	81 81       	ldd	r24, Z+1	; 0x01
 22c:	81 ff       	sbrs	r24, 1
 22e:	fd cf       	rjmp	.-6      	; 0x22a <CLK_init+0xa>
 230:	88 ed       	ldi	r24, 0xD8	; 216
 232:	84 bf       	out	0x34, r24	; 52
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 23a:	08 95       	ret

0000023c <USART_init>:
 23c:	e0 ea       	ldi	r30, 0xA0	; 160
 23e:	f9 e0       	ldi	r31, 0x09	; 9
 240:	89 e8       	ldi	r24, 0x89	; 137
 242:	86 83       	std	Z+6, r24	; 0x06
 244:	80 ef       	ldi	r24, 0xF0	; 240
 246:	87 83       	std	Z+7, r24	; 0x07
 248:	88 e1       	ldi	r24, 0x18	; 24
 24a:	84 83       	std	Z+4, r24	; 0x04
 24c:	8b e0       	ldi	r24, 0x0B	; 11
 24e:	85 83       	std	Z+5, r24	; 0x05
 250:	08 95       	ret

00000252 <IO_init>:
 252:	e0 e6       	ldi	r30, 0x60	; 96
 254:	f6 e0       	ldi	r31, 0x06	; 6
 256:	88 ef       	ldi	r24, 0xF8	; 248
 258:	81 83       	std	Z+1, r24	; 0x01
 25a:	85 83       	std	Z+5, r24	; 0x05
 25c:	84 e0       	ldi	r24, 0x04	; 4
 25e:	82 83       	std	Z+2, r24	; 0x02
 260:	e0 ec       	ldi	r30, 0xC0	; 192
 262:	f7 e0       	ldi	r31, 0x07	; 7
 264:	8a e0       	ldi	r24, 0x0A	; 10
 266:	81 83       	std	Z+1, r24	; 0x01
 268:	86 83       	std	Z+6, r24	; 0x06
 26a:	08 95       	ret

0000026c <ADC_init>:
 26c:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
 270:	e0 e0       	ldi	r30, 0x00	; 0
 272:	f2 e0       	ldi	r31, 0x02	; 2
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	80 83       	st	Z, r24
 278:	9c e0       	ldi	r25, 0x0C	; 12
 27a:	91 83       	std	Z+1, r25	; 0x01
 27c:	90 e3       	ldi	r25, 0x30	; 48
 27e:	92 83       	std	Z+2, r25	; 0x02
 280:	93 e8       	ldi	r25, 0x83	; 131
 282:	90 a3       	std	Z+32, r25	; 0x20
 284:	9a e0       	ldi	r25, 0x0A	; 10
 286:	91 a3       	std	Z+33, r25	; 0x21
 288:	86 83       	std	Z+6, r24	; 0x06
 28a:	08 95       	ret

0000028c <ADC_read>:
 28c:	e0 e0       	ldi	r30, 0x00	; 0
 28e:	f2 e0       	ldi	r31, 0x02	; 2
 290:	80 a1       	ldd	r24, Z+32	; 0x20
 292:	80 68       	ori	r24, 0x80	; 128
 294:	80 a3       	std	Z+32, r24	; 0x20
 296:	83 a1       	ldd	r24, Z+35	; 0x23
 298:	80 ff       	sbrs	r24, 0
 29a:	fd cf       	rjmp	.-6      	; 0x296 <ADC_read+0xa>
 29c:	e0 e0       	ldi	r30, 0x00	; 0
 29e:	f2 e0       	ldi	r31, 0x02	; 2
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	86 83       	std	Z+6, r24	; 0x06
 2a4:	84 a1       	ldd	r24, Z+36	; 0x24
 2a6:	95 a1       	ldd	r25, Z+37	; 0x25
 2a8:	08 95       	ret

000002aa <send_char>:
 2aa:	e0 ea       	ldi	r30, 0xA0	; 160
 2ac:	f9 e0       	ldi	r31, 0x09	; 9
 2ae:	91 81       	ldd	r25, Z+1	; 0x01
 2b0:	95 ff       	sbrs	r25, 5
 2b2:	fd cf       	rjmp	.-6      	; 0x2ae <send_char+0x4>
 2b4:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
 2b8:	08 95       	ret

000002ba <delay_3s>:

void delay_3s(void)
{
 2ba:	cf 93       	push	r28
 2bc:	df 93       	push	r29
 2be:	00 d0       	rcall	.+0      	; 0x2c0 <delay_3s+0x6>
 2c0:	1f 92       	push	r1
 2c2:	cd b7       	in	r28, 0x3d	; 61
 2c4:	de b7       	in	r29, 0x3e	; 62
	volatile uint32_t ticks;				//Volatile prevents compiler optimization
	for(ticks = 0; ticks <= 2000000; ticks++);	//increment 2e6 times -> ~ 1 sec
 2c6:	19 82       	std	Y+1, r1	; 0x01
 2c8:	1a 82       	std	Y+2, r1	; 0x02
 2ca:	1b 82       	std	Y+3, r1	; 0x03
 2cc:	1c 82       	std	Y+4, r1	; 0x04
 2ce:	89 81       	ldd	r24, Y+1	; 0x01
 2d0:	9a 81       	ldd	r25, Y+2	; 0x02
 2d2:	ab 81       	ldd	r26, Y+3	; 0x03
 2d4:	bc 81       	ldd	r27, Y+4	; 0x04
 2d6:	81 38       	cpi	r24, 0x81	; 129
 2d8:	94 48       	sbci	r25, 0x84	; 132
 2da:	ae 41       	sbci	r26, 0x1E	; 30
 2dc:	b1 05       	cpc	r27, r1
 2de:	a0 f4       	brcc	.+40     	; 0x308 <delay_3s+0x4e>
 2e0:	89 81       	ldd	r24, Y+1	; 0x01
 2e2:	9a 81       	ldd	r25, Y+2	; 0x02
 2e4:	ab 81       	ldd	r26, Y+3	; 0x03
 2e6:	bc 81       	ldd	r27, Y+4	; 0x04
 2e8:	01 96       	adiw	r24, 0x01	; 1
 2ea:	a1 1d       	adc	r26, r1
 2ec:	b1 1d       	adc	r27, r1
 2ee:	89 83       	std	Y+1, r24	; 0x01
 2f0:	9a 83       	std	Y+2, r25	; 0x02
 2f2:	ab 83       	std	Y+3, r26	; 0x03
 2f4:	bc 83       	std	Y+4, r27	; 0x04
 2f6:	89 81       	ldd	r24, Y+1	; 0x01
 2f8:	9a 81       	ldd	r25, Y+2	; 0x02
 2fa:	ab 81       	ldd	r26, Y+3	; 0x03
 2fc:	bc 81       	ldd	r27, Y+4	; 0x04
 2fe:	81 38       	cpi	r24, 0x81	; 129
 300:	94 48       	sbci	r25, 0x84	; 132
 302:	ae 41       	sbci	r26, 0x1E	; 30
 304:	b1 05       	cpc	r27, r1
 306:	60 f3       	brcs	.-40     	; 0x2e0 <delay_3s+0x26>
}
 308:	24 96       	adiw	r28, 0x04	; 4
 30a:	cd bf       	out	0x3d, r28	; 61
 30c:	de bf       	out	0x3e, r29	; 62
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	08 95       	ret

00000314 <send_Values>:

void send_Values() {
 314:	cf 92       	push	r12
 316:	df 92       	push	r13
 318:	ef 92       	push	r14
 31a:	ff 92       	push	r15
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	cd b7       	in	r28, 0x3d	; 61
 322:	de b7       	in	r29, 0x3e	; 62
 324:	28 97       	sbiw	r28, 0x08	; 8
 326:	cd bf       	out	0x3d, r28	; 61
 328:	de bf       	out	0x3e, r29	; 62
	
	volatile int8_t adcVal = 0;
 32a:	19 82       	std	Y+1, r1	; 0x01
	volatile int intVal = 0;
 32c:	1a 82       	std	Y+2, r1	; 0x02
 32e:	1b 82       	std	Y+3, r1	; 0x03
	volatile float voltVal = 0;
 330:	1c 82       	std	Y+4, r1	; 0x04
 332:	1d 82       	std	Y+5, r1	; 0x05
 334:	1e 82       	std	Y+6, r1	; 0x06
 336:	1f 82       	std	Y+7, r1	; 0x07
	
	adcVal = (ADC_read() << 2);
 338:	0e 94 46 01 	call	0x28c	; 0x28c <ADC_read>
 33c:	88 0f       	add	r24, r24
 33e:	99 1f       	adc	r25, r25
 340:	88 0f       	add	r24, r24
 342:	99 1f       	adc	r25, r25
 344:	89 83       	std	Y+1, r24	; 0x01
	
		if (adcVal >= 0x80) {
 346:	89 81       	ldd	r24, Y+1	; 0x01
			send_char((char)0x2B);			//+/-
		}
		else  {
			send_char((char)0x2D);
 348:	8d e2       	ldi	r24, 0x2D	; 45
 34a:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
			adcVal &= ~0x80;				 //remove sign bit
 34e:	89 81       	ldd	r24, Y+1	; 0x01
 350:	8f 77       	andi	r24, 0x7F	; 127
 352:	89 83       	std	Y+1, r24	; 0x01
		}
	
	
	//voltVal = (1/50)*adcVal + .0098
	voltVal = adcVal;
 354:	69 81       	ldd	r22, Y+1	; 0x01
 356:	06 2e       	mov	r0, r22
 358:	00 0c       	add	r0, r0
 35a:	77 0b       	sbc	r23, r23
 35c:	88 0b       	sbc	r24, r24
 35e:	99 0b       	sbc	r25, r25
 360:	0e 94 81 03 	call	0x702	; 0x702 <__floatsisf>
 364:	6c 83       	std	Y+4, r22	; 0x04
 366:	7d 83       	std	Y+5, r23	; 0x05
 368:	8e 83       	std	Y+6, r24	; 0x06
 36a:	9f 83       	std	Y+7, r25	; 0x07
	voltVal /= 50;
 36c:	6c 81       	ldd	r22, Y+4	; 0x04
 36e:	7d 81       	ldd	r23, Y+5	; 0x05
 370:	8e 81       	ldd	r24, Y+6	; 0x06
 372:	9f 81       	ldd	r25, Y+7	; 0x07
 374:	20 e0       	ldi	r18, 0x00	; 0
 376:	30 e0       	ldi	r19, 0x00	; 0
 378:	48 e4       	ldi	r20, 0x48	; 72
 37a:	52 e4       	ldi	r21, 0x42	; 66
 37c:	0e 94 d7 02 	call	0x5ae	; 0x5ae <__divsf3>
 380:	6c 83       	std	Y+4, r22	; 0x04
 382:	7d 83       	std	Y+5, r23	; 0x05
 384:	8e 83       	std	Y+6, r24	; 0x06
 386:	9f 83       	std	Y+7, r25	; 0x07
	voltVal += .0098;
 388:	6c 81       	ldd	r22, Y+4	; 0x04
 38a:	7d 81       	ldd	r23, Y+5	; 0x05
 38c:	8e 81       	ldd	r24, Y+6	; 0x06
 38e:	9f 81       	ldd	r25, Y+7	; 0x07
 390:	2e e2       	ldi	r18, 0x2E	; 46
 392:	30 e9       	ldi	r19, 0x90	; 144
 394:	40 e2       	ldi	r20, 0x20	; 32
 396:	5c e3       	ldi	r21, 0x3C	; 60
 398:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <__addsf3>
 39c:	6c 83       	std	Y+4, r22	; 0x04
 39e:	7d 83       	std	Y+5, r23	; 0x05
 3a0:	8e 83       	std	Y+6, r24	; 0x06
 3a2:	9f 83       	std	Y+7, r25	; 0x07

	
	intVal = (int)voltVal;					//1st iteration
 3a4:	6c 81       	ldd	r22, Y+4	; 0x04
 3a6:	7d 81       	ldd	r23, Y+5	; 0x05
 3a8:	8e 81       	ldd	r24, Y+6	; 0x06
 3aa:	9f 81       	ldd	r25, Y+7	; 0x07
 3ac:	0e 94 49 03 	call	0x692	; 0x692 <__fixsfsi>
 3b0:	6a 83       	std	Y+2, r22	; 0x02
 3b2:	7b 83       	std	Y+3, r23	; 0x03
	send_char((char)(intVal + '0'));
 3b4:	8a 81       	ldd	r24, Y+2	; 0x02
 3b6:	9b 81       	ldd	r25, Y+3	; 0x03
 3b8:	80 5d       	subi	r24, 0xD0	; 208
 3ba:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)0x2E);					//.
 3be:	8e e2       	ldi	r24, 0x2E	; 46
 3c0:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	
	voltVal = 10*(voltVal - intVal);		//2nd iteration
 3c4:	cc 80       	ldd	r12, Y+4	; 0x04
 3c6:	dd 80       	ldd	r13, Y+5	; 0x05
 3c8:	ee 80       	ldd	r14, Y+6	; 0x06
 3ca:	ff 80       	ldd	r15, Y+7	; 0x07
 3cc:	8a 81       	ldd	r24, Y+2	; 0x02
 3ce:	9b 81       	ldd	r25, Y+3	; 0x03
 3d0:	bc 01       	movw	r22, r24
 3d2:	99 0f       	add	r25, r25
 3d4:	88 0b       	sbc	r24, r24
 3d6:	99 0b       	sbc	r25, r25
 3d8:	0e 94 81 03 	call	0x702	; 0x702 <__floatsisf>
 3dc:	9b 01       	movw	r18, r22
 3de:	ac 01       	movw	r20, r24
 3e0:	c7 01       	movw	r24, r14
 3e2:	b6 01       	movw	r22, r12
 3e4:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__subsf3>
 3e8:	20 e0       	ldi	r18, 0x00	; 0
 3ea:	30 e0       	ldi	r19, 0x00	; 0
 3ec:	40 e2       	ldi	r20, 0x20	; 32
 3ee:	51 e4       	ldi	r21, 0x41	; 65
 3f0:	0e 94 0d 04 	call	0x81a	; 0x81a <__mulsf3>
 3f4:	6c 83       	std	Y+4, r22	; 0x04
 3f6:	7d 83       	std	Y+5, r23	; 0x05
 3f8:	8e 83       	std	Y+6, r24	; 0x06
 3fa:	9f 83       	std	Y+7, r25	; 0x07
	intVal = (int)voltVal;
 3fc:	6c 81       	ldd	r22, Y+4	; 0x04
 3fe:	7d 81       	ldd	r23, Y+5	; 0x05
 400:	8e 81       	ldd	r24, Y+6	; 0x06
 402:	9f 81       	ldd	r25, Y+7	; 0x07
 404:	0e 94 49 03 	call	0x692	; 0x692 <__fixsfsi>
 408:	6a 83       	std	Y+2, r22	; 0x02
 40a:	7b 83       	std	Y+3, r23	; 0x03
	send_char((char)(intVal + '0'));				
 40c:	8a 81       	ldd	r24, Y+2	; 0x02
 40e:	9b 81       	ldd	r25, Y+3	; 0x03
 410:	80 5d       	subi	r24, 0xD0	; 208
 412:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	
	voltVal = 10*(voltVal - intVal);		//3rd iteration
 416:	cc 80       	ldd	r12, Y+4	; 0x04
 418:	dd 80       	ldd	r13, Y+5	; 0x05
 41a:	ee 80       	ldd	r14, Y+6	; 0x06
 41c:	ff 80       	ldd	r15, Y+7	; 0x07
 41e:	8a 81       	ldd	r24, Y+2	; 0x02
 420:	9b 81       	ldd	r25, Y+3	; 0x03
 422:	bc 01       	movw	r22, r24
 424:	99 0f       	add	r25, r25
 426:	88 0b       	sbc	r24, r24
 428:	99 0b       	sbc	r25, r25
 42a:	0e 94 81 03 	call	0x702	; 0x702 <__floatsisf>
 42e:	9b 01       	movw	r18, r22
 430:	ac 01       	movw	r20, r24
 432:	c7 01       	movw	r24, r14
 434:	b6 01       	movw	r22, r12
 436:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__subsf3>
 43a:	20 e0       	ldi	r18, 0x00	; 0
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	40 e2       	ldi	r20, 0x20	; 32
 440:	51 e4       	ldi	r21, 0x41	; 65
 442:	0e 94 0d 04 	call	0x81a	; 0x81a <__mulsf3>
 446:	6c 83       	std	Y+4, r22	; 0x04
 448:	7d 83       	std	Y+5, r23	; 0x05
 44a:	8e 83       	std	Y+6, r24	; 0x06
 44c:	9f 83       	std	Y+7, r25	; 0x07
	intVal = (int)voltVal;
 44e:	6c 81       	ldd	r22, Y+4	; 0x04
 450:	7d 81       	ldd	r23, Y+5	; 0x05
 452:	8e 81       	ldd	r24, Y+6	; 0x06
 454:	9f 81       	ldd	r25, Y+7	; 0x07
 456:	0e 94 49 03 	call	0x692	; 0x692 <__fixsfsi>
 45a:	6a 83       	std	Y+2, r22	; 0x02
 45c:	7b 83       	std	Y+3, r23	; 0x03
	send_char((char)(intVal + '0'));
 45e:	8a 81       	ldd	r24, Y+2	; 0x02
 460:	9b 81       	ldd	r25, Y+3	; 0x03
 462:	80 5d       	subi	r24, 0xD0	; 208
 464:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)0x20);					//space
 468:	80 e2       	ldi	r24, 0x20	; 32
 46a:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	
	//hex Values
	volatile int8_t hexVal = 0; 
 46e:	18 86       	std	Y+8, r1	; 0x08
	hexVal = (adcVal >> 1);
 470:	89 81       	ldd	r24, Y+1	; 0x01
 472:	85 95       	asr	r24
 474:	88 87       	std	Y+8, r24	; 0x08
	
	send_char((char)0x28);							//(
 476:	88 e2       	ldi	r24, 0x28	; 40
 478:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)0x30);							//0
 47c:	80 e3       	ldi	r24, 0x30	; 48
 47e:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)0x78);							//x;
 482:	88 e7       	ldi	r24, 0x78	; 120
 484:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)(hexVal + '0'));				//firs byte
 488:	88 85       	ldd	r24, Y+8	; 0x08
 48a:	80 5d       	subi	r24, 0xD0	; 208
 48c:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)((adcVal & 0x0F) + '0'));		//second byte
 490:	89 81       	ldd	r24, Y+1	; 0x01
 492:	8f 70       	andi	r24, 0x0F	; 15
 494:	80 5d       	subi	r24, 0xD0	; 208
 496:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)0x29);							//)
 49a:	89 e2       	ldi	r24, 0x29	; 41
 49c:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)0x20);							//space
 4a0:	80 e2       	ldi	r24, 0x20	; 32
 4a2:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	
	
}
 4a6:	28 96       	adiw	r28, 0x08	; 8
 4a8:	cd bf       	out	0x3d, r28	; 61
 4aa:	de bf       	out	0x3e, r29	; 62
 4ac:	df 91       	pop	r29
 4ae:	cf 91       	pop	r28
 4b0:	ff 90       	pop	r15
 4b2:	ef 90       	pop	r14
 4b4:	df 90       	pop	r13
 4b6:	cf 90       	pop	r12
 4b8:	08 95       	ret

000004ba <main>:


int main(void)
{
   
	CLK_init();
 4ba:	0e 94 10 01 	call	0x220	; 0x220 <CLK_init>
    ADC_init();	
 4be:	0e 94 36 01 	call	0x26c	; 0x26c <ADC_init>
	USART_init();
 4c2:	0e 94 1e 01 	call	0x23c	; 0x23c <USART_init>
	IO_init();     
 4c6:	0e 94 29 01 	call	0x252	; 0x252 <IO_init>

	
    while(1){
		
		send_Values();
 4ca:	0e 94 8a 01 	call	0x314	; 0x314 <send_Values>
		delay_3s();
 4ce:	0e 94 5d 01 	call	0x2ba	; 0x2ba <delay_3s>

	}
 4d2:	fb cf       	rjmp	.-10     	; 0x4ca <main+0x10>

000004d4 <__subsf3>:
 4d4:	50 58       	subi	r21, 0x80	; 128

000004d6 <__addsf3>:
 4d6:	bb 27       	eor	r27, r27
 4d8:	aa 27       	eor	r26, r26
 4da:	0e 94 82 02 	call	0x504	; 0x504 <__addsf3x>
 4de:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <__fp_round>
 4e2:	0e 94 c5 03 	call	0x78a	; 0x78a <__fp_pscA>
 4e6:	38 f0       	brcs	.+14     	; 0x4f6 <__addsf3+0x20>
 4e8:	0e 94 cc 03 	call	0x798	; 0x798 <__fp_pscB>
 4ec:	20 f0       	brcs	.+8      	; 0x4f6 <__addsf3+0x20>
 4ee:	39 f4       	brne	.+14     	; 0x4fe <__addsf3+0x28>
 4f0:	9f 3f       	cpi	r25, 0xFF	; 255
 4f2:	19 f4       	brne	.+6      	; 0x4fa <__addsf3+0x24>
 4f4:	26 f4       	brtc	.+8      	; 0x4fe <__addsf3+0x28>
 4f6:	0c 94 c2 03 	jmp	0x784	; 0x784 <__fp_nan>
 4fa:	0e f4       	brtc	.+2      	; 0x4fe <__addsf3+0x28>
 4fc:	e0 95       	com	r30
 4fe:	e7 fb       	bst	r30, 7
 500:	0c 94 bc 03 	jmp	0x778	; 0x778 <__fp_inf>

00000504 <__addsf3x>:
 504:	e9 2f       	mov	r30, r25
 506:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_split3>
 50a:	58 f3       	brcs	.-42     	; 0x4e2 <__addsf3+0xc>
 50c:	ba 17       	cp	r27, r26
 50e:	62 07       	cpc	r22, r18
 510:	73 07       	cpc	r23, r19
 512:	84 07       	cpc	r24, r20
 514:	95 07       	cpc	r25, r21
 516:	20 f0       	brcs	.+8      	; 0x520 <__addsf3x+0x1c>
 518:	79 f4       	brne	.+30     	; 0x538 <__addsf3x+0x34>
 51a:	a6 f5       	brtc	.+104    	; 0x584 <__addsf3x+0x80>
 51c:	0c 94 06 04 	jmp	0x80c	; 0x80c <__fp_zero>
 520:	0e f4       	brtc	.+2      	; 0x524 <__addsf3x+0x20>
 522:	e0 95       	com	r30
 524:	0b 2e       	mov	r0, r27
 526:	ba 2f       	mov	r27, r26
 528:	a0 2d       	mov	r26, r0
 52a:	0b 01       	movw	r0, r22
 52c:	b9 01       	movw	r22, r18
 52e:	90 01       	movw	r18, r0
 530:	0c 01       	movw	r0, r24
 532:	ca 01       	movw	r24, r20
 534:	a0 01       	movw	r20, r0
 536:	11 24       	eor	r1, r1
 538:	ff 27       	eor	r31, r31
 53a:	59 1b       	sub	r21, r25
 53c:	99 f0       	breq	.+38     	; 0x564 <__addsf3x+0x60>
 53e:	59 3f       	cpi	r21, 0xF9	; 249
 540:	50 f4       	brcc	.+20     	; 0x556 <__addsf3x+0x52>
 542:	50 3e       	cpi	r21, 0xE0	; 224
 544:	68 f1       	brcs	.+90     	; 0x5a0 <__addsf3x+0x9c>
 546:	1a 16       	cp	r1, r26
 548:	f0 40       	sbci	r31, 0x00	; 0
 54a:	a2 2f       	mov	r26, r18
 54c:	23 2f       	mov	r18, r19
 54e:	34 2f       	mov	r19, r20
 550:	44 27       	eor	r20, r20
 552:	58 5f       	subi	r21, 0xF8	; 248
 554:	f3 cf       	rjmp	.-26     	; 0x53c <__addsf3x+0x38>
 556:	46 95       	lsr	r20
 558:	37 95       	ror	r19
 55a:	27 95       	ror	r18
 55c:	a7 95       	ror	r26
 55e:	f0 40       	sbci	r31, 0x00	; 0
 560:	53 95       	inc	r21
 562:	c9 f7       	brne	.-14     	; 0x556 <__addsf3x+0x52>
 564:	7e f4       	brtc	.+30     	; 0x584 <__addsf3x+0x80>
 566:	1f 16       	cp	r1, r31
 568:	ba 0b       	sbc	r27, r26
 56a:	62 0b       	sbc	r22, r18
 56c:	73 0b       	sbc	r23, r19
 56e:	84 0b       	sbc	r24, r20
 570:	ba f0       	brmi	.+46     	; 0x5a0 <__addsf3x+0x9c>
 572:	91 50       	subi	r25, 0x01	; 1
 574:	a1 f0       	breq	.+40     	; 0x59e <__addsf3x+0x9a>
 576:	ff 0f       	add	r31, r31
 578:	bb 1f       	adc	r27, r27
 57a:	66 1f       	adc	r22, r22
 57c:	77 1f       	adc	r23, r23
 57e:	88 1f       	adc	r24, r24
 580:	c2 f7       	brpl	.-16     	; 0x572 <__addsf3x+0x6e>
 582:	0e c0       	rjmp	.+28     	; 0x5a0 <__addsf3x+0x9c>
 584:	ba 0f       	add	r27, r26
 586:	62 1f       	adc	r22, r18
 588:	73 1f       	adc	r23, r19
 58a:	84 1f       	adc	r24, r20
 58c:	48 f4       	brcc	.+18     	; 0x5a0 <__addsf3x+0x9c>
 58e:	87 95       	ror	r24
 590:	77 95       	ror	r23
 592:	67 95       	ror	r22
 594:	b7 95       	ror	r27
 596:	f7 95       	ror	r31
 598:	9e 3f       	cpi	r25, 0xFE	; 254
 59a:	08 f0       	brcs	.+2      	; 0x59e <__addsf3x+0x9a>
 59c:	b0 cf       	rjmp	.-160    	; 0x4fe <__addsf3+0x28>
 59e:	93 95       	inc	r25
 5a0:	88 0f       	add	r24, r24
 5a2:	08 f0       	brcs	.+2      	; 0x5a6 <__addsf3x+0xa2>
 5a4:	99 27       	eor	r25, r25
 5a6:	ee 0f       	add	r30, r30
 5a8:	97 95       	ror	r25
 5aa:	87 95       	ror	r24
 5ac:	08 95       	ret

000005ae <__divsf3>:
 5ae:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <__divsf3x>
 5b2:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <__fp_round>
 5b6:	0e 94 cc 03 	call	0x798	; 0x798 <__fp_pscB>
 5ba:	58 f0       	brcs	.+22     	; 0x5d2 <__divsf3+0x24>
 5bc:	0e 94 c5 03 	call	0x78a	; 0x78a <__fp_pscA>
 5c0:	40 f0       	brcs	.+16     	; 0x5d2 <__divsf3+0x24>
 5c2:	29 f4       	brne	.+10     	; 0x5ce <__divsf3+0x20>
 5c4:	5f 3f       	cpi	r21, 0xFF	; 255
 5c6:	29 f0       	breq	.+10     	; 0x5d2 <__divsf3+0x24>
 5c8:	0c 94 bc 03 	jmp	0x778	; 0x778 <__fp_inf>
 5cc:	51 11       	cpse	r21, r1
 5ce:	0c 94 07 04 	jmp	0x80e	; 0x80e <__fp_szero>
 5d2:	0c 94 c2 03 	jmp	0x784	; 0x784 <__fp_nan>

000005d6 <__divsf3x>:
 5d6:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_split3>
 5da:	68 f3       	brcs	.-38     	; 0x5b6 <__divsf3+0x8>

000005dc <__divsf3_pse>:
 5dc:	99 23       	and	r25, r25
 5de:	b1 f3       	breq	.-20     	; 0x5cc <__divsf3+0x1e>
 5e0:	55 23       	and	r21, r21
 5e2:	91 f3       	breq	.-28     	; 0x5c8 <__divsf3+0x1a>
 5e4:	95 1b       	sub	r25, r21
 5e6:	55 0b       	sbc	r21, r21
 5e8:	bb 27       	eor	r27, r27
 5ea:	aa 27       	eor	r26, r26
 5ec:	62 17       	cp	r22, r18
 5ee:	73 07       	cpc	r23, r19
 5f0:	84 07       	cpc	r24, r20
 5f2:	38 f0       	brcs	.+14     	; 0x602 <__divsf3_pse+0x26>
 5f4:	9f 5f       	subi	r25, 0xFF	; 255
 5f6:	5f 4f       	sbci	r21, 0xFF	; 255
 5f8:	22 0f       	add	r18, r18
 5fa:	33 1f       	adc	r19, r19
 5fc:	44 1f       	adc	r20, r20
 5fe:	aa 1f       	adc	r26, r26
 600:	a9 f3       	breq	.-22     	; 0x5ec <__divsf3_pse+0x10>
 602:	35 d0       	rcall	.+106    	; 0x66e <__divsf3_pse+0x92>
 604:	0e 2e       	mov	r0, r30
 606:	3a f0       	brmi	.+14     	; 0x616 <__divsf3_pse+0x3a>
 608:	e0 e8       	ldi	r30, 0x80	; 128
 60a:	32 d0       	rcall	.+100    	; 0x670 <__divsf3_pse+0x94>
 60c:	91 50       	subi	r25, 0x01	; 1
 60e:	50 40       	sbci	r21, 0x00	; 0
 610:	e6 95       	lsr	r30
 612:	00 1c       	adc	r0, r0
 614:	ca f7       	brpl	.-14     	; 0x608 <__divsf3_pse+0x2c>
 616:	2b d0       	rcall	.+86     	; 0x66e <__divsf3_pse+0x92>
 618:	fe 2f       	mov	r31, r30
 61a:	29 d0       	rcall	.+82     	; 0x66e <__divsf3_pse+0x92>
 61c:	66 0f       	add	r22, r22
 61e:	77 1f       	adc	r23, r23
 620:	88 1f       	adc	r24, r24
 622:	bb 1f       	adc	r27, r27
 624:	26 17       	cp	r18, r22
 626:	37 07       	cpc	r19, r23
 628:	48 07       	cpc	r20, r24
 62a:	ab 07       	cpc	r26, r27
 62c:	b0 e8       	ldi	r27, 0x80	; 128
 62e:	09 f0       	breq	.+2      	; 0x632 <__divsf3_pse+0x56>
 630:	bb 0b       	sbc	r27, r27
 632:	80 2d       	mov	r24, r0
 634:	bf 01       	movw	r22, r30
 636:	ff 27       	eor	r31, r31
 638:	93 58       	subi	r25, 0x83	; 131
 63a:	5f 4f       	sbci	r21, 0xFF	; 255
 63c:	3a f0       	brmi	.+14     	; 0x64c <__divsf3_pse+0x70>
 63e:	9e 3f       	cpi	r25, 0xFE	; 254
 640:	51 05       	cpc	r21, r1
 642:	78 f0       	brcs	.+30     	; 0x662 <__divsf3_pse+0x86>
 644:	0c 94 bc 03 	jmp	0x778	; 0x778 <__fp_inf>
 648:	0c 94 07 04 	jmp	0x80e	; 0x80e <__fp_szero>
 64c:	5f 3f       	cpi	r21, 0xFF	; 255
 64e:	e4 f3       	brlt	.-8      	; 0x648 <__divsf3_pse+0x6c>
 650:	98 3e       	cpi	r25, 0xE8	; 232
 652:	d4 f3       	brlt	.-12     	; 0x648 <__divsf3_pse+0x6c>
 654:	86 95       	lsr	r24
 656:	77 95       	ror	r23
 658:	67 95       	ror	r22
 65a:	b7 95       	ror	r27
 65c:	f7 95       	ror	r31
 65e:	9f 5f       	subi	r25, 0xFF	; 255
 660:	c9 f7       	brne	.-14     	; 0x654 <__divsf3_pse+0x78>
 662:	88 0f       	add	r24, r24
 664:	91 1d       	adc	r25, r1
 666:	96 95       	lsr	r25
 668:	87 95       	ror	r24
 66a:	97 f9       	bld	r25, 7
 66c:	08 95       	ret
 66e:	e1 e0       	ldi	r30, 0x01	; 1
 670:	66 0f       	add	r22, r22
 672:	77 1f       	adc	r23, r23
 674:	88 1f       	adc	r24, r24
 676:	bb 1f       	adc	r27, r27
 678:	62 17       	cp	r22, r18
 67a:	73 07       	cpc	r23, r19
 67c:	84 07       	cpc	r24, r20
 67e:	ba 07       	cpc	r27, r26
 680:	20 f0       	brcs	.+8      	; 0x68a <__divsf3_pse+0xae>
 682:	62 1b       	sub	r22, r18
 684:	73 0b       	sbc	r23, r19
 686:	84 0b       	sbc	r24, r20
 688:	ba 0b       	sbc	r27, r26
 68a:	ee 1f       	adc	r30, r30
 68c:	88 f7       	brcc	.-30     	; 0x670 <__divsf3_pse+0x94>
 68e:	e0 95       	com	r30
 690:	08 95       	ret

00000692 <__fixsfsi>:
 692:	0e 94 50 03 	call	0x6a0	; 0x6a0 <__fixunssfsi>
 696:	68 94       	set
 698:	b1 11       	cpse	r27, r1
 69a:	0c 94 07 04 	jmp	0x80e	; 0x80e <__fp_szero>
 69e:	08 95       	ret

000006a0 <__fixunssfsi>:
 6a0:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fp_splitA>
 6a4:	88 f0       	brcs	.+34     	; 0x6c8 <__fixunssfsi+0x28>
 6a6:	9f 57       	subi	r25, 0x7F	; 127
 6a8:	98 f0       	brcs	.+38     	; 0x6d0 <__fixunssfsi+0x30>
 6aa:	b9 2f       	mov	r27, r25
 6ac:	99 27       	eor	r25, r25
 6ae:	b7 51       	subi	r27, 0x17	; 23
 6b0:	b0 f0       	brcs	.+44     	; 0x6de <__fixunssfsi+0x3e>
 6b2:	e1 f0       	breq	.+56     	; 0x6ec <__fixunssfsi+0x4c>
 6b4:	66 0f       	add	r22, r22
 6b6:	77 1f       	adc	r23, r23
 6b8:	88 1f       	adc	r24, r24
 6ba:	99 1f       	adc	r25, r25
 6bc:	1a f0       	brmi	.+6      	; 0x6c4 <__fixunssfsi+0x24>
 6be:	ba 95       	dec	r27
 6c0:	c9 f7       	brne	.-14     	; 0x6b4 <__fixunssfsi+0x14>
 6c2:	14 c0       	rjmp	.+40     	; 0x6ec <__fixunssfsi+0x4c>
 6c4:	b1 30       	cpi	r27, 0x01	; 1
 6c6:	91 f0       	breq	.+36     	; 0x6ec <__fixunssfsi+0x4c>
 6c8:	0e 94 06 04 	call	0x80c	; 0x80c <__fp_zero>
 6cc:	b1 e0       	ldi	r27, 0x01	; 1
 6ce:	08 95       	ret
 6d0:	0c 94 06 04 	jmp	0x80c	; 0x80c <__fp_zero>
 6d4:	67 2f       	mov	r22, r23
 6d6:	78 2f       	mov	r23, r24
 6d8:	88 27       	eor	r24, r24
 6da:	b8 5f       	subi	r27, 0xF8	; 248
 6dc:	39 f0       	breq	.+14     	; 0x6ec <__fixunssfsi+0x4c>
 6de:	b9 3f       	cpi	r27, 0xF9	; 249
 6e0:	cc f3       	brlt	.-14     	; 0x6d4 <__fixunssfsi+0x34>
 6e2:	86 95       	lsr	r24
 6e4:	77 95       	ror	r23
 6e6:	67 95       	ror	r22
 6e8:	b3 95       	inc	r27
 6ea:	d9 f7       	brne	.-10     	; 0x6e2 <__fixunssfsi+0x42>
 6ec:	3e f4       	brtc	.+14     	; 0x6fc <__fixunssfsi+0x5c>
 6ee:	90 95       	com	r25
 6f0:	80 95       	com	r24
 6f2:	70 95       	com	r23
 6f4:	61 95       	neg	r22
 6f6:	7f 4f       	sbci	r23, 0xFF	; 255
 6f8:	8f 4f       	sbci	r24, 0xFF	; 255
 6fa:	9f 4f       	sbci	r25, 0xFF	; 255
 6fc:	08 95       	ret

000006fe <__floatunsisf>:
 6fe:	e8 94       	clt
 700:	09 c0       	rjmp	.+18     	; 0x714 <__floatsisf+0x12>

00000702 <__floatsisf>:
 702:	97 fb       	bst	r25, 7
 704:	3e f4       	brtc	.+14     	; 0x714 <__floatsisf+0x12>
 706:	90 95       	com	r25
 708:	80 95       	com	r24
 70a:	70 95       	com	r23
 70c:	61 95       	neg	r22
 70e:	7f 4f       	sbci	r23, 0xFF	; 255
 710:	8f 4f       	sbci	r24, 0xFF	; 255
 712:	9f 4f       	sbci	r25, 0xFF	; 255
 714:	99 23       	and	r25, r25
 716:	a9 f0       	breq	.+42     	; 0x742 <__floatsisf+0x40>
 718:	f9 2f       	mov	r31, r25
 71a:	96 e9       	ldi	r25, 0x96	; 150
 71c:	bb 27       	eor	r27, r27
 71e:	93 95       	inc	r25
 720:	f6 95       	lsr	r31
 722:	87 95       	ror	r24
 724:	77 95       	ror	r23
 726:	67 95       	ror	r22
 728:	b7 95       	ror	r27
 72a:	f1 11       	cpse	r31, r1
 72c:	f8 cf       	rjmp	.-16     	; 0x71e <__floatsisf+0x1c>
 72e:	fa f4       	brpl	.+62     	; 0x76e <__floatsisf+0x6c>
 730:	bb 0f       	add	r27, r27
 732:	11 f4       	brne	.+4      	; 0x738 <__floatsisf+0x36>
 734:	60 ff       	sbrs	r22, 0
 736:	1b c0       	rjmp	.+54     	; 0x76e <__floatsisf+0x6c>
 738:	6f 5f       	subi	r22, 0xFF	; 255
 73a:	7f 4f       	sbci	r23, 0xFF	; 255
 73c:	8f 4f       	sbci	r24, 0xFF	; 255
 73e:	9f 4f       	sbci	r25, 0xFF	; 255
 740:	16 c0       	rjmp	.+44     	; 0x76e <__floatsisf+0x6c>
 742:	88 23       	and	r24, r24
 744:	11 f0       	breq	.+4      	; 0x74a <__floatsisf+0x48>
 746:	96 e9       	ldi	r25, 0x96	; 150
 748:	11 c0       	rjmp	.+34     	; 0x76c <__floatsisf+0x6a>
 74a:	77 23       	and	r23, r23
 74c:	21 f0       	breq	.+8      	; 0x756 <__floatsisf+0x54>
 74e:	9e e8       	ldi	r25, 0x8E	; 142
 750:	87 2f       	mov	r24, r23
 752:	76 2f       	mov	r23, r22
 754:	05 c0       	rjmp	.+10     	; 0x760 <__floatsisf+0x5e>
 756:	66 23       	and	r22, r22
 758:	71 f0       	breq	.+28     	; 0x776 <__floatsisf+0x74>
 75a:	96 e8       	ldi	r25, 0x86	; 134
 75c:	86 2f       	mov	r24, r22
 75e:	70 e0       	ldi	r23, 0x00	; 0
 760:	60 e0       	ldi	r22, 0x00	; 0
 762:	2a f0       	brmi	.+10     	; 0x76e <__floatsisf+0x6c>
 764:	9a 95       	dec	r25
 766:	66 0f       	add	r22, r22
 768:	77 1f       	adc	r23, r23
 76a:	88 1f       	adc	r24, r24
 76c:	da f7       	brpl	.-10     	; 0x764 <__floatsisf+0x62>
 76e:	88 0f       	add	r24, r24
 770:	96 95       	lsr	r25
 772:	87 95       	ror	r24
 774:	97 f9       	bld	r25, 7
 776:	08 95       	ret

00000778 <__fp_inf>:
 778:	97 f9       	bld	r25, 7
 77a:	9f 67       	ori	r25, 0x7F	; 127
 77c:	80 e8       	ldi	r24, 0x80	; 128
 77e:	70 e0       	ldi	r23, 0x00	; 0
 780:	60 e0       	ldi	r22, 0x00	; 0
 782:	08 95       	ret

00000784 <__fp_nan>:
 784:	9f ef       	ldi	r25, 0xFF	; 255
 786:	80 ec       	ldi	r24, 0xC0	; 192
 788:	08 95       	ret

0000078a <__fp_pscA>:
 78a:	00 24       	eor	r0, r0
 78c:	0a 94       	dec	r0
 78e:	16 16       	cp	r1, r22
 790:	17 06       	cpc	r1, r23
 792:	18 06       	cpc	r1, r24
 794:	09 06       	cpc	r0, r25
 796:	08 95       	ret

00000798 <__fp_pscB>:
 798:	00 24       	eor	r0, r0
 79a:	0a 94       	dec	r0
 79c:	12 16       	cp	r1, r18
 79e:	13 06       	cpc	r1, r19
 7a0:	14 06       	cpc	r1, r20
 7a2:	05 06       	cpc	r0, r21
 7a4:	08 95       	ret

000007a6 <__fp_round>:
 7a6:	09 2e       	mov	r0, r25
 7a8:	03 94       	inc	r0
 7aa:	00 0c       	add	r0, r0
 7ac:	11 f4       	brne	.+4      	; 0x7b2 <__fp_round+0xc>
 7ae:	88 23       	and	r24, r24
 7b0:	52 f0       	brmi	.+20     	; 0x7c6 <__fp_round+0x20>
 7b2:	bb 0f       	add	r27, r27
 7b4:	40 f4       	brcc	.+16     	; 0x7c6 <__fp_round+0x20>
 7b6:	bf 2b       	or	r27, r31
 7b8:	11 f4       	brne	.+4      	; 0x7be <__fp_round+0x18>
 7ba:	60 ff       	sbrs	r22, 0
 7bc:	04 c0       	rjmp	.+8      	; 0x7c6 <__fp_round+0x20>
 7be:	6f 5f       	subi	r22, 0xFF	; 255
 7c0:	7f 4f       	sbci	r23, 0xFF	; 255
 7c2:	8f 4f       	sbci	r24, 0xFF	; 255
 7c4:	9f 4f       	sbci	r25, 0xFF	; 255
 7c6:	08 95       	ret

000007c8 <__fp_split3>:
 7c8:	57 fd       	sbrc	r21, 7
 7ca:	90 58       	subi	r25, 0x80	; 128
 7cc:	44 0f       	add	r20, r20
 7ce:	55 1f       	adc	r21, r21
 7d0:	59 f0       	breq	.+22     	; 0x7e8 <__fp_splitA+0x10>
 7d2:	5f 3f       	cpi	r21, 0xFF	; 255
 7d4:	71 f0       	breq	.+28     	; 0x7f2 <__fp_splitA+0x1a>
 7d6:	47 95       	ror	r20

000007d8 <__fp_splitA>:
 7d8:	88 0f       	add	r24, r24
 7da:	97 fb       	bst	r25, 7
 7dc:	99 1f       	adc	r25, r25
 7de:	61 f0       	breq	.+24     	; 0x7f8 <__fp_splitA+0x20>
 7e0:	9f 3f       	cpi	r25, 0xFF	; 255
 7e2:	79 f0       	breq	.+30     	; 0x802 <__fp_splitA+0x2a>
 7e4:	87 95       	ror	r24
 7e6:	08 95       	ret
 7e8:	12 16       	cp	r1, r18
 7ea:	13 06       	cpc	r1, r19
 7ec:	14 06       	cpc	r1, r20
 7ee:	55 1f       	adc	r21, r21
 7f0:	f2 cf       	rjmp	.-28     	; 0x7d6 <__fp_split3+0xe>
 7f2:	46 95       	lsr	r20
 7f4:	f1 df       	rcall	.-30     	; 0x7d8 <__fp_splitA>
 7f6:	08 c0       	rjmp	.+16     	; 0x808 <__fp_splitA+0x30>
 7f8:	16 16       	cp	r1, r22
 7fa:	17 06       	cpc	r1, r23
 7fc:	18 06       	cpc	r1, r24
 7fe:	99 1f       	adc	r25, r25
 800:	f1 cf       	rjmp	.-30     	; 0x7e4 <__fp_splitA+0xc>
 802:	86 95       	lsr	r24
 804:	71 05       	cpc	r23, r1
 806:	61 05       	cpc	r22, r1
 808:	08 94       	sec
 80a:	08 95       	ret

0000080c <__fp_zero>:
 80c:	e8 94       	clt

0000080e <__fp_szero>:
 80e:	bb 27       	eor	r27, r27
 810:	66 27       	eor	r22, r22
 812:	77 27       	eor	r23, r23
 814:	cb 01       	movw	r24, r22
 816:	97 f9       	bld	r25, 7
 818:	08 95       	ret

0000081a <__mulsf3>:
 81a:	0e 94 20 04 	call	0x840	; 0x840 <__mulsf3x>
 81e:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <__fp_round>
 822:	0e 94 c5 03 	call	0x78a	; 0x78a <__fp_pscA>
 826:	38 f0       	brcs	.+14     	; 0x836 <__mulsf3+0x1c>
 828:	0e 94 cc 03 	call	0x798	; 0x798 <__fp_pscB>
 82c:	20 f0       	brcs	.+8      	; 0x836 <__mulsf3+0x1c>
 82e:	95 23       	and	r25, r21
 830:	11 f0       	breq	.+4      	; 0x836 <__mulsf3+0x1c>
 832:	0c 94 bc 03 	jmp	0x778	; 0x778 <__fp_inf>
 836:	0c 94 c2 03 	jmp	0x784	; 0x784 <__fp_nan>
 83a:	11 24       	eor	r1, r1
 83c:	0c 94 07 04 	jmp	0x80e	; 0x80e <__fp_szero>

00000840 <__mulsf3x>:
 840:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__fp_split3>
 844:	70 f3       	brcs	.-36     	; 0x822 <__mulsf3+0x8>

00000846 <__mulsf3_pse>:
 846:	95 9f       	mul	r25, r21
 848:	c1 f3       	breq	.-16     	; 0x83a <__mulsf3+0x20>
 84a:	95 0f       	add	r25, r21
 84c:	50 e0       	ldi	r21, 0x00	; 0
 84e:	55 1f       	adc	r21, r21
 850:	62 9f       	mul	r22, r18
 852:	f0 01       	movw	r30, r0
 854:	72 9f       	mul	r23, r18
 856:	bb 27       	eor	r27, r27
 858:	f0 0d       	add	r31, r0
 85a:	b1 1d       	adc	r27, r1
 85c:	63 9f       	mul	r22, r19
 85e:	aa 27       	eor	r26, r26
 860:	f0 0d       	add	r31, r0
 862:	b1 1d       	adc	r27, r1
 864:	aa 1f       	adc	r26, r26
 866:	64 9f       	mul	r22, r20
 868:	66 27       	eor	r22, r22
 86a:	b0 0d       	add	r27, r0
 86c:	a1 1d       	adc	r26, r1
 86e:	66 1f       	adc	r22, r22
 870:	82 9f       	mul	r24, r18
 872:	22 27       	eor	r18, r18
 874:	b0 0d       	add	r27, r0
 876:	a1 1d       	adc	r26, r1
 878:	62 1f       	adc	r22, r18
 87a:	73 9f       	mul	r23, r19
 87c:	b0 0d       	add	r27, r0
 87e:	a1 1d       	adc	r26, r1
 880:	62 1f       	adc	r22, r18
 882:	83 9f       	mul	r24, r19
 884:	a0 0d       	add	r26, r0
 886:	61 1d       	adc	r22, r1
 888:	22 1f       	adc	r18, r18
 88a:	74 9f       	mul	r23, r20
 88c:	33 27       	eor	r19, r19
 88e:	a0 0d       	add	r26, r0
 890:	61 1d       	adc	r22, r1
 892:	23 1f       	adc	r18, r19
 894:	84 9f       	mul	r24, r20
 896:	60 0d       	add	r22, r0
 898:	21 1d       	adc	r18, r1
 89a:	82 2f       	mov	r24, r18
 89c:	76 2f       	mov	r23, r22
 89e:	6a 2f       	mov	r22, r26
 8a0:	11 24       	eor	r1, r1
 8a2:	9f 57       	subi	r25, 0x7F	; 127
 8a4:	50 40       	sbci	r21, 0x00	; 0
 8a6:	9a f0       	brmi	.+38     	; 0x8ce <__mulsf3_pse+0x88>
 8a8:	f1 f0       	breq	.+60     	; 0x8e6 <__mulsf3_pse+0xa0>
 8aa:	88 23       	and	r24, r24
 8ac:	4a f0       	brmi	.+18     	; 0x8c0 <__mulsf3_pse+0x7a>
 8ae:	ee 0f       	add	r30, r30
 8b0:	ff 1f       	adc	r31, r31
 8b2:	bb 1f       	adc	r27, r27
 8b4:	66 1f       	adc	r22, r22
 8b6:	77 1f       	adc	r23, r23
 8b8:	88 1f       	adc	r24, r24
 8ba:	91 50       	subi	r25, 0x01	; 1
 8bc:	50 40       	sbci	r21, 0x00	; 0
 8be:	a9 f7       	brne	.-22     	; 0x8aa <__mulsf3_pse+0x64>
 8c0:	9e 3f       	cpi	r25, 0xFE	; 254
 8c2:	51 05       	cpc	r21, r1
 8c4:	80 f0       	brcs	.+32     	; 0x8e6 <__mulsf3_pse+0xa0>
 8c6:	0c 94 bc 03 	jmp	0x778	; 0x778 <__fp_inf>
 8ca:	0c 94 07 04 	jmp	0x80e	; 0x80e <__fp_szero>
 8ce:	5f 3f       	cpi	r21, 0xFF	; 255
 8d0:	e4 f3       	brlt	.-8      	; 0x8ca <__mulsf3_pse+0x84>
 8d2:	98 3e       	cpi	r25, 0xE8	; 232
 8d4:	d4 f3       	brlt	.-12     	; 0x8ca <__mulsf3_pse+0x84>
 8d6:	86 95       	lsr	r24
 8d8:	77 95       	ror	r23
 8da:	67 95       	ror	r22
 8dc:	b7 95       	ror	r27
 8de:	f7 95       	ror	r31
 8e0:	e7 95       	ror	r30
 8e2:	9f 5f       	subi	r25, 0xFF	; 255
 8e4:	c1 f7       	brne	.-16     	; 0x8d6 <__mulsf3_pse+0x90>
 8e6:	fe 2b       	or	r31, r30
 8e8:	88 0f       	add	r24, r24
 8ea:	91 1d       	adc	r25, r1
 8ec:	96 95       	lsr	r25
 8ee:	87 95       	ror	r24
 8f0:	97 f9       	bld	r25, 7
 8f2:	08 95       	ret

000008f4 <_exit>:
 8f4:	f8 94       	cli

000008f6 <__stop_program>:
 8f6:	ff cf       	rjmp	.-2      	; 0x8f6 <__stop_program>
