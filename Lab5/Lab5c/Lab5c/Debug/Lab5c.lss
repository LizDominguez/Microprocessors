
Lab5c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000092e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  00000982  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000982  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  000009f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00004886  00000000  00000000  00000a64  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00003d0e  00000000  00000000  000052ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000712  00000000  00000000  00008ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000114  00000000  00000000  0000970c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002e43  00000000  00000000  00009820  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000170  00000000  00000000  0000c663  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  0000c7d3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__ctors_end>
   4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
   8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
   c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  10:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  14:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  18:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  1c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  20:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  24:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  28:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  2c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  30:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  34:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  38:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  3c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  40:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  44:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  48:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  4c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  50:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  54:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  58:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  5c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  60:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  64:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  68:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  6c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  70:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  74:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  78:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  7c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  80:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  84:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  88:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  8c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  90:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  94:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  98:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  9c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  a0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  a4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  a8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  ac:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  b0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  b4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  b8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  bc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  c0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  c4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  c8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  cc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  d0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  d4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  d8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  dc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  e0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  e4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  e8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  ec:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  f0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  f4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  f8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
  fc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 100:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 104:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 108:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 10c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 110:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 114:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 118:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 11c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 120:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 124:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 128:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 12c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 130:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 134:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 138:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 13c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 140:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 144:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 148:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 14c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 150:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 154:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 158:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 15c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 160:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 164:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 168:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 16c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 170:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 174:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 178:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 17c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 180:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 184:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 188:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 18c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 190:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 194:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 198:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 19c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1a0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1a4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1a8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1ac:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1b0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1b4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1b8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1bc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1c0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1c4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1c8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1cc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1d0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1d4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1d8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1dc:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1e0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1e4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1e8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1ec:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1f0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1f4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
 1f8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59
 214:	0e 94 4f 02 	call	0x49e	; 0x49e <main>
 218:	0c 94 95 04 	jmp	0x92a	; 0x92a <_exit>

0000021c <__bad_interrupt>:
 21c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000220 <CLK_init>:

void delay_50us(void)
{
	volatile uint32_t ticks;				//Volatile prevents compiler optimization
	for(ticks = 0; ticks <= 200; ticks++);	//increment 2e6 times -> ~ 1 sec
}
 220:	82 e0       	ldi	r24, 0x02	; 2
 222:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
 226:	e0 e5       	ldi	r30, 0x50	; 80
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	81 81       	ldd	r24, Z+1	; 0x01
 22c:	81 ff       	sbrs	r24, 1
 22e:	fd cf       	rjmp	.-6      	; 0x22a <CLK_init+0xa>
 230:	88 ed       	ldi	r24, 0xD8	; 216
 232:	84 bf       	out	0x34, r24	; 52
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
 23a:	08 95       	ret

0000023c <USART_init>:
 23c:	e0 ea       	ldi	r30, 0xA0	; 160
 23e:	f9 e0       	ldi	r31, 0x09	; 9
 240:	89 e8       	ldi	r24, 0x89	; 137
 242:	86 83       	std	Z+6, r24	; 0x06
 244:	80 ef       	ldi	r24, 0xF0	; 240
 246:	87 83       	std	Z+7, r24	; 0x07
 248:	88 e1       	ldi	r24, 0x18	; 24
 24a:	84 83       	std	Z+4, r24	; 0x04
 24c:	8b e0       	ldi	r24, 0x0B	; 11
 24e:	85 83       	std	Z+5, r24	; 0x05
 250:	08 95       	ret

00000252 <IO_init>:
 252:	e0 e6       	ldi	r30, 0x60	; 96
 254:	f6 e0       	ldi	r31, 0x06	; 6
 256:	88 ef       	ldi	r24, 0xF8	; 248
 258:	81 83       	std	Z+1, r24	; 0x01
 25a:	85 83       	std	Z+5, r24	; 0x05
 25c:	84 e0       	ldi	r24, 0x04	; 4
 25e:	82 83       	std	Z+2, r24	; 0x02
 260:	e0 ec       	ldi	r30, 0xC0	; 192
 262:	f7 e0       	ldi	r31, 0x07	; 7
 264:	8a e0       	ldi	r24, 0x0A	; 10
 266:	81 83       	std	Z+1, r24	; 0x01
 268:	86 83       	std	Z+6, r24	; 0x06
 26a:	08 95       	ret

0000026c <ADC_init>:
 26c:	10 92 00 06 	sts	0x0600, r1	; 0x800600 <__TEXT_REGION_LENGTH__+0x700600>
 270:	e0 e0       	ldi	r30, 0x00	; 0
 272:	f2 e0       	ldi	r31, 0x02	; 2
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	80 83       	st	Z, r24
 278:	9c e0       	ldi	r25, 0x0C	; 12
 27a:	91 83       	std	Z+1, r25	; 0x01
 27c:	90 e3       	ldi	r25, 0x30	; 48
 27e:	92 83       	std	Z+2, r25	; 0x02
 280:	93 e8       	ldi	r25, 0x83	; 131
 282:	90 a3       	std	Z+32, r25	; 0x20
 284:	9a e0       	ldi	r25, 0x0A	; 10
 286:	91 a3       	std	Z+33, r25	; 0x21
 288:	86 83       	std	Z+6, r24	; 0x06
 28a:	08 95       	ret

0000028c <ADC_read>:
 28c:	e0 e0       	ldi	r30, 0x00	; 0
 28e:	f2 e0       	ldi	r31, 0x02	; 2
 290:	80 a1       	ldd	r24, Z+32	; 0x20
 292:	80 68       	ori	r24, 0x80	; 128
 294:	80 a3       	std	Z+32, r24	; 0x20
 296:	83 a1       	ldd	r24, Z+35	; 0x23
 298:	80 ff       	sbrs	r24, 0
 29a:	fd cf       	rjmp	.-6      	; 0x296 <ADC_read+0xa>
 29c:	e0 e0       	ldi	r30, 0x00	; 0
 29e:	f2 e0       	ldi	r31, 0x02	; 2
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	86 83       	std	Z+6, r24	; 0x06
 2a4:	84 a1       	ldd	r24, Z+36	; 0x24
 2a6:	95 a1       	ldd	r25, Z+37	; 0x25
 2a8:	08 95       	ret

000002aa <send_char>:
 2aa:	e0 ea       	ldi	r30, 0xA0	; 160
 2ac:	f9 e0       	ldi	r31, 0x09	; 9
 2ae:	91 81       	ldd	r25, Z+1	; 0x01
 2b0:	95 ff       	sbrs	r25, 5
 2b2:	fd cf       	rjmp	.-6      	; 0x2ae <send_char+0x4>
 2b4:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <__TEXT_REGION_LENGTH__+0x7009a0>
 2b8:	08 95       	ret

000002ba <delay_1s>:

void delay_1s(void)
{
 2ba:	cf 93       	push	r28
 2bc:	df 93       	push	r29
 2be:	00 d0       	rcall	.+0      	; 0x2c0 <delay_1s+0x6>
 2c0:	1f 92       	push	r1
 2c2:	cd b7       	in	r28, 0x3d	; 61
 2c4:	de b7       	in	r29, 0x3e	; 62
	volatile uint32_t ticks;				//Volatile prevents compiler optimization
	for(ticks = 0; ticks <= 2000000; ticks++);	//increment 2e6 times -> ~ 1 sec
 2c6:	19 82       	std	Y+1, r1	; 0x01
 2c8:	1a 82       	std	Y+2, r1	; 0x02
 2ca:	1b 82       	std	Y+3, r1	; 0x03
 2cc:	1c 82       	std	Y+4, r1	; 0x04
 2ce:	89 81       	ldd	r24, Y+1	; 0x01
 2d0:	9a 81       	ldd	r25, Y+2	; 0x02
 2d2:	ab 81       	ldd	r26, Y+3	; 0x03
 2d4:	bc 81       	ldd	r27, Y+4	; 0x04
 2d6:	81 38       	cpi	r24, 0x81	; 129
 2d8:	94 48       	sbci	r25, 0x84	; 132
 2da:	ae 41       	sbci	r26, 0x1E	; 30
 2dc:	b1 05       	cpc	r27, r1
 2de:	a0 f4       	brcc	.+40     	; 0x308 <delay_1s+0x4e>
 2e0:	89 81       	ldd	r24, Y+1	; 0x01
 2e2:	9a 81       	ldd	r25, Y+2	; 0x02
 2e4:	ab 81       	ldd	r26, Y+3	; 0x03
 2e6:	bc 81       	ldd	r27, Y+4	; 0x04
 2e8:	01 96       	adiw	r24, 0x01	; 1
 2ea:	a1 1d       	adc	r26, r1
 2ec:	b1 1d       	adc	r27, r1
 2ee:	89 83       	std	Y+1, r24	; 0x01
 2f0:	9a 83       	std	Y+2, r25	; 0x02
 2f2:	ab 83       	std	Y+3, r26	; 0x03
 2f4:	bc 83       	std	Y+4, r27	; 0x04
 2f6:	89 81       	ldd	r24, Y+1	; 0x01
 2f8:	9a 81       	ldd	r25, Y+2	; 0x02
 2fa:	ab 81       	ldd	r26, Y+3	; 0x03
 2fc:	bc 81       	ldd	r27, Y+4	; 0x04
 2fe:	81 38       	cpi	r24, 0x81	; 129
 300:	94 48       	sbci	r25, 0x84	; 132
 302:	ae 41       	sbci	r26, 0x1E	; 30
 304:	b1 05       	cpc	r27, r1
 306:	60 f3       	brcs	.-40     	; 0x2e0 <delay_1s+0x26>
}
 308:	24 96       	adiw	r28, 0x04	; 4
 30a:	cd bf       	out	0x3d, r28	; 61
 30c:	de bf       	out	0x3e, r29	; 62
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	08 95       	ret

00000314 <send_Values>:

void send_Values() {
 314:	cf 92       	push	r12
 316:	df 92       	push	r13
 318:	ef 92       	push	r14
 31a:	ff 92       	push	r15
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	00 d0       	rcall	.+0      	; 0x322 <send_Values+0xe>
 322:	00 d0       	rcall	.+0      	; 0x324 <send_Values+0x10>
 324:	cd b7       	in	r28, 0x3d	; 61
 326:	de b7       	in	r29, 0x3e	; 62
	
	//voltVal = (1/50)*adcVal + .0098
	volatile float voltVal = (int8_t)(ADC_read() << 2);
 328:	0e 94 46 01 	call	0x28c	; 0x28c <ADC_read>
 32c:	88 0f       	add	r24, r24
 32e:	88 0f       	add	r24, r24
 330:	68 2f       	mov	r22, r24
 332:	88 0f       	add	r24, r24
 334:	77 0b       	sbc	r23, r23
 336:	88 0b       	sbc	r24, r24
 338:	99 0b       	sbc	r25, r25
 33a:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__floatsisf>
 33e:	69 83       	std	Y+1, r22	; 0x01
 340:	7a 83       	std	Y+2, r23	; 0x02
 342:	8b 83       	std	Y+3, r24	; 0x03
 344:	9c 83       	std	Y+4, r25	; 0x04
	voltVal /= 50;
 346:	69 81       	ldd	r22, Y+1	; 0x01
 348:	7a 81       	ldd	r23, Y+2	; 0x02
 34a:	8b 81       	ldd	r24, Y+3	; 0x03
 34c:	9c 81       	ldd	r25, Y+4	; 0x04
 34e:	20 e0       	ldi	r18, 0x00	; 0
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	48 e4       	ldi	r20, 0x48	; 72
 354:	52 e4       	ldi	r21, 0x42	; 66
 356:	0e 94 c9 02 	call	0x592	; 0x592 <__divsf3>
 35a:	69 83       	std	Y+1, r22	; 0x01
 35c:	7a 83       	std	Y+2, r23	; 0x02
 35e:	8b 83       	std	Y+3, r24	; 0x03
 360:	9c 83       	std	Y+4, r25	; 0x04
	voltVal += .0098;
 362:	69 81       	ldd	r22, Y+1	; 0x01
 364:	7a 81       	ldd	r23, Y+2	; 0x02
 366:	8b 81       	ldd	r24, Y+3	; 0x03
 368:	9c 81       	ldd	r25, Y+4	; 0x04
 36a:	2e e2       	ldi	r18, 0x2E	; 46
 36c:	30 e9       	ldi	r19, 0x90	; 144
 36e:	40 e2       	ldi	r20, 0x20	; 32
 370:	5c e3       	ldi	r21, 0x3C	; 60
 372:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__addsf3>
 376:	69 83       	std	Y+1, r22	; 0x01
 378:	7a 83       	std	Y+2, r23	; 0x02
 37a:	8b 83       	std	Y+3, r24	; 0x03
 37c:	9c 83       	std	Y+4, r25	; 0x04
	volatile int intVal;
	
	if(voltVal >= 0) {
 37e:	69 81       	ldd	r22, Y+1	; 0x01
 380:	7a 81       	ldd	r23, Y+2	; 0x02
 382:	8b 81       	ldd	r24, Y+3	; 0x03
 384:	9c 81       	ldd	r25, Y+4	; 0x04
 386:	20 e0       	ldi	r18, 0x00	; 0
 388:	30 e0       	ldi	r19, 0x00	; 0
 38a:	a9 01       	movw	r20, r18
 38c:	0e 94 ff 03 	call	0x7fe	; 0x7fe <__gesf2>
 390:	88 23       	and	r24, r24
 392:	24 f0       	brlt	.+8      	; 0x39c <send_Values+0x88>
		send_char((char)0x2B);				//+/-
 394:	8b e2       	ldi	r24, 0x2B	; 43
 396:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
 39a:	03 c0       	rjmp	.+6      	; 0x3a2 <send_Values+0x8e>
	}
	
	else send_char((char)0x2D);
 39c:	8d e2       	ldi	r24, 0x2D	; 45
 39e:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	
	intVal = (int)voltVal;					//1st iteration
 3a2:	69 81       	ldd	r22, Y+1	; 0x01
 3a4:	7a 81       	ldd	r23, Y+2	; 0x02
 3a6:	8b 81       	ldd	r24, Y+3	; 0x03
 3a8:	9c 81       	ldd	r25, Y+4	; 0x04
 3aa:	0e 94 3b 03 	call	0x676	; 0x676 <__fixsfsi>
 3ae:	6d 83       	std	Y+5, r22	; 0x05
 3b0:	7e 83       	std	Y+6, r23	; 0x06
	send_char((char)(intVal + '0'));
 3b2:	8d 81       	ldd	r24, Y+5	; 0x05
 3b4:	9e 81       	ldd	r25, Y+6	; 0x06
 3b6:	80 5d       	subi	r24, 0xD0	; 208
 3b8:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)0x2E);					//.
 3bc:	8e e2       	ldi	r24, 0x2E	; 46
 3be:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	
	voltVal = 10*(voltVal - intVal);		//2nd iteration
 3c2:	c9 80       	ldd	r12, Y+1	; 0x01
 3c4:	da 80       	ldd	r13, Y+2	; 0x02
 3c6:	eb 80       	ldd	r14, Y+3	; 0x03
 3c8:	fc 80       	ldd	r15, Y+4	; 0x04
 3ca:	8d 81       	ldd	r24, Y+5	; 0x05
 3cc:	9e 81       	ldd	r25, Y+6	; 0x06
 3ce:	bc 01       	movw	r22, r24
 3d0:	99 0f       	add	r25, r25
 3d2:	88 0b       	sbc	r24, r24
 3d4:	99 0b       	sbc	r25, r25
 3d6:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__floatsisf>
 3da:	9b 01       	movw	r18, r22
 3dc:	ac 01       	movw	r20, r24
 3de:	c7 01       	movw	r24, r14
 3e0:	b6 01       	movw	r22, r12
 3e2:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__subsf3>
 3e6:	20 e0       	ldi	r18, 0x00	; 0
 3e8:	30 e0       	ldi	r19, 0x00	; 0
 3ea:	40 e2       	ldi	r20, 0x20	; 32
 3ec:	51 e4       	ldi	r21, 0x41	; 65
 3ee:	0e 94 04 04 	call	0x808	; 0x808 <__mulsf3>
 3f2:	69 83       	std	Y+1, r22	; 0x01
 3f4:	7a 83       	std	Y+2, r23	; 0x02
 3f6:	8b 83       	std	Y+3, r24	; 0x03
 3f8:	9c 83       	std	Y+4, r25	; 0x04
	intVal = (int)voltVal;
 3fa:	69 81       	ldd	r22, Y+1	; 0x01
 3fc:	7a 81       	ldd	r23, Y+2	; 0x02
 3fe:	8b 81       	ldd	r24, Y+3	; 0x03
 400:	9c 81       	ldd	r25, Y+4	; 0x04
 402:	0e 94 3b 03 	call	0x676	; 0x676 <__fixsfsi>
 406:	6d 83       	std	Y+5, r22	; 0x05
 408:	7e 83       	std	Y+6, r23	; 0x06
	send_char((char)(intVal + '0'));				
 40a:	8d 81       	ldd	r24, Y+5	; 0x05
 40c:	9e 81       	ldd	r25, Y+6	; 0x06
 40e:	80 5d       	subi	r24, 0xD0	; 208
 410:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	
	voltVal = 10*(voltVal - intVal);		//3rd iteration
 414:	c9 80       	ldd	r12, Y+1	; 0x01
 416:	da 80       	ldd	r13, Y+2	; 0x02
 418:	eb 80       	ldd	r14, Y+3	; 0x03
 41a:	fc 80       	ldd	r15, Y+4	; 0x04
 41c:	8d 81       	ldd	r24, Y+5	; 0x05
 41e:	9e 81       	ldd	r25, Y+6	; 0x06
 420:	bc 01       	movw	r22, r24
 422:	99 0f       	add	r25, r25
 424:	88 0b       	sbc	r24, r24
 426:	99 0b       	sbc	r25, r25
 428:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__floatsisf>
 42c:	9b 01       	movw	r18, r22
 42e:	ac 01       	movw	r20, r24
 430:	c7 01       	movw	r24, r14
 432:	b6 01       	movw	r22, r12
 434:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <__subsf3>
 438:	20 e0       	ldi	r18, 0x00	; 0
 43a:	30 e0       	ldi	r19, 0x00	; 0
 43c:	40 e2       	ldi	r20, 0x20	; 32
 43e:	51 e4       	ldi	r21, 0x41	; 65
 440:	0e 94 04 04 	call	0x808	; 0x808 <__mulsf3>
 444:	69 83       	std	Y+1, r22	; 0x01
 446:	7a 83       	std	Y+2, r23	; 0x02
 448:	8b 83       	std	Y+3, r24	; 0x03
 44a:	9c 83       	std	Y+4, r25	; 0x04
	intVal = (int)voltVal;
 44c:	69 81       	ldd	r22, Y+1	; 0x01
 44e:	7a 81       	ldd	r23, Y+2	; 0x02
 450:	8b 81       	ldd	r24, Y+3	; 0x03
 452:	9c 81       	ldd	r25, Y+4	; 0x04
 454:	0e 94 3b 03 	call	0x676	; 0x676 <__fixsfsi>
 458:	6d 83       	std	Y+5, r22	; 0x05
 45a:	7e 83       	std	Y+6, r23	; 0x06
	send_char((char)(intVal + '0'));
 45c:	8d 81       	ldd	r24, Y+5	; 0x05
 45e:	9e 81       	ldd	r25, Y+6	; 0x06
 460:	80 5d       	subi	r24, 0xD0	; 208
 462:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)0x20);					//space
 466:	80 e2       	ldi	r24, 0x20	; 32
 468:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	
	//hex Values
	send_char((char)0x28);					//(
 46c:	88 e2       	ldi	r24, 0x28	; 40
 46e:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)(ADC_read() << 2));
 472:	0e 94 46 01 	call	0x28c	; 0x28c <ADC_read>
 476:	88 0f       	add	r24, r24
 478:	88 0f       	add	r24, r24
 47a:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)0x29);					//)
 47e:	89 e2       	ldi	r24, 0x29	; 41
 480:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	send_char((char)0x20);					//space
 484:	80 e2       	ldi	r24, 0x20	; 32
 486:	0e 94 55 01 	call	0x2aa	; 0x2aa <send_char>
	
	
}
 48a:	26 96       	adiw	r28, 0x06	; 6
 48c:	cd bf       	out	0x3d, r28	; 61
 48e:	de bf       	out	0x3e, r29	; 62
 490:	df 91       	pop	r29
 492:	cf 91       	pop	r28
 494:	ff 90       	pop	r15
 496:	ef 90       	pop	r14
 498:	df 90       	pop	r13
 49a:	cf 90       	pop	r12
 49c:	08 95       	ret

0000049e <main>:


int main(void)
{
   
	CLK_init();
 49e:	0e 94 10 01 	call	0x220	; 0x220 <CLK_init>
    ADC_init();	
 4a2:	0e 94 36 01 	call	0x26c	; 0x26c <ADC_init>
	USART_init();
 4a6:	0e 94 1e 01 	call	0x23c	; 0x23c <USART_init>
	IO_init();     
 4aa:	0e 94 29 01 	call	0x252	; 0x252 <IO_init>

	
    while(1){
		
		send_Values();
 4ae:	0e 94 8a 01 	call	0x314	; 0x314 <send_Values>
		delay_1s();
 4b2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <delay_1s>

	}
 4b6:	fb cf       	rjmp	.-10     	; 0x4ae <main+0x10>

000004b8 <__subsf3>:
 4b8:	50 58       	subi	r21, 0x80	; 128

000004ba <__addsf3>:
 4ba:	bb 27       	eor	r27, r27
 4bc:	aa 27       	eor	r26, r26
 4be:	0e 94 74 02 	call	0x4e8	; 0x4e8 <__addsf3x>
 4c2:	0c 94 c5 03 	jmp	0x78a	; 0x78a <__fp_round>
 4c6:	0e 94 b7 03 	call	0x76e	; 0x76e <__fp_pscA>
 4ca:	38 f0       	brcs	.+14     	; 0x4da <__addsf3+0x20>
 4cc:	0e 94 be 03 	call	0x77c	; 0x77c <__fp_pscB>
 4d0:	20 f0       	brcs	.+8      	; 0x4da <__addsf3+0x20>
 4d2:	39 f4       	brne	.+14     	; 0x4e2 <__addsf3+0x28>
 4d4:	9f 3f       	cpi	r25, 0xFF	; 255
 4d6:	19 f4       	brne	.+6      	; 0x4de <__addsf3+0x24>
 4d8:	26 f4       	brtc	.+8      	; 0x4e2 <__addsf3+0x28>
 4da:	0c 94 b4 03 	jmp	0x768	; 0x768 <__fp_nan>
 4de:	0e f4       	brtc	.+2      	; 0x4e2 <__addsf3+0x28>
 4e0:	e0 95       	com	r30
 4e2:	e7 fb       	bst	r30, 7
 4e4:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__fp_inf>

000004e8 <__addsf3x>:
 4e8:	e9 2f       	mov	r30, r25
 4ea:	0e 94 d6 03 	call	0x7ac	; 0x7ac <__fp_split3>
 4ee:	58 f3       	brcs	.-42     	; 0x4c6 <__addsf3+0xc>
 4f0:	ba 17       	cp	r27, r26
 4f2:	62 07       	cpc	r22, r18
 4f4:	73 07       	cpc	r23, r19
 4f6:	84 07       	cpc	r24, r20
 4f8:	95 07       	cpc	r25, r21
 4fa:	20 f0       	brcs	.+8      	; 0x504 <__addsf3x+0x1c>
 4fc:	79 f4       	brne	.+30     	; 0x51c <__addsf3x+0x34>
 4fe:	a6 f5       	brtc	.+104    	; 0x568 <__addsf3x+0x80>
 500:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_zero>
 504:	0e f4       	brtc	.+2      	; 0x508 <__addsf3x+0x20>
 506:	e0 95       	com	r30
 508:	0b 2e       	mov	r0, r27
 50a:	ba 2f       	mov	r27, r26
 50c:	a0 2d       	mov	r26, r0
 50e:	0b 01       	movw	r0, r22
 510:	b9 01       	movw	r22, r18
 512:	90 01       	movw	r18, r0
 514:	0c 01       	movw	r0, r24
 516:	ca 01       	movw	r24, r20
 518:	a0 01       	movw	r20, r0
 51a:	11 24       	eor	r1, r1
 51c:	ff 27       	eor	r31, r31
 51e:	59 1b       	sub	r21, r25
 520:	99 f0       	breq	.+38     	; 0x548 <__addsf3x+0x60>
 522:	59 3f       	cpi	r21, 0xF9	; 249
 524:	50 f4       	brcc	.+20     	; 0x53a <__addsf3x+0x52>
 526:	50 3e       	cpi	r21, 0xE0	; 224
 528:	68 f1       	brcs	.+90     	; 0x584 <__addsf3x+0x9c>
 52a:	1a 16       	cp	r1, r26
 52c:	f0 40       	sbci	r31, 0x00	; 0
 52e:	a2 2f       	mov	r26, r18
 530:	23 2f       	mov	r18, r19
 532:	34 2f       	mov	r19, r20
 534:	44 27       	eor	r20, r20
 536:	58 5f       	subi	r21, 0xF8	; 248
 538:	f3 cf       	rjmp	.-26     	; 0x520 <__addsf3x+0x38>
 53a:	46 95       	lsr	r20
 53c:	37 95       	ror	r19
 53e:	27 95       	ror	r18
 540:	a7 95       	ror	r26
 542:	f0 40       	sbci	r31, 0x00	; 0
 544:	53 95       	inc	r21
 546:	c9 f7       	brne	.-14     	; 0x53a <__addsf3x+0x52>
 548:	7e f4       	brtc	.+30     	; 0x568 <__addsf3x+0x80>
 54a:	1f 16       	cp	r1, r31
 54c:	ba 0b       	sbc	r27, r26
 54e:	62 0b       	sbc	r22, r18
 550:	73 0b       	sbc	r23, r19
 552:	84 0b       	sbc	r24, r20
 554:	ba f0       	brmi	.+46     	; 0x584 <__addsf3x+0x9c>
 556:	91 50       	subi	r25, 0x01	; 1
 558:	a1 f0       	breq	.+40     	; 0x582 <__addsf3x+0x9a>
 55a:	ff 0f       	add	r31, r31
 55c:	bb 1f       	adc	r27, r27
 55e:	66 1f       	adc	r22, r22
 560:	77 1f       	adc	r23, r23
 562:	88 1f       	adc	r24, r24
 564:	c2 f7       	brpl	.-16     	; 0x556 <__addsf3x+0x6e>
 566:	0e c0       	rjmp	.+28     	; 0x584 <__addsf3x+0x9c>
 568:	ba 0f       	add	r27, r26
 56a:	62 1f       	adc	r22, r18
 56c:	73 1f       	adc	r23, r19
 56e:	84 1f       	adc	r24, r20
 570:	48 f4       	brcc	.+18     	; 0x584 <__addsf3x+0x9c>
 572:	87 95       	ror	r24
 574:	77 95       	ror	r23
 576:	67 95       	ror	r22
 578:	b7 95       	ror	r27
 57a:	f7 95       	ror	r31
 57c:	9e 3f       	cpi	r25, 0xFE	; 254
 57e:	08 f0       	brcs	.+2      	; 0x582 <__addsf3x+0x9a>
 580:	b0 cf       	rjmp	.-160    	; 0x4e2 <__addsf3+0x28>
 582:	93 95       	inc	r25
 584:	88 0f       	add	r24, r24
 586:	08 f0       	brcs	.+2      	; 0x58a <__addsf3x+0xa2>
 588:	99 27       	eor	r25, r25
 58a:	ee 0f       	add	r30, r30
 58c:	97 95       	ror	r25
 58e:	87 95       	ror	r24
 590:	08 95       	ret

00000592 <__divsf3>:
 592:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__divsf3x>
 596:	0c 94 c5 03 	jmp	0x78a	; 0x78a <__fp_round>
 59a:	0e 94 be 03 	call	0x77c	; 0x77c <__fp_pscB>
 59e:	58 f0       	brcs	.+22     	; 0x5b6 <__divsf3+0x24>
 5a0:	0e 94 b7 03 	call	0x76e	; 0x76e <__fp_pscA>
 5a4:	40 f0       	brcs	.+16     	; 0x5b6 <__divsf3+0x24>
 5a6:	29 f4       	brne	.+10     	; 0x5b2 <__divsf3+0x20>
 5a8:	5f 3f       	cpi	r21, 0xFF	; 255
 5aa:	29 f0       	breq	.+10     	; 0x5b6 <__divsf3+0x24>
 5ac:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__fp_inf>
 5b0:	51 11       	cpse	r21, r1
 5b2:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <__fp_szero>
 5b6:	0c 94 b4 03 	jmp	0x768	; 0x768 <__fp_nan>

000005ba <__divsf3x>:
 5ba:	0e 94 d6 03 	call	0x7ac	; 0x7ac <__fp_split3>
 5be:	68 f3       	brcs	.-38     	; 0x59a <__divsf3+0x8>

000005c0 <__divsf3_pse>:
 5c0:	99 23       	and	r25, r25
 5c2:	b1 f3       	breq	.-20     	; 0x5b0 <__divsf3+0x1e>
 5c4:	55 23       	and	r21, r21
 5c6:	91 f3       	breq	.-28     	; 0x5ac <__divsf3+0x1a>
 5c8:	95 1b       	sub	r25, r21
 5ca:	55 0b       	sbc	r21, r21
 5cc:	bb 27       	eor	r27, r27
 5ce:	aa 27       	eor	r26, r26
 5d0:	62 17       	cp	r22, r18
 5d2:	73 07       	cpc	r23, r19
 5d4:	84 07       	cpc	r24, r20
 5d6:	38 f0       	brcs	.+14     	; 0x5e6 <__divsf3_pse+0x26>
 5d8:	9f 5f       	subi	r25, 0xFF	; 255
 5da:	5f 4f       	sbci	r21, 0xFF	; 255
 5dc:	22 0f       	add	r18, r18
 5de:	33 1f       	adc	r19, r19
 5e0:	44 1f       	adc	r20, r20
 5e2:	aa 1f       	adc	r26, r26
 5e4:	a9 f3       	breq	.-22     	; 0x5d0 <__divsf3_pse+0x10>
 5e6:	35 d0       	rcall	.+106    	; 0x652 <__divsf3_pse+0x92>
 5e8:	0e 2e       	mov	r0, r30
 5ea:	3a f0       	brmi	.+14     	; 0x5fa <__divsf3_pse+0x3a>
 5ec:	e0 e8       	ldi	r30, 0x80	; 128
 5ee:	32 d0       	rcall	.+100    	; 0x654 <__divsf3_pse+0x94>
 5f0:	91 50       	subi	r25, 0x01	; 1
 5f2:	50 40       	sbci	r21, 0x00	; 0
 5f4:	e6 95       	lsr	r30
 5f6:	00 1c       	adc	r0, r0
 5f8:	ca f7       	brpl	.-14     	; 0x5ec <__divsf3_pse+0x2c>
 5fa:	2b d0       	rcall	.+86     	; 0x652 <__divsf3_pse+0x92>
 5fc:	fe 2f       	mov	r31, r30
 5fe:	29 d0       	rcall	.+82     	; 0x652 <__divsf3_pse+0x92>
 600:	66 0f       	add	r22, r22
 602:	77 1f       	adc	r23, r23
 604:	88 1f       	adc	r24, r24
 606:	bb 1f       	adc	r27, r27
 608:	26 17       	cp	r18, r22
 60a:	37 07       	cpc	r19, r23
 60c:	48 07       	cpc	r20, r24
 60e:	ab 07       	cpc	r26, r27
 610:	b0 e8       	ldi	r27, 0x80	; 128
 612:	09 f0       	breq	.+2      	; 0x616 <__divsf3_pse+0x56>
 614:	bb 0b       	sbc	r27, r27
 616:	80 2d       	mov	r24, r0
 618:	bf 01       	movw	r22, r30
 61a:	ff 27       	eor	r31, r31
 61c:	93 58       	subi	r25, 0x83	; 131
 61e:	5f 4f       	sbci	r21, 0xFF	; 255
 620:	3a f0       	brmi	.+14     	; 0x630 <__divsf3_pse+0x70>
 622:	9e 3f       	cpi	r25, 0xFE	; 254
 624:	51 05       	cpc	r21, r1
 626:	78 f0       	brcs	.+30     	; 0x646 <__divsf3_pse+0x86>
 628:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__fp_inf>
 62c:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <__fp_szero>
 630:	5f 3f       	cpi	r21, 0xFF	; 255
 632:	e4 f3       	brlt	.-8      	; 0x62c <__divsf3_pse+0x6c>
 634:	98 3e       	cpi	r25, 0xE8	; 232
 636:	d4 f3       	brlt	.-12     	; 0x62c <__divsf3_pse+0x6c>
 638:	86 95       	lsr	r24
 63a:	77 95       	ror	r23
 63c:	67 95       	ror	r22
 63e:	b7 95       	ror	r27
 640:	f7 95       	ror	r31
 642:	9f 5f       	subi	r25, 0xFF	; 255
 644:	c9 f7       	brne	.-14     	; 0x638 <__divsf3_pse+0x78>
 646:	88 0f       	add	r24, r24
 648:	91 1d       	adc	r25, r1
 64a:	96 95       	lsr	r25
 64c:	87 95       	ror	r24
 64e:	97 f9       	bld	r25, 7
 650:	08 95       	ret
 652:	e1 e0       	ldi	r30, 0x01	; 1
 654:	66 0f       	add	r22, r22
 656:	77 1f       	adc	r23, r23
 658:	88 1f       	adc	r24, r24
 65a:	bb 1f       	adc	r27, r27
 65c:	62 17       	cp	r22, r18
 65e:	73 07       	cpc	r23, r19
 660:	84 07       	cpc	r24, r20
 662:	ba 07       	cpc	r27, r26
 664:	20 f0       	brcs	.+8      	; 0x66e <__divsf3_pse+0xae>
 666:	62 1b       	sub	r22, r18
 668:	73 0b       	sbc	r23, r19
 66a:	84 0b       	sbc	r24, r20
 66c:	ba 0b       	sbc	r27, r26
 66e:	ee 1f       	adc	r30, r30
 670:	88 f7       	brcc	.-30     	; 0x654 <__divsf3_pse+0x94>
 672:	e0 95       	com	r30
 674:	08 95       	ret

00000676 <__fixsfsi>:
 676:	0e 94 42 03 	call	0x684	; 0x684 <__fixunssfsi>
 67a:	68 94       	set
 67c:	b1 11       	cpse	r27, r1
 67e:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <__fp_szero>
 682:	08 95       	ret

00000684 <__fixunssfsi>:
 684:	0e 94 de 03 	call	0x7bc	; 0x7bc <__fp_splitA>
 688:	88 f0       	brcs	.+34     	; 0x6ac <__fixunssfsi+0x28>
 68a:	9f 57       	subi	r25, 0x7F	; 127
 68c:	98 f0       	brcs	.+38     	; 0x6b4 <__fixunssfsi+0x30>
 68e:	b9 2f       	mov	r27, r25
 690:	99 27       	eor	r25, r25
 692:	b7 51       	subi	r27, 0x17	; 23
 694:	b0 f0       	brcs	.+44     	; 0x6c2 <__fixunssfsi+0x3e>
 696:	e1 f0       	breq	.+56     	; 0x6d0 <__fixunssfsi+0x4c>
 698:	66 0f       	add	r22, r22
 69a:	77 1f       	adc	r23, r23
 69c:	88 1f       	adc	r24, r24
 69e:	99 1f       	adc	r25, r25
 6a0:	1a f0       	brmi	.+6      	; 0x6a8 <__fixunssfsi+0x24>
 6a2:	ba 95       	dec	r27
 6a4:	c9 f7       	brne	.-14     	; 0x698 <__fixunssfsi+0x14>
 6a6:	14 c0       	rjmp	.+40     	; 0x6d0 <__fixunssfsi+0x4c>
 6a8:	b1 30       	cpi	r27, 0x01	; 1
 6aa:	91 f0       	breq	.+36     	; 0x6d0 <__fixunssfsi+0x4c>
 6ac:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <__fp_zero>
 6b0:	b1 e0       	ldi	r27, 0x01	; 1
 6b2:	08 95       	ret
 6b4:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__fp_zero>
 6b8:	67 2f       	mov	r22, r23
 6ba:	78 2f       	mov	r23, r24
 6bc:	88 27       	eor	r24, r24
 6be:	b8 5f       	subi	r27, 0xF8	; 248
 6c0:	39 f0       	breq	.+14     	; 0x6d0 <__fixunssfsi+0x4c>
 6c2:	b9 3f       	cpi	r27, 0xF9	; 249
 6c4:	cc f3       	brlt	.-14     	; 0x6b8 <__fixunssfsi+0x34>
 6c6:	86 95       	lsr	r24
 6c8:	77 95       	ror	r23
 6ca:	67 95       	ror	r22
 6cc:	b3 95       	inc	r27
 6ce:	d9 f7       	brne	.-10     	; 0x6c6 <__fixunssfsi+0x42>
 6d0:	3e f4       	brtc	.+14     	; 0x6e0 <__fixunssfsi+0x5c>
 6d2:	90 95       	com	r25
 6d4:	80 95       	com	r24
 6d6:	70 95       	com	r23
 6d8:	61 95       	neg	r22
 6da:	7f 4f       	sbci	r23, 0xFF	; 255
 6dc:	8f 4f       	sbci	r24, 0xFF	; 255
 6de:	9f 4f       	sbci	r25, 0xFF	; 255
 6e0:	08 95       	ret

000006e2 <__floatunsisf>:
 6e2:	e8 94       	clt
 6e4:	09 c0       	rjmp	.+18     	; 0x6f8 <__floatsisf+0x12>

000006e6 <__floatsisf>:
 6e6:	97 fb       	bst	r25, 7
 6e8:	3e f4       	brtc	.+14     	; 0x6f8 <__floatsisf+0x12>
 6ea:	90 95       	com	r25
 6ec:	80 95       	com	r24
 6ee:	70 95       	com	r23
 6f0:	61 95       	neg	r22
 6f2:	7f 4f       	sbci	r23, 0xFF	; 255
 6f4:	8f 4f       	sbci	r24, 0xFF	; 255
 6f6:	9f 4f       	sbci	r25, 0xFF	; 255
 6f8:	99 23       	and	r25, r25
 6fa:	a9 f0       	breq	.+42     	; 0x726 <__floatsisf+0x40>
 6fc:	f9 2f       	mov	r31, r25
 6fe:	96 e9       	ldi	r25, 0x96	; 150
 700:	bb 27       	eor	r27, r27
 702:	93 95       	inc	r25
 704:	f6 95       	lsr	r31
 706:	87 95       	ror	r24
 708:	77 95       	ror	r23
 70a:	67 95       	ror	r22
 70c:	b7 95       	ror	r27
 70e:	f1 11       	cpse	r31, r1
 710:	f8 cf       	rjmp	.-16     	; 0x702 <__floatsisf+0x1c>
 712:	fa f4       	brpl	.+62     	; 0x752 <__floatsisf+0x6c>
 714:	bb 0f       	add	r27, r27
 716:	11 f4       	brne	.+4      	; 0x71c <__floatsisf+0x36>
 718:	60 ff       	sbrs	r22, 0
 71a:	1b c0       	rjmp	.+54     	; 0x752 <__floatsisf+0x6c>
 71c:	6f 5f       	subi	r22, 0xFF	; 255
 71e:	7f 4f       	sbci	r23, 0xFF	; 255
 720:	8f 4f       	sbci	r24, 0xFF	; 255
 722:	9f 4f       	sbci	r25, 0xFF	; 255
 724:	16 c0       	rjmp	.+44     	; 0x752 <__floatsisf+0x6c>
 726:	88 23       	and	r24, r24
 728:	11 f0       	breq	.+4      	; 0x72e <__floatsisf+0x48>
 72a:	96 e9       	ldi	r25, 0x96	; 150
 72c:	11 c0       	rjmp	.+34     	; 0x750 <__floatsisf+0x6a>
 72e:	77 23       	and	r23, r23
 730:	21 f0       	breq	.+8      	; 0x73a <__floatsisf+0x54>
 732:	9e e8       	ldi	r25, 0x8E	; 142
 734:	87 2f       	mov	r24, r23
 736:	76 2f       	mov	r23, r22
 738:	05 c0       	rjmp	.+10     	; 0x744 <__floatsisf+0x5e>
 73a:	66 23       	and	r22, r22
 73c:	71 f0       	breq	.+28     	; 0x75a <__floatsisf+0x74>
 73e:	96 e8       	ldi	r25, 0x86	; 134
 740:	86 2f       	mov	r24, r22
 742:	70 e0       	ldi	r23, 0x00	; 0
 744:	60 e0       	ldi	r22, 0x00	; 0
 746:	2a f0       	brmi	.+10     	; 0x752 <__floatsisf+0x6c>
 748:	9a 95       	dec	r25
 74a:	66 0f       	add	r22, r22
 74c:	77 1f       	adc	r23, r23
 74e:	88 1f       	adc	r24, r24
 750:	da f7       	brpl	.-10     	; 0x748 <__floatsisf+0x62>
 752:	88 0f       	add	r24, r24
 754:	96 95       	lsr	r25
 756:	87 95       	ror	r24
 758:	97 f9       	bld	r25, 7
 75a:	08 95       	ret

0000075c <__fp_inf>:
 75c:	97 f9       	bld	r25, 7
 75e:	9f 67       	ori	r25, 0x7F	; 127
 760:	80 e8       	ldi	r24, 0x80	; 128
 762:	70 e0       	ldi	r23, 0x00	; 0
 764:	60 e0       	ldi	r22, 0x00	; 0
 766:	08 95       	ret

00000768 <__fp_nan>:
 768:	9f ef       	ldi	r25, 0xFF	; 255
 76a:	80 ec       	ldi	r24, 0xC0	; 192
 76c:	08 95       	ret

0000076e <__fp_pscA>:
 76e:	00 24       	eor	r0, r0
 770:	0a 94       	dec	r0
 772:	16 16       	cp	r1, r22
 774:	17 06       	cpc	r1, r23
 776:	18 06       	cpc	r1, r24
 778:	09 06       	cpc	r0, r25
 77a:	08 95       	ret

0000077c <__fp_pscB>:
 77c:	00 24       	eor	r0, r0
 77e:	0a 94       	dec	r0
 780:	12 16       	cp	r1, r18
 782:	13 06       	cpc	r1, r19
 784:	14 06       	cpc	r1, r20
 786:	05 06       	cpc	r0, r21
 788:	08 95       	ret

0000078a <__fp_round>:
 78a:	09 2e       	mov	r0, r25
 78c:	03 94       	inc	r0
 78e:	00 0c       	add	r0, r0
 790:	11 f4       	brne	.+4      	; 0x796 <__fp_round+0xc>
 792:	88 23       	and	r24, r24
 794:	52 f0       	brmi	.+20     	; 0x7aa <__fp_round+0x20>
 796:	bb 0f       	add	r27, r27
 798:	40 f4       	brcc	.+16     	; 0x7aa <__fp_round+0x20>
 79a:	bf 2b       	or	r27, r31
 79c:	11 f4       	brne	.+4      	; 0x7a2 <__fp_round+0x18>
 79e:	60 ff       	sbrs	r22, 0
 7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fp_round+0x20>
 7a2:	6f 5f       	subi	r22, 0xFF	; 255
 7a4:	7f 4f       	sbci	r23, 0xFF	; 255
 7a6:	8f 4f       	sbci	r24, 0xFF	; 255
 7a8:	9f 4f       	sbci	r25, 0xFF	; 255
 7aa:	08 95       	ret

000007ac <__fp_split3>:
 7ac:	57 fd       	sbrc	r21, 7
 7ae:	90 58       	subi	r25, 0x80	; 128
 7b0:	44 0f       	add	r20, r20
 7b2:	55 1f       	adc	r21, r21
 7b4:	59 f0       	breq	.+22     	; 0x7cc <__fp_splitA+0x10>
 7b6:	5f 3f       	cpi	r21, 0xFF	; 255
 7b8:	71 f0       	breq	.+28     	; 0x7d6 <__fp_splitA+0x1a>
 7ba:	47 95       	ror	r20

000007bc <__fp_splitA>:
 7bc:	88 0f       	add	r24, r24
 7be:	97 fb       	bst	r25, 7
 7c0:	99 1f       	adc	r25, r25
 7c2:	61 f0       	breq	.+24     	; 0x7dc <__fp_splitA+0x20>
 7c4:	9f 3f       	cpi	r25, 0xFF	; 255
 7c6:	79 f0       	breq	.+30     	; 0x7e6 <__fp_splitA+0x2a>
 7c8:	87 95       	ror	r24
 7ca:	08 95       	ret
 7cc:	12 16       	cp	r1, r18
 7ce:	13 06       	cpc	r1, r19
 7d0:	14 06       	cpc	r1, r20
 7d2:	55 1f       	adc	r21, r21
 7d4:	f2 cf       	rjmp	.-28     	; 0x7ba <__fp_split3+0xe>
 7d6:	46 95       	lsr	r20
 7d8:	f1 df       	rcall	.-30     	; 0x7bc <__fp_splitA>
 7da:	08 c0       	rjmp	.+16     	; 0x7ec <__fp_splitA+0x30>
 7dc:	16 16       	cp	r1, r22
 7de:	17 06       	cpc	r1, r23
 7e0:	18 06       	cpc	r1, r24
 7e2:	99 1f       	adc	r25, r25
 7e4:	f1 cf       	rjmp	.-30     	; 0x7c8 <__fp_splitA+0xc>
 7e6:	86 95       	lsr	r24
 7e8:	71 05       	cpc	r23, r1
 7ea:	61 05       	cpc	r22, r1
 7ec:	08 94       	sec
 7ee:	08 95       	ret

000007f0 <__fp_zero>:
 7f0:	e8 94       	clt

000007f2 <__fp_szero>:
 7f2:	bb 27       	eor	r27, r27
 7f4:	66 27       	eor	r22, r22
 7f6:	77 27       	eor	r23, r23
 7f8:	cb 01       	movw	r24, r22
 7fa:	97 f9       	bld	r25, 7
 7fc:	08 95       	ret

000007fe <__gesf2>:
 7fe:	0e 94 71 04 	call	0x8e2	; 0x8e2 <__fp_cmp>
 802:	08 f4       	brcc	.+2      	; 0x806 <__gesf2+0x8>
 804:	8f ef       	ldi	r24, 0xFF	; 255
 806:	08 95       	ret

00000808 <__mulsf3>:
 808:	0e 94 17 04 	call	0x82e	; 0x82e <__mulsf3x>
 80c:	0c 94 c5 03 	jmp	0x78a	; 0x78a <__fp_round>
 810:	0e 94 b7 03 	call	0x76e	; 0x76e <__fp_pscA>
 814:	38 f0       	brcs	.+14     	; 0x824 <__mulsf3+0x1c>
 816:	0e 94 be 03 	call	0x77c	; 0x77c <__fp_pscB>
 81a:	20 f0       	brcs	.+8      	; 0x824 <__mulsf3+0x1c>
 81c:	95 23       	and	r25, r21
 81e:	11 f0       	breq	.+4      	; 0x824 <__mulsf3+0x1c>
 820:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__fp_inf>
 824:	0c 94 b4 03 	jmp	0x768	; 0x768 <__fp_nan>
 828:	11 24       	eor	r1, r1
 82a:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <__fp_szero>

0000082e <__mulsf3x>:
 82e:	0e 94 d6 03 	call	0x7ac	; 0x7ac <__fp_split3>
 832:	70 f3       	brcs	.-36     	; 0x810 <__mulsf3+0x8>

00000834 <__mulsf3_pse>:
 834:	95 9f       	mul	r25, r21
 836:	c1 f3       	breq	.-16     	; 0x828 <__mulsf3+0x20>
 838:	95 0f       	add	r25, r21
 83a:	50 e0       	ldi	r21, 0x00	; 0
 83c:	55 1f       	adc	r21, r21
 83e:	62 9f       	mul	r22, r18
 840:	f0 01       	movw	r30, r0
 842:	72 9f       	mul	r23, r18
 844:	bb 27       	eor	r27, r27
 846:	f0 0d       	add	r31, r0
 848:	b1 1d       	adc	r27, r1
 84a:	63 9f       	mul	r22, r19
 84c:	aa 27       	eor	r26, r26
 84e:	f0 0d       	add	r31, r0
 850:	b1 1d       	adc	r27, r1
 852:	aa 1f       	adc	r26, r26
 854:	64 9f       	mul	r22, r20
 856:	66 27       	eor	r22, r22
 858:	b0 0d       	add	r27, r0
 85a:	a1 1d       	adc	r26, r1
 85c:	66 1f       	adc	r22, r22
 85e:	82 9f       	mul	r24, r18
 860:	22 27       	eor	r18, r18
 862:	b0 0d       	add	r27, r0
 864:	a1 1d       	adc	r26, r1
 866:	62 1f       	adc	r22, r18
 868:	73 9f       	mul	r23, r19
 86a:	b0 0d       	add	r27, r0
 86c:	a1 1d       	adc	r26, r1
 86e:	62 1f       	adc	r22, r18
 870:	83 9f       	mul	r24, r19
 872:	a0 0d       	add	r26, r0
 874:	61 1d       	adc	r22, r1
 876:	22 1f       	adc	r18, r18
 878:	74 9f       	mul	r23, r20
 87a:	33 27       	eor	r19, r19
 87c:	a0 0d       	add	r26, r0
 87e:	61 1d       	adc	r22, r1
 880:	23 1f       	adc	r18, r19
 882:	84 9f       	mul	r24, r20
 884:	60 0d       	add	r22, r0
 886:	21 1d       	adc	r18, r1
 888:	82 2f       	mov	r24, r18
 88a:	76 2f       	mov	r23, r22
 88c:	6a 2f       	mov	r22, r26
 88e:	11 24       	eor	r1, r1
 890:	9f 57       	subi	r25, 0x7F	; 127
 892:	50 40       	sbci	r21, 0x00	; 0
 894:	9a f0       	brmi	.+38     	; 0x8bc <__mulsf3_pse+0x88>
 896:	f1 f0       	breq	.+60     	; 0x8d4 <__mulsf3_pse+0xa0>
 898:	88 23       	and	r24, r24
 89a:	4a f0       	brmi	.+18     	; 0x8ae <__mulsf3_pse+0x7a>
 89c:	ee 0f       	add	r30, r30
 89e:	ff 1f       	adc	r31, r31
 8a0:	bb 1f       	adc	r27, r27
 8a2:	66 1f       	adc	r22, r22
 8a4:	77 1f       	adc	r23, r23
 8a6:	88 1f       	adc	r24, r24
 8a8:	91 50       	subi	r25, 0x01	; 1
 8aa:	50 40       	sbci	r21, 0x00	; 0
 8ac:	a9 f7       	brne	.-22     	; 0x898 <__mulsf3_pse+0x64>
 8ae:	9e 3f       	cpi	r25, 0xFE	; 254
 8b0:	51 05       	cpc	r21, r1
 8b2:	80 f0       	brcs	.+32     	; 0x8d4 <__mulsf3_pse+0xa0>
 8b4:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__fp_inf>
 8b8:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <__fp_szero>
 8bc:	5f 3f       	cpi	r21, 0xFF	; 255
 8be:	e4 f3       	brlt	.-8      	; 0x8b8 <__mulsf3_pse+0x84>
 8c0:	98 3e       	cpi	r25, 0xE8	; 232
 8c2:	d4 f3       	brlt	.-12     	; 0x8b8 <__mulsf3_pse+0x84>
 8c4:	86 95       	lsr	r24
 8c6:	77 95       	ror	r23
 8c8:	67 95       	ror	r22
 8ca:	b7 95       	ror	r27
 8cc:	f7 95       	ror	r31
 8ce:	e7 95       	ror	r30
 8d0:	9f 5f       	subi	r25, 0xFF	; 255
 8d2:	c1 f7       	brne	.-16     	; 0x8c4 <__mulsf3_pse+0x90>
 8d4:	fe 2b       	or	r31, r30
 8d6:	88 0f       	add	r24, r24
 8d8:	91 1d       	adc	r25, r1
 8da:	96 95       	lsr	r25
 8dc:	87 95       	ror	r24
 8de:	97 f9       	bld	r25, 7
 8e0:	08 95       	ret

000008e2 <__fp_cmp>:
 8e2:	99 0f       	add	r25, r25
 8e4:	00 08       	sbc	r0, r0
 8e6:	55 0f       	add	r21, r21
 8e8:	aa 0b       	sbc	r26, r26
 8ea:	e0 e8       	ldi	r30, 0x80	; 128
 8ec:	fe ef       	ldi	r31, 0xFE	; 254
 8ee:	16 16       	cp	r1, r22
 8f0:	17 06       	cpc	r1, r23
 8f2:	e8 07       	cpc	r30, r24
 8f4:	f9 07       	cpc	r31, r25
 8f6:	c0 f0       	brcs	.+48     	; 0x928 <__fp_cmp+0x46>
 8f8:	12 16       	cp	r1, r18
 8fa:	13 06       	cpc	r1, r19
 8fc:	e4 07       	cpc	r30, r20
 8fe:	f5 07       	cpc	r31, r21
 900:	98 f0       	brcs	.+38     	; 0x928 <__fp_cmp+0x46>
 902:	62 1b       	sub	r22, r18
 904:	73 0b       	sbc	r23, r19
 906:	84 0b       	sbc	r24, r20
 908:	95 0b       	sbc	r25, r21
 90a:	39 f4       	brne	.+14     	; 0x91a <__fp_cmp+0x38>
 90c:	0a 26       	eor	r0, r26
 90e:	61 f0       	breq	.+24     	; 0x928 <__fp_cmp+0x46>
 910:	23 2b       	or	r18, r19
 912:	24 2b       	or	r18, r20
 914:	25 2b       	or	r18, r21
 916:	21 f4       	brne	.+8      	; 0x920 <__fp_cmp+0x3e>
 918:	08 95       	ret
 91a:	0a 26       	eor	r0, r26
 91c:	09 f4       	brne	.+2      	; 0x920 <__fp_cmp+0x3e>
 91e:	a1 40       	sbci	r26, 0x01	; 1
 920:	a6 95       	lsr	r26
 922:	8f ef       	ldi	r24, 0xFF	; 255
 924:	81 1d       	adc	r24, r1
 926:	81 1d       	adc	r24, r1
 928:	08 95       	ret

0000092a <_exit>:
 92a:	f8 94       	cli

0000092c <__stop_program>:
 92c:	ff cf       	rjmp	.-2      	; 0x92c <__stop_program>
